// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basics fixtures/delete-expression.src 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "argument": Object {
          "computed": false,
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 1,
            },
            "start": Object {
              "column": 7,
              "line": 1,
            },
          },
          "object": Object {
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 1,
              },
              "start": Object {
                "column": 7,
                "line": 1,
              },
            },
            "name": "foo",
            "range": Array [
              7,
              10,
            ],
            "type": "Identifier",
          },
          "property": Object {
            "loc": Object {
              "end": Object {
                "column": 14,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "name": "bar",
            "range": Array [
              11,
              14,
            ],
            "type": "Identifier",
          },
          "range": Array [
            7,
            14,
          ],
          "type": "MemberExpression",
        },
        "loc": Object {
          "end": Object {
            "column": 14,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "operator": "delete",
        "prefix": true,
        "range": Array [
          0,
          14,
        ],
        "type": "UnaryExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 15,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        15,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 15,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    15,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/do-while-statements.src 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "loc": Object {
          "end": Object {
            "column": 3,
            "line": 1,
          },
          "start": Object {
            "column": 2,
            "line": 1,
          },
        },
        "range": Array [
          2,
          3,
        ],
        "type": "EmptyStatement",
      },
      "loc": Object {
        "end": Object {
          "column": 13,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        13,
      ],
      "test": Object {
        "loc": Object {
          "end": Object {
            "column": 11,
            "line": 1,
          },
          "start": Object {
            "column": 10,
            "line": 1,
          },
        },
        "range": Array [
          10,
          11,
        ],
        "raw": "1",
        "type": "Literal",
        "value": 1,
      },
      "type": "DoWhileStatement",
    },
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 5,
                "line": 3,
              },
              "start": Object {
                "column": 4,
                "line": 3,
              },
            },
            "name": "i",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 9,
                "line": 3,
              },
              "start": Object {
                "column": 8,
                "line": 3,
              },
            },
            "range": Array [
              23,
              24,
            ],
            "raw": "0",
            "type": "Literal",
            "value": 0,
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 3,
            },
            "start": Object {
              "column": 4,
              "line": 3,
            },
          },
          "range": Array [
            19,
            24,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 3,
        },
        "start": Object {
          "column": 0,
          "line": 3,
        },
      },
      "range": Array [
        15,
        25,
      ],
      "type": "VariableDeclaration",
    },
    Object {
      "body": Object {
        "body": Array [
          Object {
            "expression": Object {
              "left": Object {
                "loc": Object {
                  "end": Object {
                    "column": 4,
                    "line": 5,
                  },
                  "start": Object {
                    "column": 3,
                    "line": 5,
                  },
                },
                "name": "i",
                "range": Array [
                  34,
                  35,
                ],
                "type": "Identifier",
              },
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 5,
                },
                "start": Object {
                  "column": 3,
                  "line": 5,
                },
              },
              "operator": "+=",
              "range": Array [
                34,
                40,
              ],
              "right": Object {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "start": Object {
                    "column": 8,
                    "line": 5,
                  },
                },
                "range": Array [
                  39,
                  40,
                ],
                "raw": "1",
                "type": "Literal",
                "value": 1,
              },
              "type": "AssignmentExpression",
            },
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 5,
              },
              "start": Object {
                "column": 3,
                "line": 5,
              },
            },
            "range": Array [
              34,
              41,
            ],
            "type": "ExpressionStatement",
          },
        ],
        "loc": Object {
          "end": Object {
            "column": 1,
            "line": 6,
          },
          "start": Object {
            "column": 3,
            "line": 4,
          },
        },
        "range": Array [
          29,
          43,
        ],
        "type": "BlockStatement",
      },
      "loc": Object {
        "end": Object {
          "column": 16,
          "line": 6,
        },
        "start": Object {
          "column": 0,
          "line": 4,
        },
      },
      "range": Array [
        26,
        58,
      ],
      "test": Object {
        "left": Object {
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 6,
            },
            "start": Object {
              "column": 9,
              "line": 6,
            },
          },
          "name": "i",
          "range": Array [
            51,
            52,
          ],
          "type": "Identifier",
        },
        "loc": Object {
          "end": Object {
            "column": 14,
            "line": 6,
          },
          "start": Object {
            "column": 9,
            "line": 6,
          },
        },
        "operator": "<",
        "range": Array [
          51,
          56,
        ],
        "right": Object {
          "loc": Object {
            "end": Object {
              "column": 14,
              "line": 6,
            },
            "start": Object {
              "column": 13,
              "line": 6,
            },
          },
          "range": Array [
            55,
            56,
          ],
          "raw": "5",
          "type": "Literal",
          "value": 5,
        },
        "type": "BinaryExpression",
      },
      "type": "DoWhileStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 16,
      "line": 6,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    58,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/identifiers-double-underscore.src 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 10,
                "line": 1,
              },
              "start": Object {
                "column": 4,
                "line": 1,
              },
            },
            "name": "__test",
            "range": Array [
              4,
              10,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 17,
                "line": 1,
              },
              "start": Object {
                "column": 13,
                "line": 1,
              },
            },
            "range": Array [
              13,
              17,
            ],
            "raw": "'ff'",
            "type": "Literal",
            "value": "ff",
          },
          "loc": Object {
            "end": Object {
              "column": 17,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "range": Array [
            4,
            17,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "loc": Object {
        "end": Object {
          "column": 18,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        18,
      ],
      "type": "VariableDeclaration",
    },
    Object {
      "body": Object {
        "body": Array [],
        "loc": Object {
          "end": Object {
            "column": 1,
            "line": 5,
          },
          "start": Object {
            "column": 12,
            "line": 3,
          },
        },
        "range": Array [
          32,
          36,
        ],
        "type": "ClassBody",
      },
      "decorators": Array [],
      "id": Object {
        "loc": Object {
          "end": Object {
            "column": 11,
            "line": 3,
          },
          "start": Object {
            "column": 6,
            "line": 3,
          },
        },
        "name": "__Foo",
        "range": Array [
          26,
          31,
        ],
        "type": "Identifier",
      },
      "implements": Array [],
      "loc": Object {
        "end": Object {
          "column": 1,
          "line": 5,
        },
        "start": Object {
          "column": 0,
          "line": 3,
        },
      },
      "range": Array [
        20,
        36,
      ],
      "superClass": null,
      "type": "ClassDeclaration",
    },
    Object {
      "async": false,
      "body": Object {
        "body": Array [],
        "loc": Object {
          "end": Object {
            "column": 1,
            "line": 9,
          },
          "start": Object {
            "column": 17,
            "line": 7,
          },
        },
        "range": Array [
          55,
          59,
        ],
        "type": "BlockStatement",
      },
      "expression": false,
      "generator": false,
      "id": Object {
        "loc": Object {
          "end": Object {
            "column": 14,
            "line": 7,
          },
          "start": Object {
            "column": 9,
            "line": 7,
          },
        },
        "name": "__Bar",
        "range": Array [
          47,
          52,
        ],
        "type": "Identifier",
      },
      "loc": Object {
        "end": Object {
          "column": 1,
          "line": 9,
        },
        "start": Object {
          "column": 0,
          "line": 7,
        },
      },
      "params": Array [],
      "range": Array [
        38,
        59,
      ],
      "type": "FunctionDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 1,
      "line": 9,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    59,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/instanceof.src 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "left": Object {
          "loc": Object {
            "end": Object {
              "column": 2,
              "line": 1,
            },
            "start": Object {
              "column": 0,
              "line": 1,
            },
          },
          "range": Array [
            0,
            2,
          ],
          "raw": "''",
          "type": "Literal",
          "value": "",
        },
        "loc": Object {
          "end": Object {
            "column": 17,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "operator": "instanceof",
        "range": Array [
          0,
          17,
        ],
        "right": Object {
          "loc": Object {
            "end": Object {
              "column": 17,
              "line": 1,
            },
            "start": Object {
              "column": 14,
              "line": 1,
            },
          },
          "name": "Set",
          "range": Array [
            14,
            17,
          ],
          "type": "Identifier",
        },
        "type": "BinaryExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 17,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        17,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 17,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    17,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/new-with-member-expression.src 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "arguments": Array [],
        "callee": Object {
          "computed": false,
          "loc": Object {
            "end": Object {
              "column": 11,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "object": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 4,
                "line": 1,
              },
            },
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "property": Object {
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 1,
              },
              "start": Object {
                "column": 8,
                "line": 1,
              },
            },
            "name": "bar",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "range": Array [
            4,
            11,
          ],
          "type": "MemberExpression",
        },
        "loc": Object {
          "end": Object {
            "column": 13,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "range": Array [
          0,
          13,
        ],
        "type": "NewExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        14,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    14,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/new-without-parens.src 1`] = `
Object {
  "body": Array [
    Object {
      "async": false,
      "body": Object {
        "body": Array [],
        "loc": Object {
          "end": Object {
            "column": 16,
            "line": 1,
          },
          "start": Object {
            "column": 14,
            "line": 1,
          },
        },
        "range": Array [
          14,
          16,
        ],
        "type": "BlockStatement",
      },
      "expression": false,
      "generator": false,
      "id": Object {
        "loc": Object {
          "end": Object {
            "column": 10,
            "line": 1,
          },
          "start": Object {
            "column": 9,
            "line": 1,
          },
        },
        "name": "X",
        "range": Array [
          9,
          10,
        ],
        "type": "Identifier",
      },
      "loc": Object {
        "end": Object {
          "column": 16,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "params": Array [],
      "range": Array [
        0,
        16,
      ],
      "type": "FunctionDeclaration",
    },
    Object {
      "expression": Object {
        "arguments": Array [],
        "callee": Object {
          "loc": Object {
            "end": Object {
              "column": 5,
              "line": 2,
            },
            "start": Object {
              "column": 4,
              "line": 2,
            },
          },
          "name": "X",
          "range": Array [
            21,
            22,
          ],
          "type": "Identifier",
        },
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 2,
          },
          "start": Object {
            "column": 0,
            "line": 2,
          },
        },
        "range": Array [
          17,
          22,
        ],
        "type": "NewExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 6,
          "line": 2,
        },
        "start": Object {
          "column": 0,
          "line": 2,
        },
      },
      "range": Array [
        17,
        23,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 6,
      "line": 2,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    23,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/typeof-expression.src 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "argument": Object {
          "loc": Object {
            "end": Object {
              "column": 12,
              "line": 1,
            },
            "start": Object {
              "column": 7,
              "line": 1,
            },
          },
          "range": Array [
            7,
            12,
          ],
          "raw": "'str'",
          "type": "Literal",
          "value": "str",
        },
        "loc": Object {
          "end": Object {
            "column": 12,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "operator": "typeof",
        "prefix": true,
        "range": Array [
          0,
          12,
        ],
        "type": "UnaryExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 12,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        12,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 12,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    12,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/update-expression.src 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 5,
                "line": 1,
              },
              "start": Object {
                "column": 4,
                "line": 1,
              },
            },
            "name": "i",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 9,
                "line": 1,
              },
              "start": Object {
                "column": 8,
                "line": 1,
              },
            },
            "range": Array [
              8,
              9,
            ],
            "raw": "0",
            "type": "Literal",
            "value": 0,
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "range": Array [
            4,
            9,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "var",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        10,
      ],
      "type": "VariableDeclaration",
    },
    Object {
      "async": false,
      "body": Object {
        "body": Array [
          Object {
            "expression": Object {
              "argument": Object {
                "loc": Object {
                  "end": Object {
                    "column": 3,
                    "line": 3,
                  },
                  "start": Object {
                    "column": 2,
                    "line": 3,
                  },
                },
                "name": "i",
                "range": Array [
                  28,
                  29,
                ],
                "type": "Identifier",
              },
              "loc": Object {
                "end": Object {
                  "column": 5,
                  "line": 3,
                },
                "start": Object {
                  "column": 2,
                  "line": 3,
                },
              },
              "operator": "++",
              "prefix": false,
              "range": Array [
                28,
                31,
              ],
              "type": "UpdateExpression",
            },
            "loc": Object {
              "end": Object {
                "column": 6,
                "line": 3,
              },
              "start": Object {
                "column": 2,
                "line": 3,
              },
            },
            "range": Array [
              28,
              32,
            ],
            "type": "ExpressionStatement",
          },
        ],
        "loc": Object {
          "end": Object {
            "column": 1,
            "line": 4,
          },
          "start": Object {
            "column": 13,
            "line": 2,
          },
        },
        "range": Array [
          24,
          34,
        ],
        "type": "BlockStatement",
      },
      "expression": false,
      "generator": false,
      "id": Object {
        "loc": Object {
          "end": Object {
            "column": 10,
            "line": 2,
          },
          "start": Object {
            "column": 9,
            "line": 2,
          },
        },
        "name": "f",
        "range": Array [
          20,
          21,
        ],
        "type": "Identifier",
      },
      "loc": Object {
        "end": Object {
          "column": 1,
          "line": 4,
        },
        "start": Object {
          "column": 0,
          "line": 2,
        },
      },
      "params": Array [],
      "range": Array [
        11,
        34,
      ],
      "type": "FunctionDeclaration",
    },
    Object {
      "expression": Object {
        "arguments": Array [],
        "callee": Object {
          "loc": Object {
            "end": Object {
              "column": 1,
              "line": 5,
            },
            "start": Object {
              "column": 0,
              "line": 5,
            },
          },
          "name": "f",
          "range": Array [
            35,
            36,
          ],
          "type": "Identifier",
        },
        "loc": Object {
          "end": Object {
            "column": 3,
            "line": 5,
          },
          "start": Object {
            "column": 0,
            "line": 5,
          },
        },
        "range": Array [
          35,
          38,
        ],
        "type": "CallExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 4,
          "line": 5,
        },
        "start": Object {
          "column": 0,
          "line": 5,
        },
      },
      "range": Array [
        35,
        39,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 4,
      "line": 5,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    39,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`basics fixtures/void-expression.src 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "argument": Object {
          "loc": Object {
            "end": Object {
              "column": 6,
              "line": 1,
            },
            "start": Object {
              "column": 5,
              "line": 1,
            },
          },
          "range": Array [
            5,
            6,
          ],
          "raw": "4",
          "type": "Literal",
          "value": 4,
        },
        "loc": Object {
          "end": Object {
            "column": 6,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "operator": "void",
        "prefix": true,
        "range": Array [
          0,
          6,
        ],
        "type": "UnaryExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 7,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        7,
      ],
      "type": "ExpressionStatement",
    },
    Object {
      "expression": Object {
        "argument": Object {
          "loc": Object {
            "end": Object {
              "column": 6,
              "line": 2,
            },
            "start": Object {
              "column": 5,
              "line": 2,
            },
          },
          "range": Array [
            13,
            14,
          ],
          "raw": "3",
          "type": "Literal",
          "value": 3,
        },
        "loc": Object {
          "end": Object {
            "column": 7,
            "line": 2,
          },
          "start": Object {
            "column": 0,
            "line": 2,
          },
        },
        "operator": "void",
        "prefix": true,
        "range": Array [
          8,
          15,
        ],
        "type": "UnaryExpression",
      },
      "loc": Object {
        "end": Object {
          "column": 8,
          "line": 2,
        },
        "start": Object {
          "column": 0,
          "line": 2,
        },
      },
      "range": Array [
        8,
        16,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 8,
      "line": 2,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    16,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;
