// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating rule docs consistent-generic-constructors.mdx code examples ESLint output 1`] = `
"Incorrect
Options: "constructor"

const map: Map<string, number> = new Map();
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ The generic type arguments should be specified as part of the constructor type arguments.
const set: Set<string> = new Set();
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ The generic type arguments should be specified as part of the constructor type arguments.
"
`;

exports[`Validating rule docs consistent-generic-constructors.mdx code examples ESLint output 2`] = `
"Correct
Options: "constructor"

const map = new Map<string, number>();
const map: Map<string, number> = new MyMap();
const set = new Set<string>();
const set = new Set();
const set: Set<string> = new Set<string>();
"
`;

exports[`Validating rule docs consistent-generic-constructors.mdx code examples ESLint output 3`] = `
"Incorrect
Options: "type-annotation"

const map = new Map<string, number>();
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ The generic type arguments should be specified as part of the type annotation.
const set = new Set<string>();
      ~~~~~~~~~~~~~~~~~~~~~~~ The generic type arguments should be specified as part of the type annotation.
"
`;

exports[`Validating rule docs consistent-generic-constructors.mdx code examples ESLint output 4`] = `
"Correct
Options: "type-annotation"

const map: Map<string, number> = new Map();
const set: Set<string> = new Set();
const set = new Set();
const set: Set<string> = new Set<string>();
"
`;
