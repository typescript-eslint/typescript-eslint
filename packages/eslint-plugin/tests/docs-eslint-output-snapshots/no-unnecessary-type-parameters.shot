// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating rule docs no-unnecessary-type-parameters.mdx code examples ESLint output 1`] = `
"Incorrect

function second<A, B>(a: A, b: B): B {
                ~ Type parameter A is used only once in the function signature.
  return b;
}

function parseJSON<T>(input: string): T {
                   ~ Type parameter T is used only once in the function signature.
  return JSON.parse(input);
}

function printProperty<T, K extends keyof T>(obj: T, key: K) {
                          ~~~~~~~~~~~~~~~~~ Type parameter K is used only once in the function signature.
  console.log(obj[key]);
}
"
`;

exports[`Validating rule docs no-unnecessary-type-parameters.mdx code examples ESLint output 2`] = `
"Correct

function second<B>(a: unknown, b: B): B {
  return b;
}

function parseJSON(input: string): unknown {
  return JSON.parse(input);
}

function printProperty<T>(obj: T, key: keyof T) {
  console.log(obj[key]);
}

// T appears twice: in the type of arg and as the return type
function identity<T>(arg: T): T {
  return arg;
}

// T appears twice: "keyof T" and in the inferred return type (T[K]).
// K appears twice: "key: K" and in the inferred return type (T[K]).
function getProperty<T, K extends keyof T>(obj: T, key: K) {
  return obj[key];
}
"
`;
