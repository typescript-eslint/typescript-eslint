// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating rule docs no-useless-template-literals.mdx code examples ESLint output 1`] = `
"Incorrect

const ab1 = \`\${'a'}\${'b'}\`;
               ~~~ Template literal expression is unnecessary and can be simplified.
                     ~~~ Template literal expression is unnecessary and can be simplified.
const ab2 = \`a\${'b'}\`;
                ~~~ Template literal expression is unnecessary and can be simplified.

const stringWithNumber = \`\${'1 + 1 = '}\${2}\`;
                            ~~~~~~~~~~ Template literal expression is unnecessary and can be simplified.
                                         ~ Template literal expression is unnecessary and can be simplified.

const stringWithBoolean = \`\${'true is '}\${true}\`;
                             ~~~~~~~~~~ Template literal expression is unnecessary and can be simplified.
                                          ~~~~ Template literal expression is unnecessary and can be simplified.

const text = 'a';
const wrappedText = \`\${text}\`;
                       ~~~~ Template literal expression is unnecessary and can be simplified.

declare const intersectionWithString: string & { _brand: 'test-brand' };
const wrappedIntersection = \`\${intersectionWithString}\`;
                               ~~~~~~~~~~~~~~~~~~~~~~ Template literal expression is unnecessary and can be simplified.
"
`;

exports[`Validating rule docs no-useless-template-literals.mdx code examples ESLint output 2`] = `
"Correct

const ab1 = 'ab';
const ab2 = 'ab';

const stringWithNumber = \`1 + 1 = 2\`;

const stringWithBoolean = \`true is true\`;

const text = 'a';
const wrappedText = text;

declare const intersectionWithString: string & { _brand: 'test-brand' };
const wrappedIntersection = intersectionWithString;
"
`;
