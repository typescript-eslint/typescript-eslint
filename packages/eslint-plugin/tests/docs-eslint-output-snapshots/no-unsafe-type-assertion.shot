// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Validating rule docs > no-unsafe-type-assertion.mdx > code examples ESLint output`]
Incorrect

function f() {
  return Math.random() < 0.5 ? 42 : 'oops';
}

const z = f() as number;
          ~~~~~~~~~~~~~ Unsafe type assertion: type 'number' is more narrow than the original type.

const items = [1, '2', 3, '4'];

const number = items[0] as number;
               ~~~~~~~~~~~~~~~~~~ Unsafe type assertion: type 'number' is more narrow than the original type.

exports[`Validating rule docs > no-unsafe-type-assertion.mdx > code examples ESLint output`]
Correct

function f() {
  return Math.random() < 0.5 ? 42 : 'oops';
}

const z = f() as number | string | boolean;

const items = [1, '2', 3, '4'];

const number = items[0] as number | string | undefined;
