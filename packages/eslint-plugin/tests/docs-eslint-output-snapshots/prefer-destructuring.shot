// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Validating rule docs > prefer-destructuring.mdx > code examples ESLint output`]

const x: string = obj.x; // This is incorrect and the auto fixer provides following untyped fix.
// const { x } = obj;

exports[`Validating rule docs > prefer-destructuring.mdx > code examples ESLint output`]

const x: string = obj.x; // This is correct by default. You can also forbid this by an option.

exports[`Validating rule docs > prefer-destructuring.mdx > code examples ESLint output`]
Incorrect

const x = ['a'];
const y = x[0];
      ~~~~~~~~ Use array destructuring.

exports[`Validating rule docs > prefer-destructuring.mdx > code examples ESLint output`]
Correct

const x = { 0: 'a' };
const y = x[0];

exports[`Validating rule docs > prefer-destructuring.mdx > code examples ESLint output`]
Incorrect
Options: { "object": true }, { "enforceForDeclarationWithTypeAnnotation": true }

const x: string = obj.x;
      ~~~~~~~~~~~~~~~~~ Use object destructuring.

exports[`Validating rule docs > prefer-destructuring.mdx > code examples ESLint output`]
Correct
Options: { "object": true }, { "enforceForDeclarationWithTypeAnnotation": true }

const { x }: { x: string } = obj;
