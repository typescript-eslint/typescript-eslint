Incorrect

declare const foo: string;

// starts with
foo[0] === 'b';
~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.
foo.charAt(0) === 'b';
~~~~~~~~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.
foo.indexOf('bar') === 0;
~~~~~~~~~~~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.
foo.slice(0, 3) === 'bar';
~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.
foo.substring(0, 3) === 'bar';
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.
foo.match(/^bar/) != null;
~~~~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.
/^bar/.test(foo);
~~~~~~~~~~~~~~~~ Use 'String#startsWith' method instead.

// ends with
foo[foo.length - 1] === 'b';
~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.
foo.charAt(foo.length - 1) === 'b';
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.
foo.lastIndexOf('bar') === foo.length - 3;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.
foo.slice(-3) === 'bar';
~~~~~~~~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.
foo.substring(foo.length - 3) === 'bar';
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.
foo.match(/bar$/) != null;
~~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.
/bar$/.test(foo);
~~~~~~~~~~~~~~~~ Use the 'String#endsWith' method instead.

Correct

declare const foo: string;

// starts with
foo.startsWith('bar');

// ends with
foo.endsWith('bar');

Options: { "allowSingleElementEquality": "always" }

declare const text: string;

text[0] === 'a';
text[0] === text[0].toUpperCase();
text[0] === text[1];
text[text.length - 1] === 'b';
