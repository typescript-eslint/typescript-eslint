// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating rule docs no-wrapper-object-types.mdx code examples ESLint output 1`] = `
"Incorrect

let myBigInt: BigInt;
              ~~~~~~ Prefer using the primitive \`bigint\` as a type name, rather than the upper-cased \`BigInt\`.
let myBoolean: Boolean;
               ~~~~~~~ Prefer using the primitive \`boolean\` as a type name, rather than the upper-cased \`Boolean\`.
let myNumber: Number;
              ~~~~~~ Prefer using the primitive \`number\` as a type name, rather than the upper-cased \`Number\`.
let myString: String;
              ~~~~~~ Prefer using the primitive \`string\` as a type name, rather than the upper-cased \`String\`.
let mySymbol: Symbol;
              ~~~~~~ Prefer using the primitive \`symbol\` as a type name, rather than the upper-cased \`Symbol\`.

let myObject: Object = 'allowed by TypeScript';
              ~~~~~~ Prefer using the primitive \`object\` as a type name, rather than the upper-cased \`Object\`.
"
`;

exports[`Validating rule docs no-wrapper-object-types.mdx code examples ESLint output 2`] = `
"Correct

let myBigint: bigint;
let myBoolean: boolean;
let myNumber: number;
let myString: string;
let mySymbol: symbol;

let myObject: object = "Type 'string' is not assignable to type 'object'.";
"
`;
