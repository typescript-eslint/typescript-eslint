// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Validating rule docs > no-unsafe-function-type.mdx > code examples ESLint output`]
Incorrect

let noParametersOrReturn: Function;
                          ~~~~~~~~ The `Function` type accepts any function-like value.
                                   Prefer explicitly defining any function parameters and return type.
noParametersOrReturn = () => {};

let stringToNumber: Function;
                    ~~~~~~~~ The `Function` type accepts any function-like value.
                             Prefer explicitly defining any function parameters and return type.
stringToNumber = (text: string) => text.length;

let identity: Function;
              ~~~~~~~~ The `Function` type accepts any function-like value.
                       Prefer explicitly defining any function parameters and return type.
identity = value => value;

exports[`Validating rule docs > no-unsafe-function-type.mdx > code examples ESLint output`]
Correct

let noParametersOrReturn: () => void;
noParametersOrReturn = () => {};

let stringToNumber: (text: string) => number;
stringToNumber = text => text.length;

let identity: <T>(value: T) => T;
identity = value => value;
