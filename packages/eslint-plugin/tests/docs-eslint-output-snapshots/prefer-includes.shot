// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating rule docs prefer-includes.mdx code examples ESLint output 1`] = `
"Incorrect

const str: string;
const array: any[];
const readonlyArray: ReadonlyArray<any>;
const typedArray: UInt8Array;
const maybe: string;
const userDefined: {
  indexOf(x: any): number;
  includes(x: any): boolean;
};

str.indexOf(value) !== -1;
~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'includes()' method instead.
array.indexOf(value) !== -1;
~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'includes()' method instead.
readonlyArray.indexOf(value) === -1;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'includes()' method instead.
typedArray.indexOf(value) > -1;
maybe?.indexOf('') !== -1;
~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'includes()' method instead.
userDefined.indexOf(value) >= 0;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Use 'includes()' method instead.

/example/.test(str);
~~~~~~~~~~~~~~~~~~~ Use \`String#includes()\` method with a string instead.
"
`;

exports[`Validating rule docs prefer-includes.mdx code examples ESLint output 2`] = `
"Correct

const str: string;
const array: any[];
const readonlyArray: ReadonlyArray<any>;
const typedArray: UInt8Array;
const maybe: string;
const userDefined: {
  indexOf(x: any): number;
  includes(x: any): boolean;
};

str.includes(value);
array.includes(value);
!readonlyArray.includes(value);
typedArray.includes(value);
maybe?.includes('');
userDefined.includes(value);

str.includes('example');

// The two methods have different parameters.
declare const mismatchExample: {
  indexOf(x: unknown, fromIndex?: number): number;
  includes(x: unknown): boolean;
};
mismatchExample.indexOf(value) >= 0;
"
`;
