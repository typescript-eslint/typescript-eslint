// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rule schemas should be convertible to TS types for documentation purposes lines-around-comment 1`] = `
"
# SCHEMA:

[
  {
    "additionalProperties": false,
    "properties": {
      "afterBlockComment": {
        "default": false,
        "type": "boolean"
      },
      "afterLineComment": {
        "default": false,
        "type": "boolean"
      },
      "allowArrayEnd": {
        "type": "boolean"
      },
      "allowArrayStart": {
        "type": "boolean"
      },
      "allowBlockEnd": {
        "default": false,
        "type": "boolean"
      },
      "allowBlockStart": {
        "default": false,
        "type": "boolean"
      },
      "allowClassEnd": {
        "type": "boolean"
      },
      "allowClassStart": {
        "type": "boolean"
      },
      "allowEnumEnd": {
        "type": "boolean"
      },
      "allowEnumStart": {
        "type": "boolean"
      },
      "allowInterfaceEnd": {
        "type": "boolean"
      },
      "allowInterfaceStart": {
        "type": "boolean"
      },
      "allowModuleEnd": {
        "type": "boolean"
      },
      "allowModuleStart": {
        "type": "boolean"
      },
      "allowObjectEnd": {
        "type": "boolean"
      },
      "allowObjectStart": {
        "type": "boolean"
      },
      "allowTypeEnd": {
        "type": "boolean"
      },
      "allowTypeStart": {
        "type": "boolean"
      },
      "applyDefaultIgnorePatterns": {
        "type": "boolean"
      },
      "beforeBlockComment": {
        "default": true,
        "type": "boolean"
      },
      "beforeLineComment": {
        "default": false,
        "type": "boolean"
      },
      "ignorePattern": {
        "type": "string"
      }
    },
    "type": "object"
  }
]


# TYPES:

type Options = [
  {
    afterBlockComment?: boolean;
    afterLineComment?: boolean;
    allowArrayEnd?: boolean;
    allowArrayStart?: boolean;
    allowBlockEnd?: boolean;
    allowBlockStart?: boolean;
    allowClassEnd?: boolean;
    allowClassStart?: boolean;
    allowEnumEnd?: boolean;
    allowEnumStart?: boolean;
    allowInterfaceEnd?: boolean;
    allowInterfaceStart?: boolean;
    allowModuleEnd?: boolean;
    allowModuleStart?: boolean;
    allowObjectEnd?: boolean;
    allowObjectStart?: boolean;
    allowTypeEnd?: boolean;
    allowTypeStart?: boolean;
    applyDefaultIgnorePatterns?: boolean;
    beforeBlockComment?: boolean;
    beforeLineComment?: boolean;
    ignorePattern?: string;
  },
];
"
`;
