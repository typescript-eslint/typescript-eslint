// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rule schemas should be convertible to TS types for documentation purposes no-invalid-void-type 1`] = `
"
# SCHEMA:

[
  {
    "additionalProperties": false,
    "properties": {
      "allowAsThisParameter": {
        "description": "Whether a \`this\` parameter of a function may be \`void\`.",
        "type": "boolean"
      },
      "allowInGenericTypeArguments": {
        "description": "Whether \`void\` can be used as a valid value for generic type parameters.",
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        ]
      }
    },
    "type": "object"
  }
]


# TYPES:

type Options = [
  {
    /** Whether a \`this\` parameter of a function may be \`void\`. */
    allowAsThisParameter?: boolean;
    /** Whether \`void\` can be used as a valid value for generic type parameters. */
    allowInGenericTypeArguments?:
      | [string, ...string[]]
      /** Whether \`void\` can be used as a valid value for generic type parameters. */
      | boolean;
  },
];
"
`;
