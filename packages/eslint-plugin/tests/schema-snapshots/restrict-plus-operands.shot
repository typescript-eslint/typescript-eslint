// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rule schemas should be convertible to TS types for documentation purposes restrict-plus-operands 1`] = `
"
# SCHEMA:

[
  {
    "additionalProperties": false,
    "properties": {
      "allowAny": {
        "description": "Whether to allow \`any\` typed values.",
        "type": "boolean"
      },
      "allowBoolean": {
        "description": "Whether to allow \`boolean\` typed values.",
        "type": "boolean"
      },
      "allowNullish": {
        "description": "Whether to allow potentially \`null\` or \`undefined\` typed values.",
        "type": "boolean"
      },
      "allowNumberAndString": {
        "description": "Whether to allow \`bigint\`/\`number\` typed values and \`string\` typed values to be added together.",
        "type": "boolean"
      },
      "allowRegExp": {
        "description": "Whether to allow \`regexp\` typed values.",
        "type": "boolean"
      },
      "skipCompoundAssignments": {
        "description": "Whether to skip compound assignments such as \`+=\`.",
        "type": "boolean"
      }
    },
    "type": "object"
  }
]


# TYPES:

type Options = [
  {
    /** Whether to allow \`any\` typed values. */
    allowAny?: boolean;
    /** Whether to allow \`boolean\` typed values. */
    allowBoolean?: boolean;
    /** Whether to allow potentially \`null\` or \`undefined\` typed values. */
    allowNullish?: boolean;
    /** Whether to allow \`bigint\`/\`number\` typed values and \`string\` typed values to be added together. */
    allowNumberAndString?: boolean;
    /** Whether to allow \`regexp\` typed values. */
    allowRegExp?: boolean;
    /** Whether to skip compound assignments such as \`+=\`. */
    skipCompoundAssignments?: boolean;
  },
];
"
`;
