// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rule schemas should be convertible to TS types for documentation purposes no-confusing-void-expression 1`] = `
"
# SCHEMA:

[
  {
    "additionalProperties": false,
    "properties": {
      "ignoreArrowShorthand": {
        "description": "Whether to ignore \\"shorthand\\" \`() =>\` arrow functions: those without \`{ ... }\` braces.",
        "type": "boolean"
      },
      "ignoreVoidOperator": {
        "description": "Whether to ignore returns that start with the \`void\` operator.",
        "type": "boolean"
      }
    },
    "type": "object"
  }
]


# TYPES:

type Options = [
  {
    /** Whether to ignore "shorthand" \`() =>\` arrow functions: those without \`{ ... }\` braces. */
    ignoreArrowShorthand?: boolean;
    /** Whether to ignore returns that start with the \`void\` operator. */
    ignoreVoidOperator?: boolean;
  },
];
"
`;
