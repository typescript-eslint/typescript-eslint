// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typescript fixtures/babylon-convergence/type-parameter-whitespace-loc.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              24,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/babylon-convergence/type-parameters.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              42,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  42,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-abstract-constructor.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      68,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          68,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              68,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "AbstractSocket": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AbstractSocket",
                    "range": Array [
                      22,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      68,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AbstractSocket",
                  "range": Array [
                    22,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AbstractSocket",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "AbstractSocket": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AbstractSocket",
                "range": Array [
                  22,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  68,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AbstractSocket",
              "range": Array [
                22,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AbstractSocket",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-abstract-method.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      86,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          86,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              86,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "AbstractSocket": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AbstractSocket",
                    "range": Array [
                      22,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      86,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AbstractSocket",
                  "range": Array [
                    22,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AbstractSocket",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "AbstractSocket": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AbstractSocket",
                "range": Array [
                  22,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  86,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AbstractSocket",
              "range": Array [
                22,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AbstractSocket",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-abstract-properties.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              62,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      15,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      62,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    15,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  62,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-abstract-readonly-property.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      66,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          66,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              65,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      15,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      65,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    15,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  65,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-abstract-static-constructor.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      74,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          74,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              73,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "AbstractSocket": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AbstractSocket",
                    "range": Array [
                      22,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      73,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AbstractSocket",
                  "range": Array [
                    22,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AbstractSocket",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "AbstractSocket": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AbstractSocket",
                "range": Array [
                  22,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  73,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AbstractSocket",
              "range": Array [
                22,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AbstractSocket",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-declare-properties.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      230,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          230,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              229,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "AbstractDeclProps": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AbstractDeclProps",
                    "range": Array [
                      15,
                      32,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      229,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AbstractDeclProps",
                  "range": Array [
                    15,
                    32,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AbstractDeclProps",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "AbstractDeclProps": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AbstractDeclProps",
                "range": Array [
                  15,
                  32,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  229,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AbstractDeclProps",
              "range": Array [
                15,
                32,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AbstractDeclProps",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-class-with-optional-method.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      78,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          78,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              78,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "AbstractSocket": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AbstractSocket",
                    "range": Array [
                      22,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      78,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AbstractSocket",
                  "range": Array [
                    22,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AbstractSocket",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "AbstractSocket": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AbstractSocket",
                "range": Array [
                  22,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  78,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AbstractSocket",
              "range": Array [
                22,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AbstractSocket",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/abstract-interface.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/angle-bracket-type-assertion.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              27,
            ],
            "type": "TSTypeAssertion",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/angle-bracket-type-assertion-arrow-function.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      45,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          45,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              22,
              42,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "n",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "n": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "n",
                    "range": Array [
                      23,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      22,
                      42,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "n",
                  "range": Array [
                    23,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "n",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "asserted2",
            "range": Array [
              4,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              16,
              43,
            ],
            "type": "TSTypeAssertion",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "asserted2": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "asserted2",
                "range": Array [
                  4,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  43,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "asserted2",
              "range": Array [
                4,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "asserted2",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/arrow-function-with-optional-parameter.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              1,
              14,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "k",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "k": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "k",
                    "range": Array [
                      2,
                      4,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      14,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "k",
                  "range": Array [
                    2,
                    4,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "k",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/arrow-function-with-type-parameters.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              33,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "b",
                "range": Array [
                  29,
                  30,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "b": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      4,
                      8,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      33,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    4,
                    8,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/async-function-expression.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              1,
              26,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [
            Object {
              "$id": 2,
              "block": Object {
                "range": Array [
                  1,
                  26,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 3,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 1,
                },
              },
              "variableScope": Object {
                "$ref": 2,
              },
              "variables": Array [
                Object {
                  "$id": 1,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 2,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": true,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function-expression-name",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "test": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "test",
                    "range": Array [
                      16,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      26,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "FunctionName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "test",
                  "range": Array [
                    16,
                    20,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "test",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/async-function-with-var-declaration.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      97,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          97,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              96,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  32,
                  35,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  38,
                  43,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  53,
                  56,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": Object {
                "range": Array [
                  59,
                  64,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "fooBar",
                "range": Array [
                  76,
                  82,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": Object {
                "range": Array [
                  85,
                  93,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "bar": Object {
              "$ref": 3,
            },
            "foo": Object {
              "$ref": 2,
            },
            "fooBar": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      32,
                      35,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      32,
                      43,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      28,
                      44,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    32,
                    35,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      53,
                      56,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      53,
                      64,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      49,
                      65,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    53,
                    56,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "fooBar",
                    "range": Array [
                      76,
                      82,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      76,
                      93,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      70,
                      94,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "fooBar",
                  "range": Array [
                    76,
                    82,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "fooBar",
              "references": Array [
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "test",
                "range": Array [
                  15,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  96,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "test",
              "range": Array [
                15,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "test",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/await-without-async-function.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      64,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          64,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              63,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  25,
                  28,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  31,
                  42,
                ],
                "type": "AwaitExpression",
              },
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "baz",
                "range": Array [
                  37,
                  40,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  53,
                  56,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "bar": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      25,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      25,
                      42,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      19,
                      43,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    25,
                    28,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  63,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/call-signatures.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      62,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          62,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/call-signatures-with-generics.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      68,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          68,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/cast-as-expression.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/cast-as-multi.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/cast-as-multi-assign.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/cast-as-operator.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/cast-as-simple.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              20,
            ],
            "type": "TSAsExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  20,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-multi-line-keyword-abstract.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              9,
              19,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "B": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "B",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      9,
                      19,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "B",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "B",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "abstract",
            "range": Array [
              0,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "B": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "B",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  19,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "B",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "B",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-multi-line-keyword-declare.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              8,
              18,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "B": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "B",
                    "range": Array [
                      14,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      8,
                      18,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "B",
                  "range": Array [
                    14,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "B",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "declare",
            "range": Array [
              0,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "B": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "B",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  18,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "B",
              "range": Array [
                14,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "B",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-accessibility-modifiers.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      174,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          174,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              173,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  82,
                  111,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  131,
                  171,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 6,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "bar",
                    "range": Array [
                      163,
                      166,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 5,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
                "bar": Object {
                  "$ref": 5,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 5,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          132,
                          144,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          131,
                          171,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        132,
                        144,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [
                    Object {
                      "$ref": 6,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      173,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  173,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-constructor-and-modifier.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      74,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          74,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              73,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  33,
                  39,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  65,
                  71,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      73,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  73,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-constructor-and-return-type.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      73,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          73,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              72,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  23,
                  37,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  56,
                  70,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      72,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  72,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-constructor-and-type-parameters.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              62,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  23,
                  32,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  51,
                  60,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      62,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  62,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-declare-properties.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      271,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          271,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              270,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "DeclProps": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "DeclProps",
                    "range": Array [
                      6,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      270,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "DeclProps",
                  "range": Array [
                    6,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "DeclProps",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "DeclProps": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "DeclProps",
                "range": Array [
                  6,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  270,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "DeclProps",
              "range": Array [
                6,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "DeclProps",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-definite-assignment.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              25,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "X": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "X",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      25,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "X",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "X",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "X": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-export-parameter-properties.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      58,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          58,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              56,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  27,
                  54,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 3,
                },
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          35,
                          44,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          27,
                          54,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        35,
                        44,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      56,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  56,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-extends-and-implements.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          81,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              80,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "ClassWithParentAndInterface": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "ClassWithParentAndInterface",
                    "range": Array [
                      6,
                      33,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      80,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "ClassWithParentAndInterface",
                  "range": Array [
                    6,
                    33,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "ClassWithParentAndInterface",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "MyOtherClass",
            "range": Array [
              42,
              54,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "ClassWithParentAndInterface": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "ClassWithParentAndInterface",
                "range": Array [
                  6,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  80,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "ClassWithParentAndInterface",
              "range": Array [
                6,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "ClassWithParentAndInterface",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-extends-generic.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              32,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      32,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "Bar",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-extends-generic-multiple.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      46,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          46,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              45,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      45,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "Bar",
            "range": Array [
              31,
              34,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  45,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-generic-method.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              30,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  20,
                  28,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      30,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  30,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-generic-method-default.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              36,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  20,
                  34,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      36,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-implements.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              29,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      29,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-implements-and-extends.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          81,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              80,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "ClassWithParentAndInterface": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "ClassWithParentAndInterface",
                    "range": Array [
                      6,
                      33,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      80,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "ClassWithParentAndInterface",
                  "range": Array [
                    6,
                    33,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "ClassWithParentAndInterface",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "MyOtherClass",
            "range": Array [
              65,
              77,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "ClassWithParentAndInterface": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "ClassWithParentAndInterface",
                "range": Array [
                  6,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  80,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "ClassWithParentAndInterface",
              "range": Array [
                6,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "ClassWithParentAndInterface",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-implements-generic.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              32,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      32,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-implements-generic-multiple.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              35,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      35,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-method.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      58,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          58,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              57,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  15,
                  29,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  35,
                  44,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  50,
                  55,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      57,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  57,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-mixin.src 1`] = `
Object {
  "$id": 15,
  "block": Object {
    "range": Array [
      0,
      207,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 14,
      "block": Object {
        "range": Array [
          0,
          207,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              0,
              84,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 8,
              "block": Object {
                "range": Array [
                  60,
                  82,
                ],
                "type": "ClassExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "class",
              "upperScope": Object {
                "$ref": 9,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 9,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "Base",
                "range": Array [
                  74,
                  78,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 6,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 14,
          },
          "variableMap": Object {
            "Base": Object {
              "$ref": 6,
            },
            "arguments": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 5,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
            Object {
              "$id": 6,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Base",
                    "range": Array [
                      38,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      84,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Base",
                  "range": Array [
                    38,
                    45,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Base",
              "references": Array [
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
        Object {
          "$id": 11,
          "block": Object {
            "range": Array [
              86,
              128,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 14,
          },
          "variableMap": Object {
            "X": Object {
              "$ref": 10,
            },
          },
          "variableScope": Object {
            "$ref": 14,
          },
          "variables": Array [
            Object {
              "$id": 10,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "X",
                    "range": Array [
                      92,
                      93,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      86,
                      128,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "X",
                  "range": Array [
                    92,
                    93,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "X",
              "references": Array [],
              "scope": Object {
                "$ref": 11,
              },
            },
          ],
        },
        Object {
          "$id": 13,
          "block": Object {
            "range": Array [
              130,
              141,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 14,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 12,
            },
          },
          "variableScope": Object {
            "$ref": 14,
          },
          "variables": Array [
            Object {
              "$id": 12,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      136,
                      137,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      130,
                      141,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    136,
                    137,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 13,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "M",
            "range": Array [
              102,
              103,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "C",
            "range": Array [
              109,
              110,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 15,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 2,
        },
        "M": Object {
          "$ref": 0,
        },
        "X": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 14,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "M",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  84,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "M",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "M",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  92,
                  93,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  86,
                  128,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                92,
                93,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  136,
                  137,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  130,
                  141,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                136,
                137,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 15,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-mixin-reference.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Base": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Base",
                    "range": Array [
                      37,
                      44,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Base",
                  "range": Array [
                    37,
                    44,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Base",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "M": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "M",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "M",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "M",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-optional-computed-property.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      46,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          46,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              45,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "undefined",
                "range": Array [
                  33,
                  42,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "X": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "X",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      45,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "X",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "X",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "X": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  45,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-optional-methods.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      68,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          68,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              67,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      67,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  67,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-optional-properties.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      219,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          219,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              51,
              218,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "computed",
                "range": Array [
                  116,
                  124,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "computed2",
                "range": Array [
                  155,
                  164,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 6,
            },
            Object {
              "$ref": 7,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      57,
                      60,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      51,
                      218,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    57,
                    60,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "computed",
            "range": Array [
              6,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              23,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "computed2",
            "range": Array [
              31,
              40,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              43,
              49,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 2,
        },
        "computed": Object {
          "$ref": 0,
        },
        "computed2": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "computed",
                "range": Array [
                  6,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  23,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "computed",
              "range": Array [
                6,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "computed",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "computed2",
                "range": Array [
                  31,
                  40,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  31,
                  49,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  25,
                  50,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "computed2",
              "range": Array [
                31,
                40,
              ],
              "type": "Identifier",
            },
          ],
          "name": "computed2",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  57,
                  60,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  51,
                  218,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                57,
                60,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-optional-property-undefined.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      41,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          41,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "undefined",
                "range": Array [
                  27,
                  36,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "X": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "X",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      39,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "X",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "X",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "X": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-private-parameter-properties.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      203,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          203,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              0,
              203,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 9,
              "block": Object {
                "range": Array [
                  25,
                  201,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 7,
                  "from": Object {
                    "$ref": 9,
                  },
                  "identifier": Object {
                    "name": "age",
                    "range": Array [
                      124,
                      135,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 5,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      138,
                      140,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 8,
                  "from": Object {
                    "$ref": 9,
                  },
                  "identifier": Object {
                    "name": "student",
                    "range": Array [
                      173,
                      189,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 6,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      192,
                      197,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {
                "age": Object {
                  "$ref": 5,
                },
                "arguments": Object {
                  "$ref": 2,
                },
                "firstName": Object {
                  "$ref": 3,
                },
                "lastName": Object {
                  "$ref": 4,
                },
                "student": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 9,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "firstName",
                        "range": Array [
                          34,
                          51,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          201,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "firstName",
                      "range": Array [
                        34,
                        51,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "firstName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "lastName",
                        "range": Array [
                          84,
                          100,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          201,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "lastName",
                      "range": Array [
                        84,
                        100,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "lastName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 5,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "age",
                        "range": Array [
                          124,
                          135,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          201,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "age",
                      "range": Array [
                        124,
                        135,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "age",
                  "references": Array [
                    Object {
                      "$ref": 7,
                    },
                  ],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 6,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "student",
                        "range": Array [
                          173,
                          189,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          201,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "student",
                      "range": Array [
                        173,
                        189,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "student",
                  "references": Array [
                    Object {
                      "$ref": 8,
                    },
                  ],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 11,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      203,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  203,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-property-function.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      86,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          86,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              85,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 2,
              "block": Object {
                "range": Array [
                  35,
                  54,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 2,
              },
              "variables": Array [],
            },
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  72,
                  82,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 4,
                  },
                  "identifier": Object {
                    "name": "test",
                    "range": Array [
                      78,
                      82,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      85,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  85,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-property-values.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      83,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          83,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "Array",
                "range": Array [
                  61,
                  66,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      82,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-protected-parameter-properties.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      211,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          211,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              0,
              211,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 9,
              "block": Object {
                "range": Array [
                  25,
                  209,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 7,
                  "from": Object {
                    "$ref": 9,
                  },
                  "identifier": Object {
                    "name": "age",
                    "range": Array [
                      130,
                      141,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 5,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      144,
                      146,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 8,
                  "from": Object {
                    "$ref": 9,
                  },
                  "identifier": Object {
                    "name": "student",
                    "range": Array [
                      181,
                      197,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 6,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      200,
                      205,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {
                "age": Object {
                  "$ref": 5,
                },
                "arguments": Object {
                  "$ref": 2,
                },
                "firstName": Object {
                  "$ref": 3,
                },
                "lastName": Object {
                  "$ref": 4,
                },
                "student": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 9,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "firstName",
                        "range": Array [
                          36,
                          53,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          209,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "firstName",
                      "range": Array [
                        36,
                        53,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "firstName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "lastName",
                        "range": Array [
                          88,
                          104,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          209,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "lastName",
                      "range": Array [
                        88,
                        104,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "lastName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 5,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "age",
                        "range": Array [
                          130,
                          141,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          209,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "age",
                      "range": Array [
                        130,
                        141,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "age",
                  "references": Array [
                    Object {
                      "$ref": 7,
                    },
                  ],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 6,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "student",
                        "range": Array [
                          181,
                          197,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          209,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "student",
                      "range": Array [
                        181,
                        197,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "student",
                  "references": Array [
                    Object {
                      "$ref": 8,
                    },
                  ],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 11,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      211,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  211,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-public-parameter-properties.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      199,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          199,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              0,
              199,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 9,
              "block": Object {
                "range": Array [
                  25,
                  197,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 7,
                  "from": Object {
                    "$ref": 9,
                  },
                  "identifier": Object {
                    "name": "age",
                    "range": Array [
                      121,
                      132,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 5,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      135,
                      137,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 8,
                  "from": Object {
                    "$ref": 9,
                  },
                  "identifier": Object {
                    "name": "student",
                    "range": Array [
                      169,
                      185,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 6,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      188,
                      193,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {
                "age": Object {
                  "$ref": 5,
                },
                "arguments": Object {
                  "$ref": 2,
                },
                "firstName": Object {
                  "$ref": 3,
                },
                "lastName": Object {
                  "$ref": 4,
                },
                "student": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 9,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "firstName",
                        "range": Array [
                          33,
                          50,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          197,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "firstName",
                      "range": Array [
                        33,
                        50,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "firstName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "lastName",
                        "range": Array [
                          82,
                          98,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          197,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "lastName",
                      "range": Array [
                        82,
                        98,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "lastName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 5,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "age",
                        "range": Array [
                          121,
                          132,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          197,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "age",
                      "range": Array [
                        121,
                        132,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "age",
                  "references": Array [
                    Object {
                      "$ref": 7,
                    },
                  ],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
                Object {
                  "$id": 6,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "student",
                        "range": Array [
                          169,
                          185,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          197,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "student",
                      "range": Array [
                        169,
                        185,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "student",
                  "references": Array [
                    Object {
                      "$ref": 8,
                    },
                  ],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 11,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      199,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  199,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-readonly-parameter-properties.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      109,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          109,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              109,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  25,
                  107,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "lastName",
                    "range": Array [
                      77,
                      93,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 4,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      96,
                      103,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "firstName": Object {
                  "$ref": 3,
                },
                "lastName": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "firstName",
                        "range": Array [
                          35,
                          52,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          107,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "firstName",
                      "range": Array [
                        35,
                        52,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "firstName",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "lastName",
                        "range": Array [
                          77,
                          93,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          107,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "lastName",
                      "range": Array [
                        77,
                        93,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "lastName",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      109,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  109,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-readonly-property.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-static-parameter-properties.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      59,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          59,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              56,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  27,
                  54,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 3,
                },
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          35,
                          44,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          27,
                          54,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        35,
                        44,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      56,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  56,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-two-methods-computed-constructor.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      86,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          86,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              84,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  25,
                  44,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  63,
                  82,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      84,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  84,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-type-parameter.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              17,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      17,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-type-parameter-default.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/class-with-type-parameter-underscore.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/const-assertions.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      13,
      323,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          13,
          323,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              32,
            ],
            "type": "TSAsExpression",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              67,
              68,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              71,
              88,
            ],
            "type": "TSAsExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              132,
              133,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              136,
              162,
            ],
            "type": "TSAsExpression",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              182,
              183,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              186,
              195,
            ],
            "type": "TSTypeAssertion",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              230,
              231,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              234,
              249,
            ],
            "type": "TSTypeAssertion",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              293,
              294,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              297,
              321,
            ],
            "type": "TSTypeAssertion",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  17,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  17,
                  32,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  13,
                  33,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  182,
                  183,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  182,
                  195,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  178,
                  196,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                17,
                18,
              ],
              "type": "Identifier",
            },
            Object {
              "name": "x",
              "range": Array [
                182,
                183,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  67,
                  68,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  67,
                  88,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  63,
                  89,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  230,
                  231,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  230,
                  249,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  226,
                  250,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                67,
                68,
              ],
              "type": "Identifier",
            },
            Object {
              "name": "y",
              "range": Array [
                230,
                231,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  132,
                  133,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  132,
                  162,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  128,
                  163,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  293,
                  294,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  293,
                  321,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  289,
                  322,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                132,
                133,
              ],
              "type": "Identifier",
            },
            Object {
              "name": "z",
              "range": Array [
                293,
                294,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 8,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/const-enum.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  27,
                  28,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "bar": Object {
              "$ref": 2,
            },
            "foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      21,
                      28,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      34,
                      37,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      34,
                      37,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    34,
                    37,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  11,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                11,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/declare-class-with-optional-method.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              38,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      14,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      38,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    14,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  38,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                14,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/declare-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              42,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "bar": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      21,
                      32,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      42,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    21,
                    32,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  17,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  42,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                17,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/destructuring-assignment.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              3,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              3,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "bar",
            "range": Array [
              16,
              19,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              16,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/destructuring-assignment-nested.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      130,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          130,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              76,
              79,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              69,
              71,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              62,
              64,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              84,
              127,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              34,
              35,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              76,
              79,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              34,
              35,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              69,
              71,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              34,
              35,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              62,
              64,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              34,
              35,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              47,
              58,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              34,
              35,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              39,
              42,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              34,
              35,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              84,
              127,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 6,
        },
        Object {
          "$ref": 7,
        },
        Object {
          "$ref": 8,
        },
        Object {
          "$ref": 9,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
    Object {
      "$ref": 6,
    },
    Object {
      "$ref": 7,
    },
    Object {
      "$ref": 8,
    },
    Object {
      "$ref": 9,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/destructuring-assignment-object.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              3,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              3,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "bar",
            "range": Array [
              16,
              19,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              16,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/destructuring-assignment-property.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "name": "bar",
                "range": Array [
                  28,
                  31,
                ],
                "type": "Identifier",
              },
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  21,
                  23,
                ],
                "type": "ArrayExpression",
              },
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  28,
                  31,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "foo": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      15,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      37,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    15,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/directive-in-module.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      60,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          60,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              11,
              59,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  35,
                  36,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  39,
                  40,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "block",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 1,
        },
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  59,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  35,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  35,
                  40,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  31,
                  41,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                35,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/directive-in-namespace.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              14,
              62,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  42,
                  43,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "block",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 1,
        },
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  10,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  62,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                10,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  38,
                  43,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  34,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                38,
                39,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-as-namespace.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-assignment.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              9,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-declare-const-named-enum.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      55,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          55,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              7,
              54,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  36,
                  39,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  42,
                  43,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "bar": Object {
              "$ref": 2,
            },
            "foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      36,
                      39,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      36,
                      43,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    36,
                    39,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      49,
                      52,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      49,
                      52,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    49,
                    52,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  26,
                  29,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  54,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                26,
                29,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-declare-named-enum.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              7,
              48,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  30,
                  33,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  36,
                  37,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "bar": Object {
              "$ref": 2,
            },
            "foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      30,
                      33,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      30,
                      37,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    30,
                    33,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      43,
                      46,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      43,
                      46,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    43,
                    46,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  20,
                  23,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  48,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                20,
                23,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-default-class-with-generic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              15,
              28,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-default-class-with-multiple-generics.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              15,
              31,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-named-class-with-generic.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              24,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      13,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      24,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    13,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  24,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-named-class-with-multiple-generics.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              27,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      13,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      27,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    13,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  27,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-named-enum.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              7,
              40,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  28,
                  29,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "bar": Object {
              "$ref": 2,
            },
            "foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      22,
                      25,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      22,
                      29,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    22,
                    25,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      35,
                      38,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      35,
                      38,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    35,
                    38,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  40,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-named-enum-computed-number.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              7,
              28,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  28,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-named-enum-computed-string.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              7,
              32,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  32,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-named-enum-computed-var-ref.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              28,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      23,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      22,
                      25,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    23,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  28,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-type.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-type-as.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "A",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-type-from.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/export-type-from-as.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-anonymus-with-type-parameters.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              10,
              49,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  45,
                  46,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 3,
            },
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      23,
                      32,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      10,
                      49,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    23,
                    32,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              49,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  49,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  50,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-anynomus-with-return-type.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              10,
              31,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              31,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-overloads.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      147,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          147,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              37,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      18,
                      27,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      37,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    18,
                    27,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              45,
              75,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      56,
                      65,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      45,
                      75,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    56,
                    65,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              83,
              146,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  142,
                  143,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 6,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 5,
            },
            "x": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 5,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 6,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      94,
                      112,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      83,
                      146,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    94,
                    112,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  92,
                  93,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  83,
                  146,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                92,
                93,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-await.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "future",
                "range": Array [
                  40,
                  46,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "future": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "future",
                    "range": Array [
                      20,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "future",
                  "range": Array [
                    20,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "future",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "hope": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "hope",
                "range": Array [
                  15,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "hope",
              "range": Array [
                15,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "hope",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-object-type-with-optional-properties.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "bar": Object {
              "$ref": 2,
            },
            "baz": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      14,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    14,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "baz",
                    "range": Array [
                      19,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "baz",
                  "range": Array [
                    19,
                    22,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "baz",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-object-type-without-annotation.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "bar": Object {
              "$ref": 2,
            },
            "baz": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      14,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    14,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "baz",
                    "range": Array [
                      19,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "baz",
                  "range": Array [
                    19,
                    22,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "baz",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-type-parameters.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      41,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          41,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              40,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "b",
                "range": Array [
                  36,
                  37,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      14,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      40,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    14,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  40,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-type-parameters-that-have-comments.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              35,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "compare": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "compare",
                "range": Array [
                  9,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "compare",
              "range": Array [
                9,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "compare",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-type-parameters-with-constraint.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "b",
                "range": Array [
                  47,
                  48,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      25,
                      29,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    25,
                    29,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-types.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      58,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          58,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              57,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "name",
                "range": Array [
                  50,
                  54,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "name": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "name",
                    "range": Array [
                      17,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      57,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "name",
                  "range": Array [
                    17,
                    28,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "name",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "message": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "message",
                "range": Array [
                  9,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  57,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "message",
              "range": Array [
                9,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "message",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/function-with-types-assignation.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      97,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          97,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              96,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "age",
                "range": Array [
                  30,
                  40,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": Object {
                "range": Array [
                  43,
                  46,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "name",
                "range": Array [
                  89,
                  93,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "age": Object {
              "$ref": 3,
            },
            "args": Object {
              "$ref": 4,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "name": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "name",
                    "range": Array [
                      17,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      96,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "name",
                  "range": Array [
                    17,
                    28,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "name",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "age",
                    "range": Array [
                      30,
                      40,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      96,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "age",
                  "range": Array [
                    30,
                    40,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "age",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "args",
                    "range": Array [
                      51,
                      55,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      96,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "args",
                  "range": Array [
                    51,
                    55,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "args",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "message": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "message",
                "range": Array [
                  9,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  96,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "message",
              "range": Array [
                9,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "message",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/global-this.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      22,
      206,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          22,
          206,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "abc",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              32,
              35,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "globalThis",
            "range": Array [
              69,
              79,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "answer",
            "range": Array [
              97,
              103,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              106,
              108,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "globalThis",
            "range": Array [
              178,
              188,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "abc": Object {
          "$ref": 0,
        },
        "answer": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "abc",
                "range": Array [
                  26,
                  29,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  26,
                  35,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  22,
                  36,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "abc",
              "range": Array [
                26,
                29,
              ],
              "type": "Identifier",
            },
          ],
          "name": "abc",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "answer",
                "range": Array [
                  97,
                  103,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  97,
                  108,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  93,
                  109,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "answer",
              "range": Array [
                97,
                103,
              ],
              "type": "Identifier",
            },
          ],
          "name": "answer",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-equal-declaration.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "TSImportEqualsDeclaration",
              },
              "parent": null,
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-export-equal-declaration.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "TSImportEqualsDeclaration",
              },
              "parent": null,
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                14,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-type-default.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  15,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-type-empty.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      55,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          55,
          81,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "type": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "type",
                "range": Array [
                  62,
                  66,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  62,
                  66,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  55,
                  80,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "type",
              "range": Array [
                62,
                66,
              ],
              "type": "Identifier",
            },
          ],
          "name": "type",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-type-error.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 1,
        },
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  15,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  19,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  22,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                19,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-type-named.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 1,
        },
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  14,
                  17,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                14,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  19,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  22,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                19,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-type-named-as.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  14,
                  24,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  38,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/import-type-star-as-ns.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  17,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  12,
                  20,
                ],
                "type": "ImportNamespaceSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                17,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-extends.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-extends-multiple.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-type-parameters.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-all-property-types.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      269,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          269,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "bax",
            "range": Array [
              56,
              59,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "baz",
            "range": Array [
              75,
              78,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "loo",
            "range": Array [
              164,
              167,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-construct-signature-with-parameter-accessibility.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-extends-member-expression.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-extends-type-parameters.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-generic.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-jsdoc.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      88,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          88,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-method.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      62,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          62,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-with-optional-properties.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      82,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/interface-without-type-annotation.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/keyof-operator.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/keyword-variables.src 1`] = `
Object {
  "$id": 108,
  "block": Object {
    "range": Array [
      0,
      1078,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 107,
      "block": Object {
        "range": Array [
          0,
          1078,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 94,
          "block": Object {
            "range": Array [
              0,
              613,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 63,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "abstract",
                "range": Array [
                  10,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 32,
              },
              "writeExpr": Object {
                "range": Array [
                  21,
                  22,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 64,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "as",
                "range": Array [
                  32,
                  34,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 33,
              },
              "writeExpr": Object {
                "range": Array [
                  37,
                  38,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 65,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "asserts",
                "range": Array [
                  48,
                  55,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 34,
              },
              "writeExpr": Object {
                "range": Array [
                  58,
                  59,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 66,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "any",
                "range": Array [
                  69,
                  72,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 35,
              },
              "writeExpr": Object {
                "range": Array [
                  75,
                  76,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 67,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "async",
                "range": Array [
                  86,
                  91,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 36,
              },
              "writeExpr": Object {
                "range": Array [
                  94,
                  95,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 68,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "await",
                "range": Array [
                  105,
                  110,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 37,
              },
              "writeExpr": Object {
                "range": Array [
                  113,
                  114,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 69,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "boolean",
                "range": Array [
                  124,
                  131,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 38,
              },
              "writeExpr": Object {
                "range": Array [
                  134,
                  135,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 70,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "constructor",
                "range": Array [
                  145,
                  156,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 39,
              },
              "writeExpr": Object {
                "range": Array [
                  159,
                  160,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 71,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "declare",
                "range": Array [
                  170,
                  177,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 40,
              },
              "writeExpr": Object {
                "range": Array [
                  180,
                  181,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 72,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "get",
                "range": Array [
                  191,
                  194,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 41,
              },
              "writeExpr": Object {
                "range": Array [
                  197,
                  198,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 73,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "infer",
                "range": Array [
                  208,
                  213,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 42,
              },
              "writeExpr": Object {
                "range": Array [
                  216,
                  217,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 74,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "is",
                "range": Array [
                  227,
                  229,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 43,
              },
              "writeExpr": Object {
                "range": Array [
                  232,
                  233,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 75,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "keyof",
                "range": Array [
                  243,
                  248,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 44,
              },
              "writeExpr": Object {
                "range": Array [
                  251,
                  252,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 76,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "module",
                "range": Array [
                  262,
                  268,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 45,
              },
              "writeExpr": Object {
                "range": Array [
                  271,
                  272,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 77,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "namespace",
                "range": Array [
                  282,
                  291,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 46,
              },
              "writeExpr": Object {
                "range": Array [
                  294,
                  295,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 78,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "never",
                "range": Array [
                  305,
                  310,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 47,
              },
              "writeExpr": Object {
                "range": Array [
                  313,
                  314,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 79,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "readonly",
                "range": Array [
                  324,
                  332,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 48,
              },
              "writeExpr": Object {
                "range": Array [
                  335,
                  336,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 80,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "require",
                "range": Array [
                  346,
                  353,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 49,
              },
              "writeExpr": Object {
                "range": Array [
                  356,
                  357,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 81,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "number",
                "range": Array [
                  367,
                  373,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 50,
              },
              "writeExpr": Object {
                "range": Array [
                  376,
                  377,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 82,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "object",
                "range": Array [
                  387,
                  393,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 51,
              },
              "writeExpr": Object {
                "range": Array [
                  396,
                  397,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 83,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "set",
                "range": Array [
                  407,
                  410,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 52,
              },
              "writeExpr": Object {
                "range": Array [
                  413,
                  414,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 84,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "string",
                "range": Array [
                  424,
                  430,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 53,
              },
              "writeExpr": Object {
                "range": Array [
                  433,
                  434,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 85,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "symbol",
                "range": Array [
                  444,
                  450,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 54,
              },
              "writeExpr": Object {
                "range": Array [
                  453,
                  454,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 86,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "type",
                "range": Array [
                  464,
                  468,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 55,
              },
              "writeExpr": Object {
                "range": Array [
                  471,
                  472,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 87,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "undefined",
                "range": Array [
                  482,
                  491,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 56,
              },
              "writeExpr": Object {
                "range": Array [
                  494,
                  495,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 88,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "unique",
                "range": Array [
                  505,
                  511,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 57,
              },
              "writeExpr": Object {
                "range": Array [
                  514,
                  515,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 89,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "unknown",
                "range": Array [
                  525,
                  532,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 58,
              },
              "writeExpr": Object {
                "range": Array [
                  535,
                  536,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 90,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "from",
                "range": Array [
                  546,
                  550,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 59,
              },
              "writeExpr": Object {
                "range": Array [
                  553,
                  554,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 91,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "global",
                "range": Array [
                  564,
                  570,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 60,
              },
              "writeExpr": Object {
                "range": Array [
                  573,
                  574,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 92,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "bigint",
                "range": Array [
                  584,
                  590,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 61,
              },
              "writeExpr": Object {
                "range": Array [
                  593,
                  594,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 93,
              "from": Object {
                "$ref": 94,
              },
              "identifier": Object {
                "name": "of",
                "range": Array [
                  604,
                  606,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 62,
              },
              "writeExpr": Object {
                "range": Array [
                  609,
                  610,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 107,
          },
          "variableMap": Object {
            "abstract": Object {
              "$ref": 32,
            },
            "any": Object {
              "$ref": 35,
            },
            "as": Object {
              "$ref": 33,
            },
            "asserts": Object {
              "$ref": 34,
            },
            "async": Object {
              "$ref": 36,
            },
            "await": Object {
              "$ref": 37,
            },
            "bigint": Object {
              "$ref": 61,
            },
            "boolean": Object {
              "$ref": 38,
            },
            "constructor": Object {
              "$ref": 39,
            },
            "declare": Object {
              "$ref": 40,
            },
            "from": Object {
              "$ref": 59,
            },
            "get": Object {
              "$ref": 41,
            },
            "global": Object {
              "$ref": 60,
            },
            "infer": Object {
              "$ref": 42,
            },
            "is": Object {
              "$ref": 43,
            },
            "keyof": Object {
              "$ref": 44,
            },
            "module": Object {
              "$ref": 45,
            },
            "namespace": Object {
              "$ref": 46,
            },
            "never": Object {
              "$ref": 47,
            },
            "number": Object {
              "$ref": 50,
            },
            "object": Object {
              "$ref": 51,
            },
            "of": Object {
              "$ref": 62,
            },
            "readonly": Object {
              "$ref": 48,
            },
            "require": Object {
              "$ref": 49,
            },
            "set": Object {
              "$ref": 52,
            },
            "string": Object {
              "$ref": 53,
            },
            "symbol": Object {
              "$ref": 54,
            },
            "type": Object {
              "$ref": 55,
            },
            "undefined": Object {
              "$ref": 56,
            },
            "unique": Object {
              "$ref": 57,
            },
            "unknown": Object {
              "$ref": 58,
            },
          },
          "variableScope": Object {
            "$ref": 107,
          },
          "variables": Array [
            Object {
              "$id": 32,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "abstract",
                    "range": Array [
                      10,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      10,
                      22,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      4,
                      23,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "abstract",
                  "range": Array [
                    10,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "abstract",
              "references": Array [
                Object {
                  "$ref": 63,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 33,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "as",
                    "range": Array [
                      32,
                      34,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      32,
                      38,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      26,
                      39,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "as",
                  "range": Array [
                    32,
                    34,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "as",
              "references": Array [
                Object {
                  "$ref": 64,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 34,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "asserts",
                    "range": Array [
                      48,
                      55,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      48,
                      59,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      42,
                      60,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "asserts",
                  "range": Array [
                    48,
                    55,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "asserts",
              "references": Array [
                Object {
                  "$ref": 65,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 35,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "any",
                    "range": Array [
                      69,
                      72,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      69,
                      76,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      63,
                      77,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "any",
                  "range": Array [
                    69,
                    72,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "any",
              "references": Array [
                Object {
                  "$ref": 66,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 36,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "async",
                    "range": Array [
                      86,
                      91,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      86,
                      95,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      80,
                      96,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "async",
                  "range": Array [
                    86,
                    91,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "async",
              "references": Array [
                Object {
                  "$ref": 67,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 37,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "await",
                    "range": Array [
                      105,
                      110,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      105,
                      114,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      99,
                      115,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "await",
                  "range": Array [
                    105,
                    110,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "await",
              "references": Array [
                Object {
                  "$ref": 68,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 38,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "boolean",
                    "range": Array [
                      124,
                      131,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      124,
                      135,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      118,
                      136,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "boolean",
                  "range": Array [
                    124,
                    131,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "boolean",
              "references": Array [
                Object {
                  "$ref": 69,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 39,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "constructor",
                    "range": Array [
                      145,
                      156,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      145,
                      160,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      139,
                      161,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "constructor",
                  "range": Array [
                    145,
                    156,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "constructor",
              "references": Array [
                Object {
                  "$ref": 70,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 40,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "declare",
                    "range": Array [
                      170,
                      177,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      170,
                      181,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      164,
                      182,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "declare",
                  "range": Array [
                    170,
                    177,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "declare",
              "references": Array [
                Object {
                  "$ref": 71,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 41,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "get",
                    "range": Array [
                      191,
                      194,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      191,
                      198,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      185,
                      199,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "get",
                  "range": Array [
                    191,
                    194,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "get",
              "references": Array [
                Object {
                  "$ref": 72,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 42,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "infer",
                    "range": Array [
                      208,
                      213,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      208,
                      217,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      202,
                      218,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "infer",
                  "range": Array [
                    208,
                    213,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "infer",
              "references": Array [
                Object {
                  "$ref": 73,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 43,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "is",
                    "range": Array [
                      227,
                      229,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      227,
                      233,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      221,
                      234,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "is",
                  "range": Array [
                    227,
                    229,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "is",
              "references": Array [
                Object {
                  "$ref": 74,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 44,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "keyof",
                    "range": Array [
                      243,
                      248,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      243,
                      252,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      237,
                      253,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "keyof",
                  "range": Array [
                    243,
                    248,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "keyof",
              "references": Array [
                Object {
                  "$ref": 75,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 45,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "module",
                    "range": Array [
                      262,
                      268,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      262,
                      272,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      256,
                      273,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "module",
                  "range": Array [
                    262,
                    268,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "module",
              "references": Array [
                Object {
                  "$ref": 76,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 46,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "namespace",
                    "range": Array [
                      282,
                      291,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      282,
                      295,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      276,
                      296,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "namespace",
                  "range": Array [
                    282,
                    291,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "namespace",
              "references": Array [
                Object {
                  "$ref": 77,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 47,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "never",
                    "range": Array [
                      305,
                      310,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      305,
                      314,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      299,
                      315,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "never",
                  "range": Array [
                    305,
                    310,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "never",
              "references": Array [
                Object {
                  "$ref": 78,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 48,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "readonly",
                    "range": Array [
                      324,
                      332,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      324,
                      336,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      318,
                      337,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "readonly",
                  "range": Array [
                    324,
                    332,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "readonly",
              "references": Array [
                Object {
                  "$ref": 79,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 49,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "require",
                    "range": Array [
                      346,
                      353,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      346,
                      357,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      340,
                      358,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "require",
                  "range": Array [
                    346,
                    353,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "require",
              "references": Array [
                Object {
                  "$ref": 80,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 50,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "number",
                    "range": Array [
                      367,
                      373,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      367,
                      377,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      361,
                      378,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "number",
                  "range": Array [
                    367,
                    373,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "number",
              "references": Array [
                Object {
                  "$ref": 81,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 51,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "object",
                    "range": Array [
                      387,
                      393,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      387,
                      397,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      381,
                      398,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "object",
                  "range": Array [
                    387,
                    393,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "object",
              "references": Array [
                Object {
                  "$ref": 82,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 52,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "set",
                    "range": Array [
                      407,
                      410,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      407,
                      414,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      401,
                      415,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "set",
                  "range": Array [
                    407,
                    410,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "set",
              "references": Array [
                Object {
                  "$ref": 83,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 53,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "string",
                    "range": Array [
                      424,
                      430,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      424,
                      434,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      418,
                      435,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "string",
                  "range": Array [
                    424,
                    430,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "string",
              "references": Array [
                Object {
                  "$ref": 84,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 54,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "symbol",
                    "range": Array [
                      444,
                      450,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      444,
                      454,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      438,
                      455,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "symbol",
                  "range": Array [
                    444,
                    450,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "symbol",
              "references": Array [
                Object {
                  "$ref": 85,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 55,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "type",
                    "range": Array [
                      464,
                      468,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      464,
                      472,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      458,
                      473,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "type",
                  "range": Array [
                    464,
                    468,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "type",
              "references": Array [
                Object {
                  "$ref": 86,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 56,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "undefined",
                    "range": Array [
                      482,
                      491,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      482,
                      495,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      476,
                      496,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "undefined",
                  "range": Array [
                    482,
                    491,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "undefined",
              "references": Array [
                Object {
                  "$ref": 87,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 57,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "unique",
                    "range": Array [
                      505,
                      511,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      505,
                      515,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      499,
                      516,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "unique",
                  "range": Array [
                    505,
                    511,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "unique",
              "references": Array [
                Object {
                  "$ref": 88,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 58,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "unknown",
                    "range": Array [
                      525,
                      532,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      525,
                      536,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      519,
                      537,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "unknown",
                  "range": Array [
                    525,
                    532,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "unknown",
              "references": Array [
                Object {
                  "$ref": 89,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 59,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "from",
                    "range": Array [
                      546,
                      550,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      546,
                      554,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      540,
                      555,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "from",
                  "range": Array [
                    546,
                    550,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "from",
              "references": Array [
                Object {
                  "$ref": 90,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 60,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "global",
                    "range": Array [
                      564,
                      570,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      564,
                      574,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      558,
                      575,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "global",
                  "range": Array [
                    564,
                    570,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "global",
              "references": Array [
                Object {
                  "$ref": 91,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 61,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bigint",
                    "range": Array [
                      584,
                      590,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      584,
                      594,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      578,
                      595,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bigint",
                  "range": Array [
                    584,
                    590,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bigint",
              "references": Array [
                Object {
                  "$ref": 92,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
            Object {
              "$id": 62,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "of",
                    "range": Array [
                      604,
                      606,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      604,
                      610,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      598,
                      611,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "of",
                  "range": Array [
                    604,
                    606,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "of",
              "references": Array [
                Object {
                  "$ref": 93,
                },
              ],
              "scope": Object {
                "$ref": 94,
              },
            },
          ],
        },
        Object {
          "$id": 106,
          "block": Object {
            "range": Array [
              962,
              1077,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 97,
              "block": Object {
                "range": Array [
                  995,
                  1000,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 106,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 96,
                },
              },
              "variableScope": Object {
                "$ref": 97,
              },
              "variables": Array [
                Object {
                  "$id": 96,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 97,
                  },
                },
              ],
            },
            Object {
              "$id": 99,
              "block": Object {
                "range": Array [
                  1012,
                  1017,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 106,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 98,
                },
              },
              "variableScope": Object {
                "$ref": 99,
              },
              "variables": Array [
                Object {
                  "$id": 98,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 99,
                  },
                },
              ],
            },
            Object {
              "$id": 101,
              "block": Object {
                "range": Array [
                  1028,
                  1033,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 106,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 100,
                },
              },
              "variableScope": Object {
                "$ref": 101,
              },
              "variables": Array [
                Object {
                  "$id": 100,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 101,
                  },
                },
              ],
            },
            Object {
              "$id": 105,
              "block": Object {
                "range": Array [
                  1048,
                  1075,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 104,
                  "from": Object {
                    "$ref": 105,
                  },
                  "identifier": Object {
                    "name": "x",
                    "range": Array [
                      1061,
                      1062,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 103,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      1065,
                      1070,
                    ],
                    "type": "YieldExpression",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 106,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 102,
                },
                "x": Object {
                  "$ref": 103,
                },
              },
              "variableScope": Object {
                "$ref": 105,
              },
              "variables": Array [
                Object {
                  "$id": 102,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 105,
                  },
                },
                Object {
                  "$id": 103,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "x",
                        "range": Array [
                          1061,
                          1062,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          1061,
                          1070,
                        ],
                        "type": "VariableDeclarator",
                      },
                      "parent": Object {
                        "range": Array [
                          1057,
                          1071,
                        ],
                        "type": "VariableDeclaration",
                      },
                      "type": "Variable",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "x",
                      "range": Array [
                        1061,
                        1062,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "x",
                  "references": Array [
                    Object {
                      "$ref": 104,
                    },
                  ],
                  "scope": Object {
                    "$ref": 105,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 107,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 95,
            },
          },
          "variableScope": Object {
            "$ref": 107,
          },
          "variables": Array [
            Object {
              "$id": 95,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      968,
                      969,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      962,
                      1077,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    968,
                    969,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 106,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 108,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 31,
        },
        "abstract": Object {
          "$ref": 0,
        },
        "any": Object {
          "$ref": 3,
        },
        "as": Object {
          "$ref": 1,
        },
        "asserts": Object {
          "$ref": 2,
        },
        "async": Object {
          "$ref": 4,
        },
        "await": Object {
          "$ref": 5,
        },
        "bigint": Object {
          "$ref": 29,
        },
        "boolean": Object {
          "$ref": 6,
        },
        "constructor": Object {
          "$ref": 7,
        },
        "declare": Object {
          "$ref": 8,
        },
        "from": Object {
          "$ref": 27,
        },
        "get": Object {
          "$ref": 9,
        },
        "global": Object {
          "$ref": 28,
        },
        "infer": Object {
          "$ref": 10,
        },
        "is": Object {
          "$ref": 11,
        },
        "keyof": Object {
          "$ref": 12,
        },
        "module": Object {
          "$ref": 13,
        },
        "namespace": Object {
          "$ref": 14,
        },
        "never": Object {
          "$ref": 15,
        },
        "number": Object {
          "$ref": 18,
        },
        "object": Object {
          "$ref": 19,
        },
        "of": Object {
          "$ref": 30,
        },
        "readonly": Object {
          "$ref": 16,
        },
        "require": Object {
          "$ref": 17,
        },
        "set": Object {
          "$ref": 20,
        },
        "string": Object {
          "$ref": 21,
        },
        "symbol": Object {
          "$ref": 22,
        },
        "type": Object {
          "$ref": 23,
        },
        "undefined": Object {
          "$ref": 24,
        },
        "unique": Object {
          "$ref": 25,
        },
        "unknown": Object {
          "$ref": 26,
        },
      },
      "variableScope": Object {
        "$ref": 107,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "abstract",
                "range": Array [
                  626,
                  634,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  626,
                  634,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "abstract",
              "range": Array [
                626,
                634,
              ],
              "type": "Identifier",
            },
          ],
          "name": "abstract",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "as",
                "range": Array [
                  638,
                  640,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  638,
                  640,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "as",
              "range": Array [
                638,
                640,
              ],
              "type": "Identifier",
            },
          ],
          "name": "as",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "asserts",
                "range": Array [
                  644,
                  651,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  644,
                  651,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "asserts",
              "range": Array [
                644,
                651,
              ],
              "type": "Identifier",
            },
          ],
          "name": "asserts",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "any",
                "range": Array [
                  655,
                  658,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  655,
                  658,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "any",
              "range": Array [
                655,
                658,
              ],
              "type": "Identifier",
            },
          ],
          "name": "any",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 4,
          "defs": Array [
            Object {
              "name": Object {
                "name": "async",
                "range": Array [
                  662,
                  667,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  662,
                  667,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "async",
              "range": Array [
                662,
                667,
              ],
              "type": "Identifier",
            },
          ],
          "name": "async",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 5,
          "defs": Array [
            Object {
              "name": Object {
                "name": "await",
                "range": Array [
                  671,
                  676,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  671,
                  676,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "await",
              "range": Array [
                671,
                676,
              ],
              "type": "Identifier",
            },
          ],
          "name": "await",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 6,
          "defs": Array [
            Object {
              "name": Object {
                "name": "boolean",
                "range": Array [
                  680,
                  687,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  680,
                  687,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "boolean",
              "range": Array [
                680,
                687,
              ],
              "type": "Identifier",
            },
          ],
          "name": "boolean",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 7,
          "defs": Array [
            Object {
              "name": Object {
                "name": "constructor",
                "range": Array [
                  691,
                  702,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  691,
                  702,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "constructor",
              "range": Array [
                691,
                702,
              ],
              "type": "Identifier",
            },
          ],
          "name": "constructor",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 8,
          "defs": Array [
            Object {
              "name": Object {
                "name": "declare",
                "range": Array [
                  706,
                  713,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  706,
                  713,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "declare",
              "range": Array [
                706,
                713,
              ],
              "type": "Identifier",
            },
          ],
          "name": "declare",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 9,
          "defs": Array [
            Object {
              "name": Object {
                "name": "get",
                "range": Array [
                  717,
                  720,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  717,
                  720,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "get",
              "range": Array [
                717,
                720,
              ],
              "type": "Identifier",
            },
          ],
          "name": "get",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 10,
          "defs": Array [
            Object {
              "name": Object {
                "name": "infer",
                "range": Array [
                  724,
                  729,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  724,
                  729,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "infer",
              "range": Array [
                724,
                729,
              ],
              "type": "Identifier",
            },
          ],
          "name": "infer",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 11,
          "defs": Array [
            Object {
              "name": Object {
                "name": "is",
                "range": Array [
                  733,
                  735,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  733,
                  735,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "is",
              "range": Array [
                733,
                735,
              ],
              "type": "Identifier",
            },
          ],
          "name": "is",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 12,
          "defs": Array [
            Object {
              "name": Object {
                "name": "keyof",
                "range": Array [
                  739,
                  744,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  739,
                  744,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "keyof",
              "range": Array [
                739,
                744,
              ],
              "type": "Identifier",
            },
          ],
          "name": "keyof",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 13,
          "defs": Array [
            Object {
              "name": Object {
                "name": "module",
                "range": Array [
                  748,
                  754,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  748,
                  754,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "module",
              "range": Array [
                748,
                754,
              ],
              "type": "Identifier",
            },
          ],
          "name": "module",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 14,
          "defs": Array [
            Object {
              "name": Object {
                "name": "namespace",
                "range": Array [
                  758,
                  767,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  758,
                  767,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "namespace",
              "range": Array [
                758,
                767,
              ],
              "type": "Identifier",
            },
          ],
          "name": "namespace",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 15,
          "defs": Array [
            Object {
              "name": Object {
                "name": "never",
                "range": Array [
                  771,
                  776,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  771,
                  776,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "never",
              "range": Array [
                771,
                776,
              ],
              "type": "Identifier",
            },
          ],
          "name": "never",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 16,
          "defs": Array [
            Object {
              "name": Object {
                "name": "readonly",
                "range": Array [
                  780,
                  788,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  780,
                  788,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "readonly",
              "range": Array [
                780,
                788,
              ],
              "type": "Identifier",
            },
          ],
          "name": "readonly",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 17,
          "defs": Array [
            Object {
              "name": Object {
                "name": "require",
                "range": Array [
                  792,
                  799,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  792,
                  799,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "require",
              "range": Array [
                792,
                799,
              ],
              "type": "Identifier",
            },
          ],
          "name": "require",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 18,
          "defs": Array [
            Object {
              "name": Object {
                "name": "number",
                "range": Array [
                  803,
                  809,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  803,
                  809,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "number",
              "range": Array [
                803,
                809,
              ],
              "type": "Identifier",
            },
          ],
          "name": "number",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 19,
          "defs": Array [
            Object {
              "name": Object {
                "name": "object",
                "range": Array [
                  813,
                  819,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  813,
                  819,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "object",
              "range": Array [
                813,
                819,
              ],
              "type": "Identifier",
            },
          ],
          "name": "object",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 20,
          "defs": Array [
            Object {
              "name": Object {
                "name": "set",
                "range": Array [
                  823,
                  826,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  823,
                  826,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "set",
              "range": Array [
                823,
                826,
              ],
              "type": "Identifier",
            },
          ],
          "name": "set",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 21,
          "defs": Array [
            Object {
              "name": Object {
                "name": "string",
                "range": Array [
                  830,
                  836,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  830,
                  836,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "string",
              "range": Array [
                830,
                836,
              ],
              "type": "Identifier",
            },
          ],
          "name": "string",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 22,
          "defs": Array [
            Object {
              "name": Object {
                "name": "symbol",
                "range": Array [
                  840,
                  846,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  840,
                  846,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "symbol",
              "range": Array [
                840,
                846,
              ],
              "type": "Identifier",
            },
          ],
          "name": "symbol",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 23,
          "defs": Array [
            Object {
              "name": Object {
                "name": "type",
                "range": Array [
                  850,
                  854,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  850,
                  854,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "type",
              "range": Array [
                850,
                854,
              ],
              "type": "Identifier",
            },
          ],
          "name": "type",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 24,
          "defs": Array [
            Object {
              "name": Object {
                "name": "undefined",
                "range": Array [
                  858,
                  867,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  858,
                  867,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "undefined",
              "range": Array [
                858,
                867,
              ],
              "type": "Identifier",
            },
          ],
          "name": "undefined",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 25,
          "defs": Array [
            Object {
              "name": Object {
                "name": "unique",
                "range": Array [
                  871,
                  877,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  871,
                  877,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "unique",
              "range": Array [
                871,
                877,
              ],
              "type": "Identifier",
            },
          ],
          "name": "unique",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 26,
          "defs": Array [
            Object {
              "name": Object {
                "name": "unknown",
                "range": Array [
                  881,
                  888,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  881,
                  888,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "unknown",
              "range": Array [
                881,
                888,
              ],
              "type": "Identifier",
            },
          ],
          "name": "unknown",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 27,
          "defs": Array [
            Object {
              "name": Object {
                "name": "from",
                "range": Array [
                  892,
                  896,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  892,
                  896,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "from",
              "range": Array [
                892,
                896,
              ],
              "type": "Identifier",
            },
          ],
          "name": "from",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 28,
          "defs": Array [
            Object {
              "name": Object {
                "name": "global",
                "range": Array [
                  900,
                  906,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  900,
                  906,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "global",
              "range": Array [
                900,
                906,
              ],
              "type": "Identifier",
            },
          ],
          "name": "global",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 29,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bigint",
                "range": Array [
                  910,
                  916,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  910,
                  916,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bigint",
              "range": Array [
                910,
                916,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bigint",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 30,
          "defs": Array [
            Object {
              "name": Object {
                "name": "of",
                "range": Array [
                  920,
                  922,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  920,
                  922,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  615,
                  945,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "of",
              "range": Array [
                920,
                922,
              ],
              "type": "Identifier",
            },
          ],
          "name": "of",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
        Object {
          "$id": 31,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  968,
                  969,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  962,
                  1077,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                968,
                969,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 107,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 108,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/nested-type-arguments.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      44,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          44,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "nestedArray": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "nestedArray",
                "range": Array [
                  4,
                  44,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  44,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "nestedArray",
              "range": Array [
                4,
                44,
              ],
              "type": "Identifier",
            },
          ],
          "name": "nestedArray",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/never-type-param.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      46,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          46,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "Observable",
            "range": Array [
              19,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  6,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  17,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                6,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/new-target-in-arrow-function-body.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              10,
              26,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              26,
            ],
            "type": "ArrowFunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "b": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  26,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/non-null-assertion-operator.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      82,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "validateEntity",
                "range": Array [
                  41,
                  55,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "e",
                "range": Array [
                  56,
                  57,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "s",
                "range": Array [
                  68,
                  69,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": Object {
                "range": Array [
                  72,
                  79,
                ],
                "type": "MemberExpression",
              },
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "e",
                "range": Array [
                  72,
                  73,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "e": Object {
              "$ref": 2,
            },
            "s": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "e",
                    "range": Array [
                      23,
                      33,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      82,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "e",
                  "range": Array [
                    23,
                    33,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "e",
              "references": Array [
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "s",
                    "range": Array [
                      68,
                      69,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      68,
                      79,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      64,
                      80,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "s",
                  "range": Array [
                    68,
                    69,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "s",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "processEntity": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processEntity",
                "range": Array [
                  9,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processEntity",
              "range": Array [
                9,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processEntity",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/null-and-undefined-type-annotations.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  11,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  12,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  17,
                  29,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  17,
                  29,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  13,
                  30,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                17,
                29,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/nullish-coalescing.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      71,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          71,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              70,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "len",
                "range": Array [
                  52,
                  55,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": Object {
                "range": Array [
                  59,
                  66,
                ],
                "type": "LogicalExpression",
              },
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "s",
                "range": Array [
                  59,
                  60,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "len": Object {
              "$ref": 3,
            },
            "s": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "s",
                    "range": Array [
                      32,
                      42,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      70,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "s",
                  "range": Array [
                    32,
                    42,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "s",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "len",
                    "range": Array [
                      52,
                      55,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      52,
                      67,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      48,
                      68,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "len",
                  "range": Array [
                    52,
                    55,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "len",
              "references": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "processNullishCoalesce": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processNullishCoalesce",
                "range": Array [
                  9,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  70,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processNullishCoalesce",
              "range": Array [
                9,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processNullishCoalesce",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/object-with-escaped-properties.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      82,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              26,
              31,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              58,
              81,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "X": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "X",
                    "range": Array [
                      64,
                      65,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      58,
                      81,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "X",
                  "range": Array [
                    64,
                    65,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "X",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "X": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  64,
                  65,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  58,
                  81,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                64,
                65,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/object-with-typed-methods.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      176,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          176,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              29,
              61,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              68,
              100,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              109,
              138,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              147,
              172,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 8,
            },
            "x": Object {
              "$ref": 9,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 8,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 9,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      148,
                      157,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      147,
                      172,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    148,
                    157,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              174,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  174,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  175,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/optional-chain.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      135,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          135,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              134,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  40,
                  43,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  52,
                  55,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  70,
                  73,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  88,
                  91,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  111,
                  114,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "one": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "one",
                    "range": Array [
                      25,
                      34,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      134,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "one",
                  "range": Array [
                    25,
                    34,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "one",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "processOptional": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processOptional",
                "range": Array [
                  9,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  134,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processOptional",
              "range": Array [
                9,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processOptional",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/optional-chain-call.src 1`] = `
Object {
  "$id": 14,
  "block": Object {
    "range": Array [
      0,
      194,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 13,
      "block": Object {
        "range": Array [
          0,
          194,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 12,
          "block": Object {
            "range": Array [
              0,
              193,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  44,
                  47,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  57,
                  60,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  74,
                  77,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  91,
                  94,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  114,
                  117,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  139,
                  142,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 9,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  150,
                  153,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 10,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  163,
                  166,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 11,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  179,
                  182,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 13,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "one": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 12,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 12,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "one",
                    "range": Array [
                      29,
                      38,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      193,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "one",
                  "range": Array [
                    29,
                    38,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "one",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
                Object {
                  "$ref": 8,
                },
                Object {
                  "$ref": 9,
                },
                Object {
                  "$ref": 10,
                },
                Object {
                  "$ref": 11,
                },
              ],
              "scope": Object {
                "$ref": 12,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 14,
      },
      "variableMap": Object {
        "processOptionalCall": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 13,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processOptionalCall",
                "range": Array [
                  9,
                  28,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  193,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processOptionalCall",
              "range": Array [
                9,
                28,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processOptionalCall",
          "references": Array [],
          "scope": Object {
            "$ref": 13,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 14,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/optional-chain-call-with-parens.src 1`] = `
Object {
  "$id": 14,
  "block": Object {
    "range": Array [
      0,
      218,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 13,
      "block": Object {
        "range": Array [
          0,
          218,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 12,
          "block": Object {
            "range": Array [
              0,
              217,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  51,
                  54,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  66,
                  69,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  85,
                  88,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  104,
                  107,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  129,
                  132,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  156,
                  159,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 9,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  169,
                  172,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 10,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  184,
                  187,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 11,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  202,
                  205,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 13,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "one": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 12,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 12,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "one",
                    "range": Array [
                      35,
                      44,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      217,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "one",
                  "range": Array [
                    35,
                    44,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "one",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
                Object {
                  "$ref": 8,
                },
                Object {
                  "$ref": 9,
                },
                Object {
                  "$ref": 10,
                },
                Object {
                  "$ref": 11,
                },
              ],
              "scope": Object {
                "$ref": 12,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 14,
      },
      "variableMap": Object {
        "processOptionalCallParens": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 13,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processOptionalCallParens",
                "range": Array [
                  9,
                  34,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  217,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processOptionalCallParens",
              "range": Array [
                9,
                34,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processOptionalCallParens",
          "references": Array [],
          "scope": Object {
            "$ref": 13,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 14,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/optional-chain-element-access.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      142,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          142,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              0,
              141,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  47,
                  50,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  59,
                  62,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  74,
                  77,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  89,
                  92,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  104,
                  107,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  122,
                  125,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 10,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "one": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "one",
                    "range": Array [
                      32,
                      41,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      141,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "one",
                  "range": Array [
                    32,
                    41,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "one",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
                Object {
                  "$ref": 8,
                },
              ],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "processOptionalElement": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processOptionalElement",
                "range": Array [
                  9,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  141,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processOptionalElement",
              "range": Array [
                9,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processOptionalElement",
          "references": Array [],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/optional-chain-element-access-with-parens.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      168,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          168,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              0,
              167,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  54,
                  57,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  68,
                  71,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  85,
                  88,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  102,
                  105,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  122,
                  125,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  144,
                  147,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 10,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "one": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "one",
                    "range": Array [
                      38,
                      47,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      167,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "one",
                  "range": Array [
                    38,
                    47,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "one",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
                Object {
                  "$ref": 8,
                },
              ],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "processOptionalElementParens": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processOptionalElementParens",
                "range": Array [
                  9,
                  37,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  167,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processOptionalElementParens",
              "range": Array [
                9,
                37,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processOptionalElementParens",
          "references": Array [],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/optional-chain-with-parens.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      182,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          182,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              0,
              181,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  47,
                  50,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  61,
                  64,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  81,
                  84,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  101,
                  104,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  126,
                  129,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "one",
                "range": Array [
                  152,
                  155,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 10,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "one": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "one",
                    "range": Array [
                      31,
                      40,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      181,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "one",
                  "range": Array [
                    31,
                    40,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "one",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
                Object {
                  "$ref": 8,
                },
              ],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "processOptionalParens": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "processOptionalParens",
                "range": Array [
                  9,
                  30,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  181,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "processOptionalParens",
              "range": Array [
                9,
                30,
              ],
              "type": "Identifier",
            },
          ],
          "name": "processOptionalParens",
          "references": Array [],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/parenthesized-use-strict.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      45,
      60,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          45,
          60,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/readonly-arrays.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      211,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          211,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              106,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "arr",
                "range": Array [
                  45,
                  48,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "arr",
                "range": Array [
                  75,
                  78,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "arr": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "arr",
                    "range": Array [
                      13,
                      39,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      106,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "arr",
                  "range": Array [
                    13,
                    39,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "arr",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              108,
              210,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 10,
              },
              "identifier": Object {
                "name": "arr",
                "range": Array [
                  149,
                  152,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 7,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 9,
              "from": Object {
                "$ref": 10,
              },
              "identifier": Object {
                "name": "arr",
                "range": Array [
                  179,
                  182,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 7,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 6,
            },
            "arr": Object {
              "$ref": 7,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 7,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "arr",
                    "range": Array [
                      121,
                      143,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      108,
                      210,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "arr",
                  "range": Array [
                    121,
                    143,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "arr",
              "references": Array [
                Object {
                  "$ref": 8,
                },
                Object {
                  "$ref": 9,
                },
              ],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  106,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  117,
                  120,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  108,
                  210,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
            Object {
              "name": "foo",
              "range": Array [
                117,
                120,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/readonly-tuples.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      119,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          119,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              118,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "console",
                "range": Array [
                  50,
                  57,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "pair",
                "range": Array [
                  62,
                  66,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "pair",
                "range": Array [
                  84,
                  88,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "pair": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "pair",
                    "range": Array [
                      13,
                      44,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      118,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "pair",
                  "range": Array [
                    13,
                    44,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "pair",
              "references": Array [
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  118,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/symbol-type-param.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              42,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "abc": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "abc",
                    "range": Array [
                      14,
                      38,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      42,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "abc",
                  "range": Array [
                    14,
                    38,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "abc",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "test",
                "range": Array [
                  9,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  42,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "test",
              "range": Array [
                9,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "test",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-alias-declaration.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-alias-declaration-export.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-alias-declaration-export-function-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-alias-declaration-export-object-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-alias-declaration-with-constrained-type-parameter.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-alias-object-without-annotation.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-in-arrow-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      59,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          59,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              21,
              58,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      22,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      21,
                      58,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    22,
                    28,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "assertString",
            "range": Array [
              6,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              58,
            ],
            "type": "ArrowFunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "assertString": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "assertString",
                "range": Array [
                  6,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  58,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  58,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "assertString",
              "range": Array [
                6,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "assertString",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-in-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              56,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      23,
                      29,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      56,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    23,
                    29,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "assertsString": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "assertsString",
                "range": Array [
                  9,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  56,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "assertsString",
              "range": Array [
                9,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "assertsString",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-in-interface.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      61,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          61,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-in-method.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      111,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          111,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              110,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  26,
                  60,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  71,
                  108,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "AssertsFoo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AssertsFoo",
                    "range": Array [
                      6,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      110,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AssertsFoo",
                  "range": Array [
                    6,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AssertsFoo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "AssertsFoo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AssertsFoo",
                "range": Array [
                  6,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  110,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AssertsFoo",
              "range": Array [
                6,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AssertsFoo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-with-guard-in-arrow-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      69,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          69,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              21,
              68,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      22,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      21,
                      68,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    22,
                    28,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "assertString",
            "range": Array [
              6,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              68,
            ],
            "type": "ArrowFunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "assertString": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "assertString",
                "range": Array [
                  6,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  68,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  68,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "assertString",
              "range": Array [
                6,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "assertString",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-with-guard-in-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      72,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          72,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              71,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      28,
                      34,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      71,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    28,
                    34,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "assertsStringGuard": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "assertsStringGuard",
                "range": Array [
                  9,
                  27,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  71,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "assertsStringGuard",
              "range": Array [
                9,
                27,
              ],
              "type": "Identifier",
            },
          ],
          "name": "assertsStringGuard",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-with-guard-in-interface.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      71,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          71,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-assertion-with-guard-in-method.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      131,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          131,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              130,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  26,
                  70,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  81,
                  128,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "AssertsFoo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AssertsFoo",
                    "range": Array [
                      6,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      130,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AssertsFoo",
                  "range": Array [
                    6,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AssertsFoo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "AssertsFoo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AssertsFoo",
                "range": Array [
                  6,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  130,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AssertsFoo",
              "range": Array [
                6,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AssertsFoo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-guard-in-arrow-function.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      79,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          79,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              17,
              78,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  62,
                  63,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      18,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      17,
                      78,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    18,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "isString",
            "range": Array [
              6,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              78,
            ],
            "type": "ArrowFunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "isString": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "isString",
                "range": Array [
                  6,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  78,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  78,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "isString",
              "range": Array [
                6,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "isString",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-guard-in-function.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      75,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          75,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              75,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  59,
                  60,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      18,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      75,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    18,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "isString": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "isString",
                "range": Array [
                  9,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  75,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "isString",
              "range": Array [
                9,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "isString",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-guard-in-interface.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-guard-in-method.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      148,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          148,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              147,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  19,
                  75,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 4,
                  },
                  "identifier": Object {
                    "name": "Foo",
                    "range": Array [
                      67,
                      70,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 1,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  86,
                  145,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "Foo",
                    "range": Array [
                      137,
                      140,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 1,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      147,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  147,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-import-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      56,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          56,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-import-type-with-type-parameters-in-type-reference.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-parameters-comments.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      138,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          138,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              44,
              87,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              88,
              137,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 5,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 0,
        },
        "baz": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  53,
                  56,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  44,
                  87,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                53,
                56,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "baz",
                "range": Array [
                  97,
                  100,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  88,
                  137,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "baz",
              "range": Array [
                97,
                100,
              ],
              "type": "Identifier",
            },
          ],
          "name": "baz",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-parameters-comments-heritage.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      339,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          339,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              74,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "foo": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      74,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              75,
              164,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "foo2": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo2",
                    "range": Array [
                      81,
                      85,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      75,
                      164,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo2",
                  "range": Array [
                    81,
                    85,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo2",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              43,
              46,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              133,
              136,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
        "foo2": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  74,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo2",
                "range": Array [
                  81,
                  85,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  75,
                  164,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo2",
              "range": Array [
                81,
                85,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo2",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/type-reference-comments.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      78,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          78,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              77,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "AudioBufferList": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "AudioBufferList",
                    "range": Array [
                      6,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      77,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "AudioBufferList",
                  "range": Array [
                    6,
                    21,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "AudioBufferList",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "AudioBufferList": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "AudioBufferList",
                "range": Array [
                  6,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  77,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "AudioBufferList",
              "range": Array [
                6,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "AudioBufferList",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-bigint.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-boolean.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-false.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-never.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-null.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-number.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-object.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-string.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-symbol.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-true.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-undefined.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-unknown.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-keyword-void.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-method-signature.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      58,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          58,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/typed-this.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      90,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          90,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/unique-symbol.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/unknown-type-annotation.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/var-with-definite-assignment.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  6,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                6,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  22,
                  32,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  22,
                  32,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  18,
                  33,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                22,
                32,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  38,
                  48,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  38,
                  48,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  34,
                  49,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                38,
                48,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/var-with-dotted-type.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/var-with-type.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      55,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          55,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "name",
            "range": Array [
              4,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              18,
              28,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              34,
              45,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              48,
              53,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 1,
        },
        "name": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "name",
                "range": Array [
                  4,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  28,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "name",
              "range": Array [
                4,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "name",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  34,
                  45,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  34,
                  53,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  30,
                  54,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                34,
                45,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/basics/variable-declaration-type-annotation-spacing.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  21,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/abstract-class.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              31,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      23,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      31,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    23,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  23,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                23,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/class.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      14,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    14,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                14,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/enum.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Bar": Object {
              "$ref": 1,
            },
            "Baz": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Bar",
                    "range": Array [
                      23,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      23,
                      26,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Bar",
                  "range": Array [
                    23,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Bar",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Baz",
                    "range": Array [
                      32,
                      35,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      32,
                      35,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Baz",
                  "range": Array [
                    32,
                    35,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Baz",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/function.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  17,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                17,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/interface.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/module.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              19,
              23,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/namespace.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              22,
              26,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  18,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                18,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/type-alias.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/declare/variable.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  12,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  12,
                  20,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                12,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/accessor-decorators/accessor-decorator-factory-instance-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      72,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          72,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              72,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  48,
                  70,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "configurable",
                "range": Array [
                  19,
                  31,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Point": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Point",
                    "range": Array [
                      6,
                      11,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      72,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Point",
                  "range": Array [
                    6,
                    11,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Point",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Point": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Point",
                "range": Array [
                  6,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  72,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Point",
              "range": Array [
                6,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Point",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/accessor-decorators/accessor-decorator-factory-static-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      82,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  56,
                  80,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  19,
                  22,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Other": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Other",
                    "range": Array [
                      6,
                      11,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      82,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Other",
                  "range": Array [
                    6,
                    11,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Other",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Other": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Other",
                "range": Array [
                  6,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Other",
              "range": Array [
                6,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Other",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/accessor-decorators/accessor-decorator-instance-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      55,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          55,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              55,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  31,
                  53,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "hidden",
                "range": Array [
                  15,
                  21,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "P": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "P",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      55,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "P",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "P",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "P": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "P",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  55,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "P",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "P",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/accessor-decorators/accessor-decorator-static-member.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      78,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          78,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              78,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  44,
                  76,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "a",
                    "range": Array [
                      68,
                      69,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 4,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 4,
                },
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          45,
                          46,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          44,
                          76,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        45,
                        46,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "adminonly",
                "range": Array [
                  18,
                  27,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "User": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "User",
                    "range": Array [
                      6,
                      10,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      78,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "User",
                  "range": Array [
                    6,
                    10,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "User",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "User": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "User",
                "range": Array [
                  6,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  78,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "User",
              "range": Array [
                6,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "User",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/class-decorators/class-decorator.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              20,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Qux": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Qux",
                    "range": Array [
                      14,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      20,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Qux",
                  "range": Array [
                    14,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Qux",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "sealed",
            "range": Array [
              1,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Qux": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Qux",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Qux",
              "range": Array [
                14,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Qux",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/class-decorators/class-decorator-factory.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      58,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          58,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              58,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "FooComponent": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "FooComponent",
                    "range": Array [
                      43,
                      55,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      58,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "FooComponent",
                  "range": Array [
                    43,
                    55,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "FooComponent",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "Component",
            "range": Array [
              1,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "FooComponent": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "FooComponent",
                "range": Array [
                  43,
                  55,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  58,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "FooComponent",
              "range": Array [
                43,
                55,
              ],
              "type": "Identifier",
            },
          ],
          "name": "FooComponent",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/method-decorators/method-decorator-factory-instance-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              56,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  49,
                  54,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "onlyRead",
                "range": Array [
                  15,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "B": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "B",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      56,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "B",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "B",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "B": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "B",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  56,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "B",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "B",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/method-decorators/method-decorator-factory-static-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              56,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  49,
                  54,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      56,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  56,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/method-decorators/method-decorator-instance-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  42,
                  47,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "onlyRead",
                "range": Array [
                  15,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/method-decorators/method-decorator-static-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  42,
                  47,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "D": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "D",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      49,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "D",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "D",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "D": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "D",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "D",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "D",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-array-pattern-decorator.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  49,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "special",
                    "range": Array [
                      19,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          35,
                          38,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          49,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        35,
                        38,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-decorator-constructor.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      116,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          116,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              115,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  31,
                  113,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "Inject",
                    "range": Array [
                      33,
                      39,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "APP_CONFIG",
                    "range": Array [
                      40,
                      50,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 6,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "config",
                    "range": Array [
                      94,
                      100,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "config": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "config",
                        "range": Array [
                          52,
                          69,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          31,
                          113,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "config",
                      "range": Array [
                        52,
                        69,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "config",
                  "references": Array [
                    Object {
                      "$ref": 6,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "Service": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Service",
                    "range": Array [
                      6,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      115,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Service",
                  "range": Array [
                    6,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Service",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "Service": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Service",
                "range": Array [
                  6,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  115,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Service",
              "range": Array [
                6,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Service",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-decorator-decorator-instance-member.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      53,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          53,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              52,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  19,
                  50,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "special",
                    "range": Array [
                      21,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "baz": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "baz",
                        "range": Array [
                          35,
                          46,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          19,
                          50,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "baz",
                      "range": Array [
                        35,
                        46,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "baz",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      52,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  52,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-decorator-decorator-static-member.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      66,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          66,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              65,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  32,
                  63,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "special",
                    "range": Array [
                      34,
                      41,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "baz": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "baz",
                        "range": Array [
                          48,
                          59,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          32,
                          63,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "baz",
                      "range": Array [
                        48,
                        59,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "baz",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "StaticFoo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "StaticFoo",
                    "range": Array [
                      6,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      65,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "StaticFoo",
                  "range": Array [
                    6,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "StaticFoo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "StaticFoo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "StaticFoo",
                "range": Array [
                  6,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  65,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "StaticFoo",
              "range": Array [
                6,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "StaticFoo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-decorator-instance-member.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      98,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          98,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              97,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  25,
                  95,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "required",
                    "range": Array [
                      27,
                      35,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "name",
                    "range": Array [
                      78,
                      82,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "name": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "name",
                        "range": Array [
                          36,
                          48,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          95,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "name",
                      "range": Array [
                        36,
                        48,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "name",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "Greeter": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Greeter",
                    "range": Array [
                      6,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      97,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Greeter",
                  "range": Array [
                    6,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Greeter",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "Greeter": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Greeter",
                "range": Array [
                  6,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  97,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Greeter",
              "range": Array [
                6,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Greeter",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-decorator-static-member.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      111,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          111,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              110,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  38,
                  108,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "required",
                    "range": Array [
                      40,
                      48,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "name",
                    "range": Array [
                      91,
                      95,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "name": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "name",
                        "range": Array [
                          49,
                          61,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          38,
                          108,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "name",
                      "range": Array [
                        49,
                        61,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "name",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "StaticGreeter": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "StaticGreeter",
                    "range": Array [
                      6,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      110,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "StaticGreeter",
                  "range": Array [
                    6,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "StaticGreeter",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "StaticGreeter": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "StaticGreeter",
                "range": Array [
                  6,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  110,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "StaticGreeter",
              "range": Array [
                6,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "StaticGreeter",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-object-pattern-decorator.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  49,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "special",
                    "range": Array [
                      19,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          35,
                          38,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          49,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        35,
                        38,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/parameter-decorators/parameter-rest-element-decorator.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              50,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  48,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "special",
                    "range": Array [
                      19,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          36,
                          39,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          48,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        36,
                        39,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      50,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  50,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/property-decorators/property-decorator-factory-instance-member.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      88,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          88,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              88,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Input",
                "range": Array [
                  27,
                  32,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Output",
                "range": Array [
                  46,
                  52,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "EventEmitter",
                "range": Array [
                  71,
                  83,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "SomeComponent": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "SomeComponent",
                    "range": Array [
                      6,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      88,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "SomeComponent",
                  "range": Array [
                    6,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "SomeComponent",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "SomeComponent": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "SomeComponent",
                "range": Array [
                  6,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  88,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "SomeComponent",
              "range": Array [
                6,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "SomeComponent",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/property-decorators/property-decorator-factory-static-member.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      93,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          93,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              93,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "configurable",
                "range": Array [
                  15,
                  27,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "configurable",
                "range": Array [
                  54,
                  66,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      93,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  93,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/property-decorators/property-decorator-instance-member.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  27,
                  30,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "B": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "B",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      39,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "B",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "B",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "B": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "B",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "B",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "B",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/decorators/property-decorators/property-decorator-static-member.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      54,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          54,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              53,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "baz",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "qux",
                "range": Array [
                  34,
                  37,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      53,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  53,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/class-empty-extends.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/class-empty-extends-implements.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      37,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/class-extends-empty-implements.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      37,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "Bar",
            "range": Array [
              18,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/class-multiple-implements.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              36,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      36,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/decorator-on-enum-declaration.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              14,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "E": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "E",
                "range": Array [
                  10,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  14,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "E",
              "range": Array [
                10,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "E",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/decorator-on-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              19,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "b": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  19,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                14,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/decorator-on-interface-declaration.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/decorator-on-variable.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              18,
              19,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  14,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  19,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                14,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-arguments.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-arguments-in-call-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      9,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          9,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-arguments-in-new-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "Foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-parameters.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "f1": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f1",
                "range": Array [
                  9,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f1",
              "range": Array [
                9,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f1",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-parameters-in-arrow-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "f1": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f1",
                "range": Array [
                  9,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f1",
              "range": Array [
                9,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f1",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-parameters-in-constructor.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  25,
                  32,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      34,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-parameters-in-function-expression.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              12,
              27,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              27,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-parameters-in-method.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              27,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  18,
                  25,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      27,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "foo",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/empty-type-parameters-in-method-signature.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/enum-with-keywords.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      72,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          72,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              7,
              72,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "X": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  68,
                  69,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  72,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                68,
                69,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/index-signature-parameters.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-empty-extends.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-implements.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-index-signature-export.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-index-signature-private.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-index-signature-protected.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      54,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          54,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-index-signature-public.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-index-signature-static.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-method-export.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-method-private.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      53,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          53,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-method-protected.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      53,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          53,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-method-public.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-method-readonly.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-method-static.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-multiple-extends.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      41,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          41,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-property-export.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-property-private.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-property-protected.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-property-public.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      41,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          41,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-property-static.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-property-with-default-value.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/interface-with-no-body.src 1`] = `"'{' expected."`;

exports[`typescript fixtures/errorRecovery/interface-with-optional-index-signature.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      44,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          44,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/object-assertion-not-allowed.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              2,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              8,
              10,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/object-optional-not-allowed.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              2,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              8,
              10,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/errorRecovery/solo-const.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      5,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          5,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/expressions/call-expression-type-arguments.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              10,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/expressions/new-expression-type-arguments.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              20,
            ],
            "type": "NewExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "A",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  20,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/expressions/optional-call-expression-type-arguments.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              15,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/expressions/tagged-template-expression-type-arguments.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/namespaces-and-modules/ambient-module-declaration-with-import.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              30,
              56,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "fs": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "fs",
                    "range": Array [
                      41,
                      43,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      41,
                      43,
                    ],
                    "type": "ImportDefaultSpecifier",
                  },
                  "parent": Object {
                    "range": Array [
                      34,
                      54,
                    ],
                    "type": "ImportDeclaration",
                  },
                  "type": "ImportBinding",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "fs",
                  "range": Array [
                    41,
                    43,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "fs",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/namespaces-and-modules/declare-namespace-with-exported-function.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      84,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          84,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              21,
              84,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  32,
                  82,
                ],
                "type": "TSDeclareFunction",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "empty-function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "selector": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "selector",
                        "range": Array [
                          48,
                          64,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          32,
                          82,
                        ],
                        "type": "TSDeclareFunction",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": true,
                  "identifiers": Array [
                    Object {
                      "name": "selector",
                      "range": Array [
                        48,
                        64,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "selector",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "select": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "select",
                    "range": Array [
                      41,
                      47,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      32,
                      82,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "FunctionName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "select",
                  "range": Array [
                    41,
                    47,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "select",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "d3": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "d3",
                "range": Array [
                  18,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  84,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "d3",
              "range": Array [
                18,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "d3",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/namespaces-and-modules/global-module-declaration.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      92,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          92,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          43,
          51,
        ],
        "type": "TSModuleBlock",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "block",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          81,
          89,
        ],
        "type": "TSModuleBlock",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "block",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "global": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "global",
            "range": Array [
              36,
              42,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              21,
              51,
            ],
            "type": "TSModuleDeclaration",
          },
          "parent": null,
          "type": "NamespaceName",
        },
        Object {
          "name": Object {
            "name": "global",
            "range": Array [
              74,
              80,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              56,
              89,
            ],
            "type": "TSModuleDeclaration",
          },
          "parent": null,
          "type": "NamespaceName",
        },
      ],
      "eslintUsed": true,
      "identifiers": Array [
        Object {
          "name": "global",
          "range": Array [
            36,
            42,
          ],
          "type": "Identifier",
        },
        Object {
          "name": "global",
          "range": Array [
            74,
            80,
          ],
          "type": "Identifier",
        },
      ],
      "name": "global",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`typescript fixtures/namespaces-and-modules/module-with-default-exports.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      114,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          114,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              13,
              112,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  34,
                  73,
                ],
                "type": "ClassDeclaration",
              },
              "childScopes": Array [
                Object {
                  "$id": 4,
                  "block": Object {
                    "range": Array [
                      58,
                      66,
                    ],
                    "type": "FunctionExpression",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "function",
                  "upperScope": Object {
                    "$ref": 5,
                  },
                  "variableMap": Object {
                    "arguments": Object {
                      "$ref": 3,
                    },
                  },
                  "variableScope": Object {
                    "$ref": 4,
                  },
                  "variables": Array [
                    Object {
                      "$id": 3,
                      "defs": Array [],
                      "eslintUsed": undefined,
                      "identifiers": Array [],
                      "name": "arguments",
                      "references": Array [],
                      "scope": Object {
                        "$ref": 4,
                      },
                    },
                  ],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "class",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "C": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 9,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "C",
                        "range": Array [
                          40,
                          41,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          34,
                          73,
                        ],
                        "type": "ClassDeclaration",
                      },
                      "parent": undefined,
                      "type": "ClassName",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "C",
                      "range": Array [
                        40,
                        41,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "C",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  93,
                  110,
                ],
                "type": "FunctionDeclaration",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 0,
            },
            "bar": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      40,
                      41,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      34,
                      73,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": null,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    40,
                    41,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      102,
                      105,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      93,
                      110,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "FunctionName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    102,
                    105,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/namespaces-and-modules/nested-internal-module.src 1`] = `
Object {
  "$id": 14,
  "block": Object {
    "range": Array [
      0,
      231,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 13,
      "block": Object {
        "range": Array [
          0,
          231,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 12,
          "block": Object {
            "range": Array [
              9,
              231,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [
            Object {
              "$id": 10,
              "block": Object {
                "range": Array [
                  56,
                  135,
                ],
                "type": "ClassDeclaration",
              },
              "childScopes": Array [
                Object {
                  "$id": 9,
                  "block": Object {
                    "range": Array [
                      89,
                      129,
                    ],
                    "type": "FunctionExpression",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "function",
                  "upperScope": Object {
                    "$ref": 10,
                  },
                  "variableMap": Object {
                    "arguments": Object {
                      "$ref": 6,
                    },
                    "x": Object {
                      "$ref": 7,
                    },
                    "y": Object {
                      "$ref": 8,
                    },
                  },
                  "variableScope": Object {
                    "$ref": 9,
                  },
                  "variables": Array [
                    Object {
                      "$id": 6,
                      "defs": Array [],
                      "eslintUsed": undefined,
                      "identifiers": Array [],
                      "name": "arguments",
                      "references": Array [],
                      "scope": Object {
                        "$ref": 9,
                      },
                    },
                    Object {
                      "$id": 7,
                      "defs": Array [
                        Object {
                          "name": Object {
                            "name": "x",
                            "range": Array [
                              97,
                              106,
                            ],
                            "type": "Identifier",
                          },
                          "node": Object {
                            "range": Array [
                              89,
                              129,
                            ],
                            "type": "FunctionExpression",
                          },
                          "parent": null,
                          "type": "Parameter",
                        },
                      ],
                      "eslintUsed": undefined,
                      "identifiers": Array [
                        Object {
                          "name": "x",
                          "range": Array [
                            97,
                            106,
                          ],
                          "type": "Identifier",
                        },
                      ],
                      "name": "x",
                      "references": Array [],
                      "scope": Object {
                        "$ref": 9,
                      },
                    },
                    Object {
                      "$id": 8,
                      "defs": Array [
                        Object {
                          "name": Object {
                            "name": "y",
                            "range": Array [
                              115,
                              124,
                            ],
                            "type": "Identifier",
                          },
                          "node": Object {
                            "range": Array [
                              89,
                              129,
                            ],
                            "type": "FunctionExpression",
                          },
                          "parent": null,
                          "type": "Parameter",
                        },
                      ],
                      "eslintUsed": undefined,
                      "identifiers": Array [
                        Object {
                          "name": "y",
                          "range": Array [
                            115,
                            124,
                          ],
                          "type": "Identifier",
                        },
                      ],
                      "name": "y",
                      "references": Array [],
                      "scope": Object {
                        "$ref": 9,
                      },
                    },
                  ],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "class",
              "upperScope": Object {
                "$ref": 12,
              },
              "variableMap": Object {
                "Point": Object {
                  "$ref": 5,
                },
              },
              "variableScope": Object {
                "$ref": 13,
              },
              "variables": Array [
                Object {
                  "$id": 5,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "Point",
                        "range": Array [
                          62,
                          67,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          56,
                          135,
                        ],
                        "type": "ClassDeclaration",
                      },
                      "parent": undefined,
                      "type": "ClassName",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "Point",
                      "range": Array [
                        62,
                        67,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "Point",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 10,
                  },
                },
              ],
            },
            Object {
              "$id": 11,
              "block": Object {
                "range": Array [
                  156,
                  229,
                ],
                "type": "TSModuleBlock",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 12,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 13,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  27,
                  28,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  31,
                  44,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "block",
          "upperScope": Object {
            "$ref": 13,
          },
          "variableMap": Object {
            "B": Object {
              "$ref": 3,
            },
            "Point": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 13,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Point",
                    "range": Array [
                      62,
                      67,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      56,
                      135,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": null,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Point",
                  "range": Array [
                    62,
                    67,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Point",
              "references": Array [],
              "scope": Object {
                "$ref": 12,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "B",
                    "range": Array [
                      154,
                      155,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      147,
                      229,
                    ],
                    "type": "TSModuleDeclaration",
                  },
                  "parent": null,
                  "type": "NamespaceName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "B",
                  "range": Array [
                    154,
                    155,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "B",
              "references": Array [],
              "scope": Object {
                "$ref": 12,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 14,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
        "x": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 13,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  231,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 13,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  27,
                  28,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  27,
                  44,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  23,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                27,
                28,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 14,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/namespaces-and-modules/shorthand-ambient-module-declaration.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/array-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/conditional.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  47,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                47,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/conditional-infer.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/conditional-infer-nested.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      127,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          127,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/conditional-infer-simple.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      64,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          64,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/conditional-with-null.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  45,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  45,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  46,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                45,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/constructor.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      44,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          44,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  42,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  42,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                42,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/constructor-generic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/constructor-in-generic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  30,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                30,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/constructor-with-rest.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  35,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  35,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                35,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  38,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  38,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                38,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function-generic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  21,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function-in-generic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  24,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function-with-array-destruction.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function-with-object-destruction.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function-with-rest.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/function-with-this.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  29,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  29,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  30,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                29,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/index-signature.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/index-signature-readonly.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/index-signature-without-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/indexed.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  11,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  12,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/intersection-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/literal-number.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  8,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  9,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/literal-number-negative.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  9,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/literal-string.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/mapped.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  35,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  35,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                35,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/mapped-readonly.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  45,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  45,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  46,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                45,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/mapped-readonly-minus.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  46,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  46,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  47,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                46,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/mapped-readonly-plus.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  47,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                47,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/mapped-untypped.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  27,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                27,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/nested-types.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          81,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/parenthesized-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/reference.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  8,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  9,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/reference-generic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  20,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/reference-generic-nested.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  27,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                27,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/this-type.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              56,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  23,
                  54,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "Message": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Message",
                    "range": Array [
                      6,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      56,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Message",
                  "range": Array [
                    6,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Message",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Message": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Message",
                "range": Array [
                  6,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  56,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Message",
              "range": Array [
                6,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Message",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/this-type-expanded.src 1`] = `
Object {
  "$id": 24,
  "block": Object {
    "range": Array [
      0,
      452,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 23,
      "block": Object {
        "range": Array [
          0,
          452,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 22,
          "block": Object {
            "range": Array [
              0,
              451,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  46,
                  91,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 22,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  109,
                  149,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 22,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
            Object {
              "$id": 11,
              "block": Object {
                "range": Array [
                  167,
                  237,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [
                Object {
                  "$id": 10,
                  "block": Object {
                    "range": Array [
                      203,
                      215,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "function",
                  "upperScope": Object {
                    "$ref": 11,
                  },
                  "variableMap": Object {},
                  "variableScope": Object {
                    "$ref": 10,
                  },
                  "variables": Array [],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 8,
                  "from": Object {
                    "$ref": 11,
                  },
                  "identifier": Object {
                    "name": "fn",
                    "range": Array [
                      198,
                      200,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 7,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      203,
                      215,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                },
                Object {
                  "$id": 9,
                  "from": Object {
                    "$ref": 11,
                  },
                  "identifier": Object {
                    "name": "fn",
                    "range": Array [
                      228,
                      230,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 7,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 22,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 6,
                },
                "fn": Object {
                  "$ref": 7,
                },
              },
              "variableScope": Object {
                "$ref": 11,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 11,
                  },
                },
                Object {
                  "$id": 7,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "fn",
                        "range": Array [
                          198,
                          200,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          198,
                          215,
                        ],
                        "type": "VariableDeclarator",
                      },
                      "parent": Object {
                        "range": Array [
                          194,
                          216,
                        ],
                        "type": "VariableDeclaration",
                      },
                      "type": "Variable",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "fn",
                      "range": Array [
                        198,
                        200,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "fn",
                  "references": Array [
                    Object {
                      "$ref": 8,
                    },
                    Object {
                      "$ref": 9,
                    },
                  ],
                  "scope": Object {
                    "$ref": 11,
                  },
                },
              ],
            },
            Object {
              "$id": 17,
              "block": Object {
                "range": Array [
                  255,
                  322,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [
                Object {
                  "$id": 16,
                  "block": Object {
                    "range": Array [
                      288,
                      300,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "function",
                  "upperScope": Object {
                    "$ref": 17,
                  },
                  "variableMap": Object {},
                  "variableScope": Object {
                    "$ref": 16,
                  },
                  "variables": Array [],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 14,
                  "from": Object {
                    "$ref": 17,
                  },
                  "identifier": Object {
                    "name": "fn",
                    "range": Array [
                      283,
                      285,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 13,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      288,
                      300,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                },
                Object {
                  "$id": 15,
                  "from": Object {
                    "$ref": 17,
                  },
                  "identifier": Object {
                    "name": "fn",
                    "range": Array [
                      313,
                      315,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 13,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 22,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 12,
                },
                "fn": Object {
                  "$ref": 13,
                },
              },
              "variableScope": Object {
                "$ref": 17,
              },
              "variables": Array [
                Object {
                  "$id": 12,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 17,
                  },
                },
                Object {
                  "$id": 13,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "fn",
                        "range": Array [
                          283,
                          285,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          283,
                          300,
                        ],
                        "type": "VariableDeclarator",
                      },
                      "parent": Object {
                        "range": Array [
                          279,
                          301,
                        ],
                        "type": "VariableDeclaration",
                      },
                      "type": "Variable",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "fn",
                      "range": Array [
                        283,
                        285,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "fn",
                  "references": Array [
                    Object {
                      "$ref": 14,
                    },
                    Object {
                      "$ref": 15,
                    },
                  ],
                  "scope": Object {
                    "$ref": 17,
                  },
                },
              ],
            },
            Object {
              "$id": 19,
              "block": Object {
                "range": Array [
                  345,
                  387,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 22,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 18,
                },
              },
              "variableScope": Object {
                "$ref": 19,
              },
              "variables": Array [
                Object {
                  "$id": 18,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 19,
                  },
                },
              ],
            },
            Object {
              "$id": 21,
              "block": Object {
                "range": Array [
                  404,
                  449,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 22,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 20,
                },
              },
              "variableScope": Object {
                "$ref": 21,
              },
              "variables": Array [
                Object {
                  "$id": 20,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 21,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 23,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 23,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      451,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 22,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 24,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 23,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  451,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 23,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 24,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/tuple.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/tuple-empty.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  9,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/tuple-optional.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      45,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          45,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  44,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  44,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                44,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/tuple-rest.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  28,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  28,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                28,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/tuple-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/type-literal.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/type-operator.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  20,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  20,
                  36,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  16,
                  37,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                20,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/typeof.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  17,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/union-intersection.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      161,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          161,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "intersection": Object {
          "$ref": 1,
        },
        "precedence1": Object {
          "$ref": 2,
        },
        "precedence2": Object {
          "$ref": 3,
        },
        "union": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "union",
                "range": Array [
                  4,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  36,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "union",
              "range": Array [
                4,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "union",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "intersection",
                "range": Array [
                  42,
                  71,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  42,
                  71,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  38,
                  72,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "intersection",
              "range": Array [
                42,
                71,
              ],
              "type": "Identifier",
            },
          ],
          "name": "intersection",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "precedence1",
                "range": Array [
                  77,
                  115,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  77,
                  115,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  73,
                  116,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "precedence1",
              "range": Array [
                77,
                115,
              ],
              "type": "Identifier",
            },
          ],
          "name": "precedence1",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "precedence2",
                "range": Array [
                  121,
                  159,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  121,
                  159,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  117,
                  160,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "precedence2",
              "range": Array [
                121,
                159,
              ],
              "type": "Identifier",
            },
          ],
          "name": "precedence2",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`typescript fixtures/types/union-type.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;
