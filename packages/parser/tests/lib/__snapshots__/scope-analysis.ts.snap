// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/535.ts 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  45,
                  48,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "bar": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      15,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    15,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/abstract-class.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      69,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          69,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              68,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      68,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  68,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/class-implements.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      83,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          83,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      6,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      82,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    6,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/class-properties.ts 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              19,
              62,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "s",
                "range": Array [
                  43,
                  44,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "s",
                "range": Array [
                  50,
                  51,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      25,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      19,
                      62,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    25,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              18,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "Symbol",
            "range": Array [
              10,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 1,
        },
        "s": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "s",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "s",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "s",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  62,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/class-supper-type.ts 1`] = `
Object {
  "$id": 13,
  "block": Object {
    "range": Array [
      0,
      117,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 12,
      "block": Object {
        "range": Array [
          0,
          117,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              40,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 12,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 12,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      15,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      40,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    15,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              42,
              82,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 12,
          },
          "variableMap": Object {
            "Foo2": Object {
              "$ref": 8,
            },
          },
          "variableScope": Object {
            "$ref": 12,
          },
          "variables": Array [
            Object {
              "$id": 8,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo2",
                    "range": Array [
                      56,
                      60,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      42,
                      82,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo2",
                  "range": Array [
                    56,
                    60,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo2",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
        Object {
          "$id": 11,
          "block": Object {
            "range": Array [
              84,
              116,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 12,
          },
          "variableMap": Object {
            "Foo3": Object {
              "$ref": 10,
            },
          },
          "variableScope": Object {
            "$ref": 12,
          },
          "variables": Array [
            Object {
              "$id": 10,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo3",
                    "range": Array [
                      90,
                      94,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      84,
                      116,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo3",
                  "range": Array [
                    90,
                    94,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo3",
              "references": Array [],
              "scope": Object {
                "$ref": 11,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 12,
          },
          "identifier": Object {
            "name": "Bar",
            "range": Array [
              27,
              30,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 12,
          },
          "identifier": Object {
            "name": "Bar",
            "range": Array [
              69,
              72,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 12,
          },
          "identifier": Object {
            "name": "Bar",
            "range": Array [
              103,
              106,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 13,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
        "Foo2": Object {
          "$ref": 1,
        },
        "Foo3": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 12,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  40,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 12,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo2",
                "range": Array [
                  56,
                  60,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  42,
                  82,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo2",
              "range": Array [
                56,
                60,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo2",
          "references": Array [],
          "scope": Object {
            "$ref": 12,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo3",
                "range": Array [
                  90,
                  94,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  84,
                  116,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo3",
              "range": Array [
                90,
                94,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo3",
          "references": Array [],
          "scope": Object {
            "$ref": 12,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 13,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/computed-properties-in-interface.ts 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      110,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          110,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s1",
            "range": Array [
              6,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              11,
              19,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "Symbol",
            "range": Array [
              11,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s2",
            "range": Array [
              21,
              23,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              26,
              34,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "Symbol",
            "range": Array [
              26,
              32,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s1",
            "range": Array [
              54,
              56,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s2",
            "range": Array [
              71,
              73,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "s1": Object {
          "$ref": 0,
        },
        "s2": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "s1",
                "range": Array [
                  6,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "s1",
              "range": Array [
                6,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "s1",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "s2",
                "range": Array [
                  21,
                  23,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  21,
                  34,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "s2",
              "range": Array [
                21,
                23,
              ],
              "type": "Identifier",
            },
          ],
          "name": "s2",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/computed-properties-in-type.ts 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      107,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          107,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s1",
            "range": Array [
              6,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              11,
              19,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "Symbol",
            "range": Array [
              11,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s2",
            "range": Array [
              21,
              23,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              26,
              34,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "Symbol",
            "range": Array [
              26,
              32,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s1",
            "range": Array [
              51,
              53,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "s2",
            "range": Array [
              68,
              70,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "s1": Object {
          "$ref": 0,
        },
        "s2": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "s1",
                "range": Array [
                  6,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "s1",
              "range": Array [
                6,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "s1",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "s2",
                "range": Array [
                  21,
                  23,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  21,
                  34,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "s2",
              "range": Array [
                21,
                23,
              ],
              "type": "Identifier",
            },
          ],
          "name": "s2",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/declare-function.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      19,
                      28,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      37,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    19,
                    28,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "f",
            "range": Array [
              38,
              39,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  17,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                17,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/declare-function-with-typeof.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          70,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              69,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "subject",
                "range": Array [
                  61,
                  68,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "subject": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "subject",
                    "range": Array [
                      27,
                      51,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      69,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "subject",
                  "range": Array [
                    27,
                    51,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "subject",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "eachr": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "eachr",
                "range": Array [
                  9,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  69,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "eachr",
              "range": Array [
                9,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "eachr",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/declare-global.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      55,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          55,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "C",
            "range": Array [
              38,
              39,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              42,
              43,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "C": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "C",
            "range": Array [
              25,
              34,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              25,
              34,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              21,
              34,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": true,
      "identifiers": Array [
        Object {
          "name": "C",
          "range": Array [
            25,
            34,
          ],
          "type": "Identifier",
        },
      ],
      "name": "C",
      "references": Array [
        Object {
          "$ref": 1,
        },
      ],
      "scope": Object {
        "$ref": 3,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/declare-module.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      95,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          95,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              33,
              92,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  89,
                  90,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 3,
            },
            "b": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      52,
                      61,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      52,
                      61,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      46,
                      61,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    52,
                    61,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      79,
                      90,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      79,
                      90,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      73,
                      90,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    79,
                    90,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              93,
              94,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  11,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  11,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/decorator-parameter-property-array.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          65,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              15,
              64,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  40,
                  62,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 4,
                  },
                  "identifier": Object {
                    "name": "Dec",
                    "range": Array [
                      42,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      64,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  64,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/decorator-parameter-property-identifier.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          65,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              15,
              64,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  40,
                  62,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "Dec",
                    "range": Array [
                      42,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "test": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "test",
                        "range": Array [
                          46,
                          58,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          40,
                          62,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "test",
                      "range": Array [
                        46,
                        58,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "test",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      64,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  64,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/decorator-parameter-property-object.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      60,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          60,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              15,
              59,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  40,
                  57,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 4,
                  },
                  "identifier": Object {
                    "name": "Dec",
                    "range": Array [
                      42,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      59,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  59,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/decorator-parameter-property-parameter.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      82,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              15,
              81,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  40,
                  79,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "Dec",
                    "range": Array [
                      42,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "test": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "test",
                        "range": Array [
                          63,
                          75,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          40,
                          79,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "test",
                      "range": Array [
                        63,
                        75,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "test",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      81,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  81,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/decorator-parameter-property-rest.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          70,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              15,
              69,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  40,
                  67,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "Dec",
                    "range": Array [
                      42,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "test": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "test",
                        "range": Array [
                          49,
                          53,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          40,
                          67,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "test",
                      "range": Array [
                        49,
                        53,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "test",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      69,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  69,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/decorators.ts 1`] = `
Object {
  "$id": 19,
  "block": Object {
    "range": Array [
      0,
      198,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 18,
      "block": Object {
        "range": Array [
          0,
          198,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              29,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 18,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 4,
            },
            "target": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "target",
                    "range": Array [
                      13,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      29,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "target",
                  "range": Array [
                    13,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "target",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
        Object {
          "$id": 11,
          "block": Object {
            "range": Array [
              30,
              100,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 10,
              "block": Object {
                "range": Array [
                  58,
                  98,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 11,
              },
              "variableMap": Object {
                "propertyKey": Object {
                  "$ref": 9,
                },
                "target": Object {
                  "$ref": 8,
                },
              },
              "variableScope": Object {
                "$ref": 10,
              },
              "variables": Array [
                Object {
                  "$id": 8,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "target",
                        "range": Array [
                          59,
                          70,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          58,
                          98,
                        ],
                        "type": "ArrowFunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "target",
                      "range": Array [
                        59,
                        70,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "target",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 10,
                  },
                },
                Object {
                  "$id": 9,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "propertyKey",
                        "range": Array [
                          72,
                          91,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          58,
                          98,
                        ],
                        "type": "ArrowFunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "propertyKey",
                      "range": Array [
                        72,
                        91,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "propertyKey",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 10,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 18,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 7,
            },
          },
          "variableScope": Object {
            "$ref": 11,
          },
          "variables": Array [
            Object {
              "$id": 7,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 11,
              },
            },
          ],
        },
        Object {
          "$id": 17,
          "block": Object {
            "range": Array [
              102,
              197,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 16,
              "block": Object {
                "range": Array [
                  159,
                  195,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 17,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 15,
                },
              },
              "variableScope": Object {
                "$ref": 16,
              },
              "variables": Array [
                Object {
                  "$id": 15,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 16,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 13,
              "from": Object {
                "$ref": 17,
              },
              "identifier": Object {
                "name": "gec",
                "range": Array [
                  122,
                  125,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 14,
              "from": Object {
                "$ref": 17,
              },
              "identifier": Object {
                "name": "gec",
                "range": Array [
                  147,
                  150,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 13,
            },
            Object {
              "$ref": 14,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 18,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 12,
            },
          },
          "variableScope": Object {
            "$ref": 18,
          },
          "variables": Array [
            Object {
              "$id": 12,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      113,
                      114,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      102,
                      197,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    113,
                    114,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 17,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 18,
          },
          "identifier": Object {
            "name": "dec",
            "range": Array [
              103,
              106,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 19,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 2,
        },
        "dec": Object {
          "$ref": 0,
        },
        "gec": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 18,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "dec",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "dec",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "dec",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 18,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "gec",
                "range": Array [
                  39,
                  42,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  30,
                  100,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "gec",
              "range": Array [
                39,
                42,
              ],
              "type": "Identifier",
            },
          ],
          "name": "gec",
          "references": Array [
            Object {
              "$ref": 13,
            },
            Object {
              "$ref": 14,
            },
          ],
          "scope": Object {
            "$ref": 18,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  113,
                  114,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  102,
                  197,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                113,
                114,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 18,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 19,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/enum.ts 1`] = `
Object {
  "$id": 15,
  "block": Object {
    "range": Array [
      0,
      71,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 14,
      "block": Object {
        "range": Array [
          0,
          71,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 13,
          "block": Object {
            "range": Array [
              20,
              70,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "A",
                "range": Array [
                  33,
                  34,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": Object {
                "name": "a",
                "range": Array [
                  37,
                  38,
                ],
                "type": "Identifier",
              },
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  37,
                  38,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 8,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "B",
                "range": Array [
                  44,
                  45,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": Object {
                "range": Array [
                  48,
                  53,
                ],
                "type": "BinaryExpression",
              },
            },
            Object {
              "$id": 9,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  48,
                  49,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 10,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "C",
                "range": Array [
                  59,
                  60,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 5,
              },
              "writeExpr": Object {
                "range": Array [
                  63,
                  68,
                ],
                "type": "BinaryExpression",
              },
            },
            Object {
              "$id": 11,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "A",
                "range": Array [
                  63,
                  64,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 12,
              "from": Object {
                "$ref": 13,
              },
              "identifier": Object {
                "name": "B",
                "range": Array [
                  67,
                  68,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 7,
            },
            Object {
              "$ref": 9,
            },
          ],
          "type": "enum",
          "upperScope": Object {
            "$ref": 14,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 3,
            },
            "B": Object {
              "$ref": 4,
            },
            "C": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 14,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      33,
                      34,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      33,
                      38,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    33,
                    34,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 11,
                },
              ],
              "scope": Object {
                "$ref": 13,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "B",
                    "range": Array [
                      44,
                      45,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      44,
                      53,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "B",
                  "range": Array [
                    44,
                    45,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "B",
              "references": Array [
                Object {
                  "$ref": 8,
                },
                Object {
                  "$ref": 12,
                },
              ],
              "scope": Object {
                "$ref": 13,
              },
            },
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      59,
                      60,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      59,
                      68,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    59,
                    60,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [
                Object {
                  "$ref": 10,
                },
              ],
              "scope": Object {
                "$ref": 13,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              18,
              19,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 15,
      },
      "variableMap": Object {
        "E": Object {
          "$ref": 1,
        },
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 14,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  19,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 7,
            },
            Object {
              "$ref": 9,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "E",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  20,
                  70,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "E",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "E",
          "references": Array [],
          "scope": Object {
            "$ref": 14,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 15,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/enum-string.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "TSEnumDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "BAR",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  21,
                  26,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "enum",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "BAR": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "BAR",
                    "range": Array [
                      15,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      26,
                    ],
                    "type": "TSEnumMember",
                  },
                  "parent": undefined,
                  "type": "EnumMemberName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "BAR",
                  "range": Array [
                    15,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "BAR",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  5,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "TSEnumDeclaration",
              },
              "parent": undefined,
              "type": "EnumName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                5,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/export-as-namespace.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/expression-as.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/expression-type-parameters.ts 1`] = `
Object {
  "$id": 15,
  "block": Object {
    "range": Array [
      0,
      67,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 14,
      "block": Object {
        "range": Array [
          0,
          67,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              28,
              31,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              40,
              41,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              43,
              44,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 10,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "baz",
            "range": Array [
              48,
              51,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 11,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "d",
            "range": Array [
              57,
              58,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 12,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "e",
            "range": Array [
              60,
              61,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 4,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 13,
          "from": Object {
            "$ref": 14,
          },
          "identifier": Object {
            "name": "f",
            "range": Array [
              63,
              64,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 5,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 6,
        },
        Object {
          "$ref": 10,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 15,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
        "b": Object {
          "$ref": 1,
        },
        "c": Object {
          "$ref": 2,
        },
        "d": Object {
          "$ref": 3,
        },
        "e": Object {
          "$ref": 4,
        },
        "f": Object {
          "$ref": 5,
        },
      },
      "variableScope": Object {
        "$ref": 14,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  7,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  10,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 8,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "c",
                "range": Array [
                  12,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  12,
                  13,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "c",
              "range": Array [
                12,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "c",
          "references": Array [
            Object {
              "$ref": 9,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "d",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "d",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "d",
          "references": Array [
            Object {
              "$ref": 11,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 4,
          "defs": Array [
            Object {
              "name": Object {
                "name": "e",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  18,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "e",
              "range": Array [
                18,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "e",
          "references": Array [
            Object {
              "$ref": 12,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
        Object {
          "$id": 5,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  21,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  21,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                21,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [
            Object {
              "$ref": 13,
            },
          ],
          "scope": Object {
            "$ref": 14,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
    Object {
      "$ref": 10,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 15,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/function-overload.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      101,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          101,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [],
        },
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              19,
              46,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      30,
                      39,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      19,
                      46,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    30,
                    39,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              47,
              100,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 5,
            },
            "arguments": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      58,
                      68,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      47,
                      100,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    58,
                    68,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  56,
                  57,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  47,
                  100,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                56,
                57,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/function-overload-2.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              19,
              46,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      30,
                      39,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      19,
                      46,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    30,
                    39,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/identifier-decorators.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          65,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              7,
              64,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  35,
                  62,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "Decorator",
                    "range": Array [
                      37,
                      46,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "config": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "config",
                        "range": Array [
                          47,
                          53,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          35,
                          62,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "config",
                      "range": Array [
                        47,
                        53,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "config",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "Test": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Test",
                    "range": Array [
                      13,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      64,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Test",
                  "range": Array [
                    13,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Test",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "Test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Test",
                "range": Array [
                  13,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  64,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Test",
              "range": Array [
                13,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Test",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/ignore-type-only-stuff.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      115,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          115,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  110,
                  114,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  110,
                  114,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  106,
                  114,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                110,
                114,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/import-equals.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "TSImportEqualsDeclaration",
              },
              "parent": null,
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/import-keyword.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/interface-type.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      67,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          67,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/jsx-attributes.tsx 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      143,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          143,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              28,
              142,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "text",
                "range": Array [
                  116,
                  120,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "text",
            "range": Array [
              6,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              19,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
        "text": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "text",
                "range": Array [
                  6,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "text",
              "range": Array [
                6,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "text",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  37,
                  40,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  28,
                  142,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                37,
                40,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/method-overload.ts 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      124,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          124,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              19,
              123,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 8,
              "block": Object {
                "range": Array [
                  73,
                  121,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 9,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 7,
                },
                "arguments": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 8,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 8,
                  },
                },
                Object {
                  "$id": 7,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          74,
                          81,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          73,
                          121,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        74,
                        81,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 8,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 9,
              },
              "identifier": Object {
                "name": "s",
                "range": Array [
                  59,
                  60,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 10,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      25,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      19,
                      123,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    25,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "s",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              18,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "Symbol",
            "range": Array [
              10,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 1,
        },
        "s": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "s",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "s",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "s",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  123,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/namespace.ts 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              24,
              56,
            ],
            "type": "TSModuleBlock",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  43,
                  44,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 5,
              },
              "writeExpr": Object {
                "range": Array [
                  47,
                  48,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  53,
                  54,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 5,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      43,
                      44,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      43,
                      48,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      37,
                      48,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    43,
                    44,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 6,
                },
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              57,
              58,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "N",
            "range": Array [
              59,
              60,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "N": Object {
          "$ref": 1,
        },
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  11,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  11,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "N",
                "range": Array [
                  22,
                  23,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  12,
                  56,
                ],
                "type": "TSModuleDeclaration",
              },
              "parent": null,
              "type": "NamespaceName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "N",
              "range": Array [
                22,
                23,
              ],
              "type": "Identifier",
            },
          ],
          "name": "N",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/rest-element.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "args": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "args",
                    "range": Array [
                      16,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      34,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "args",
                  "range": Array [
                    16,
                    20,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "args",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/type-alias.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/type-annotations.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      103,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          103,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              32,
              102,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  47,
                  100,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 4,
                },
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          48,
                          59,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          47,
                          100,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        48,
                        59,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      38,
                      39,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      32,
                      102,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    38,
                    39,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 1,
        },
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  20,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  20,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  16,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                20,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  102,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                38,
                39,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/type-assertions.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              21,
              26,
            ],
            "type": "TSTypeAssertion",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              28,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              32,
              38,
            ],
            "type": "TSAsExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              32,
              33,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/type-parameter.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typed-jsx-element.tsx 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              37,
            ],
            "type": "JSXElement",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  37,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  38,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typeof.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      43,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          43,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              22,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              39,
              42,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typeof-in-assertions.ts 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              22,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              27,
              40,
            ],
            "type": "TSTypeAssertion",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              35,
              38,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              39,
              40,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              42,
              43,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              46,
              61,
            ],
            "type": "TSAsExpression",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              46,
              47,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              58,
              61,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 6,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typeof-in-call-signature.ts 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      165,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          165,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              24,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              61,
              64,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              76,
              79,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              95,
              98,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              125,
              128,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              140,
              143,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              159,
              162,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  24,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typeof-in-return-type.ts 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      83,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          83,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  30,
                  31,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      11,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      82,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    11,
                    20,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typeof-in-type-parameters.ts 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      62,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          62,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              61,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "g",
                "range": Array [
                  28,
                  29,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "g": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "g",
                    "range": Array [
                      31,
                      35,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      61,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "g",
                  "range": Array [
                    31,
                    35,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "g",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "g": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "g",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  61,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "g",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "g",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/typeof-in-var.ts 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      147,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          147,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              22,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "obj2",
            "range": Array [
              27,
              43,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              46,
              58,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              40,
              43,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "value",
            "range": Array [
              65,
              70,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              87,
              99,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              81,
              84,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "element",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              132,
              146,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 10,
          "from": Object {
            "$ref": 11,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              123,
              126,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "element": Object {
          "$ref": 3,
        },
        "obj": Object {
          "$ref": 0,
        },
        "obj2": Object {
          "$ref": 1,
        },
        "value": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 6,
            },
            Object {
              "$ref": 8,
            },
            Object {
              "$ref": 10,
            },
          ],
          "scope": Object {
            "$ref": 11,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj2",
                "range": Array [
                  27,
                  43,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  27,
                  58,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  23,
                  58,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj2",
              "range": Array [
                27,
                43,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj2",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 11,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "value",
                "range": Array [
                  65,
                  70,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  63,
                  99,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  59,
                  99,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "value",
              "range": Array [
                65,
                70,
              ],
              "type": "Identifier",
            },
          ],
          "name": "value",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 11,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "element",
                "range": Array [
                  105,
                  112,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  104,
                  146,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  100,
                  146,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "element",
              "range": Array [
                105,
                112,
              ],
              "type": "Identifier",
            },
          ],
          "name": "element",
          "references": Array [
            Object {
              "$ref": 9,
            },
          ],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-array-type.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-conditional.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  47,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                47,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-conditional-with-null.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  45,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  45,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  46,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                45,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-indexed.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  11,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  12,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-infer.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      147,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          147,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-intersection-type.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-mapped.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  35,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  35,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                35,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-mapped-readonly.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  45,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  45,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  46,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                45,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-mapped-readonly-minus.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  46,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  46,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  47,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                46,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-mapped-readonly-plus.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "map": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "map",
                "range": Array [
                  4,
                  47,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "map",
              "range": Array [
                4,
                47,
              ],
              "type": "Identifier",
            },
          ],
          "name": "map",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-nested-types.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          81,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-parenthesized-type.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-reference.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  8,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  9,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-reference-generic.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  20,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-reference-generic-nested.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  27,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                27,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-tuple.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-tuple-empty.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  9,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-tuple-optional.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      45,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          45,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  44,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  44,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                44,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-tuple-rest.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  28,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  28,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                28,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-tuple-type.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-type-literal.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "obj": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "obj",
                "range": Array [
                  4,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "obj",
              "range": Array [
                4,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "obj",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-type-operator.src.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  20,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  20,
                  36,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  16,
                  37,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                20,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-typeof.src.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  17,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-union-intersection.src.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      161,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          161,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "intersection": Object {
          "$ref": 1,
        },
        "precedence1": Object {
          "$ref": 2,
        },
        "precedence2": Object {
          "$ref": 3,
        },
        "union": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "union",
                "range": Array [
                  4,
                  36,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  36,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "union",
              "range": Array [
                4,
                36,
              ],
              "type": "Identifier",
            },
          ],
          "name": "union",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "intersection",
                "range": Array [
                  42,
                  71,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  42,
                  71,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  38,
                  72,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "intersection",
              "range": Array [
                42,
                71,
              ],
              "type": "Identifier",
            },
          ],
          "name": "intersection",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "precedence1",
                "range": Array [
                  77,
                  115,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  77,
                  115,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  73,
                  116,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "precedence1",
              "range": Array [
                77,
                115,
              ],
              "type": "Identifier",
            },
          ],
          "name": "precedence1",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "precedence2",
                "range": Array [
                  121,
                  159,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  121,
                  159,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  117,
                  160,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "precedence2",
              "range": Array [
                121,
                159,
              ],
              "type": "Identifier",
            },
          ],
          "name": "precedence2",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: module tests/fixtures/scope-analysis/types-union-type.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/535.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              45,
              48,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "arguments": Object {
          "$ref": 1,
        },
        "bar": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "foo",
            "range": Array [
              9,
              12,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "foo",
          "range": Array [
            9,
            12,
          ],
          "type": "Identifier",
        },
      ],
      "name": "foo",
      "references": Array [],
      "scope": Object {
        "$ref": 5,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/abstract-class.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      69,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          68,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "class",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  68,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "A": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "A",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              68,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "A",
          "range": Array [
            15,
            16,
          ],
          "type": "Identifier",
        },
      ],
      "name": "A",
      "references": Array [],
      "scope": Object {
        "$ref": 3,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/class-implements.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      83,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "class",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            6,
            9,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 3,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/class-properties.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          19,
          62,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "s",
            "range": Array [
              43,
              44,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "s",
            "range": Array [
              50,
              51,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 6,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 4,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 4,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  62,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s",
        "range": Array [
          6,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          18,
        ],
        "type": "CallExpression",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "Symbol",
        "range": Array [
          10,
          16,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "A": Object {
      "$ref": 1,
    },
    "s": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "s",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              18,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "s",
          "range": Array [
            6,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "s",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 6,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "A",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              19,
              62,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "A",
          "range": Array [
            25,
            26,
          ],
          "type": "Identifier",
        },
      ],
      "name": "A",
      "references": Array [],
      "scope": Object {
        "$ref": 8,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/class-supper-type.ts 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      117,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "class",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 6,
        },
      },
      "variableScope": Object {
        "$ref": 12,
      },
      "variables": Array [
        Object {
          "$id": 6,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  40,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          42,
          82,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "class",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "Foo2": Object {
          "$ref": 8,
        },
      },
      "variableScope": Object {
        "$ref": 12,
      },
      "variables": Array [
        Object {
          "$id": 8,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo2",
                "range": Array [
                  56,
                  60,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  42,
                  82,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo2",
              "range": Array [
                56,
                60,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo2",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          84,
          116,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "class",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "Foo3": Object {
          "$ref": 10,
        },
      },
      "variableScope": Object {
        "$ref": 12,
      },
      "variables": Array [
        Object {
          "$id": 10,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo3",
                "range": Array [
                  90,
                  94,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  84,
                  116,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo3",
              "range": Array [
                90,
                94,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo3",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 12,
      },
      "identifier": Object {
        "name": "Bar",
        "range": Array [
          27,
          30,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 12,
      },
      "identifier": Object {
        "name": "Bar",
        "range": Array [
          69,
          72,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 5,
      "from": Object {
        "$ref": 12,
      },
      "identifier": Object {
        "name": "Bar",
        "range": Array [
          103,
          106,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
    "Foo2": Object {
      "$ref": 1,
    },
    "Foo3": Object {
      "$ref": 2,
    },
  },
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              15,
              18,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              40,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            15,
            18,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 12,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo2",
            "range": Array [
              56,
              60,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              42,
              82,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo2",
          "range": Array [
            56,
            60,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo2",
      "references": Array [],
      "scope": Object {
        "$ref": 12,
      },
    },
    Object {
      "$id": 2,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo3",
            "range": Array [
              90,
              94,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              84,
              116,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo3",
          "range": Array [
            90,
            94,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo3",
      "references": Array [],
      "scope": Object {
        "$ref": 12,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/computed-properties-in-interface.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      110,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s1",
        "range": Array [
          6,
          8,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          11,
          19,
        ],
        "type": "CallExpression",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "Symbol",
        "range": Array [
          11,
          17,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s2",
        "range": Array [
          21,
          23,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": Object {
        "range": Array [
          26,
          34,
        ],
        "type": "CallExpression",
      },
    },
    Object {
      "$id": 5,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "Symbol",
        "range": Array [
          26,
          32,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 6,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s1",
        "range": Array [
          54,
          56,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 7,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s2",
        "range": Array [
          71,
          73,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "s1": Object {
      "$ref": 0,
    },
    "s2": Object {
      "$ref": 1,
    },
  },
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "s1",
            "range": Array [
              6,
              8,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              19,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "s1",
          "range": Array [
            6,
            8,
          ],
          "type": "Identifier",
        },
      ],
      "name": "s1",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 6,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "s2",
            "range": Array [
              21,
              23,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              21,
              34,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "s2",
          "range": Array [
            21,
            23,
          ],
          "type": "Identifier",
        },
      ],
      "name": "s2",
      "references": Array [
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 7,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/computed-properties-in-type.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      107,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s1",
        "range": Array [
          6,
          8,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          11,
          19,
        ],
        "type": "CallExpression",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "Symbol",
        "range": Array [
          11,
          17,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s2",
        "range": Array [
          21,
          23,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": Object {
        "range": Array [
          26,
          34,
        ],
        "type": "CallExpression",
      },
    },
    Object {
      "$id": 5,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "Symbol",
        "range": Array [
          26,
          32,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 6,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s1",
        "range": Array [
          51,
          53,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 7,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "s2",
        "range": Array [
          68,
          70,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "s1": Object {
      "$ref": 0,
    },
    "s2": Object {
      "$ref": 1,
    },
  },
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "s1",
            "range": Array [
              6,
              8,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              19,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "s1",
          "range": Array [
            6,
            8,
          ],
          "type": "Identifier",
        },
      ],
      "name": "s1",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 6,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "s2",
            "range": Array [
              21,
              23,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              21,
              34,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "s2",
          "range": Array [
            21,
            23,
          ],
          "type": "Identifier",
        },
      ],
      "name": "s2",
      "references": Array [
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 7,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/declare-function.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "TSDeclareFunction",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "empty-function",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  19,
                  28,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  37,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": true,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                19,
                28,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 4,
      },
      "identifier": Object {
        "name": "f",
        "range": Array [
          38,
          39,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "f": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "f",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "TSDeclareFunction",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "f",
          "range": Array [
            17,
            18,
          ],
          "type": "Identifier",
        },
      ],
      "name": "f",
      "references": Array [
        Object {
          "$ref": 1,
        },
      ],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/declare-function-with-typeof.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          69,
        ],
        "type": "TSDeclareFunction",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "subject",
            "range": Array [
              61,
              68,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "empty-function",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "subject": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "subject",
                "range": Array [
                  27,
                  51,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  69,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": true,
          "identifiers": Array [
            Object {
              "name": "subject",
              "range": Array [
                27,
                51,
              ],
              "type": "Identifier",
            },
          ],
          "name": "subject",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "eachr": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "eachr",
            "range": Array [
              9,
              14,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              69,
            ],
            "type": "TSDeclareFunction",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "eachr",
          "range": Array [
            9,
            14,
          ],
          "type": "Identifier",
        },
      ],
      "name": "eachr",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/declare-global.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      55,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 2,
      },
      "identifier": Object {
        "name": "C",
        "range": Array [
          38,
          39,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          42,
          43,
        ],
        "type": "Literal",
      },
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "C": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "C",
            "range": Array [
              25,
              34,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              25,
              34,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              21,
              34,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": true,
      "identifiers": Array [
        Object {
          "name": "C",
          "range": Array [
            25,
            34,
          ],
          "type": "Identifier",
        },
      ],
      "name": "C",
      "references": Array [
        Object {
          "$ref": 1,
        },
      ],
      "scope": Object {
        "$ref": 2,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/declare-module.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      95,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          33,
          92,
        ],
        "type": "TSModuleBlock",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              89,
              90,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "block",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 3,
        },
        "b": Object {
          "$ref": 4,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  52,
                  61,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  52,
                  61,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  46,
                  61,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                52,
                61,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 4,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  79,
                  90,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  79,
                  90,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  73,
                  90,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                79,
                90,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 7,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          6,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          11,
        ],
        "type": "Literal",
      },
    },
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 7,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          93,
          94,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "a": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              11,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              11,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            6,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/decorator-parameter-property-array.ts 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          15,
          64,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              40,
              62,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "Dec",
                "range": Array [
                  42,
                  45,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  64,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              15,
              64,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            21,
            24,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 6,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/decorator-parameter-property-identifier.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          15,
          64,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              40,
              62,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Dec",
                "range": Array [
                  42,
                  45,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
            "test": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "test",
                    "range": Array [
                      46,
                      58,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      40,
                      62,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "test",
                  "range": Array [
                    46,
                    58,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "test",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  64,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              15,
              64,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            21,
            24,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/decorator-parameter-property-object.ts 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      60,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          15,
          59,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              40,
              57,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "Dec",
                "range": Array [
                  42,
                  45,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  59,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              15,
              59,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            21,
            24,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 6,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/decorator-parameter-property-parameter.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      82,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          15,
          81,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              40,
              79,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Dec",
                "range": Array [
                  42,
                  45,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
            "test": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "test",
                    "range": Array [
                      63,
                      75,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      40,
                      79,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "test",
                  "range": Array [
                    63,
                    75,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "test",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  81,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              15,
              81,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            21,
            24,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/decorator-parameter-property-rest.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          15,
          69,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              40,
              67,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Dec",
                "range": Array [
                  42,
                  45,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
            "test": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "test",
                    "range": Array [
                      49,
                      53,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      40,
                      67,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "test",
                  "range": Array [
                    49,
                    53,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "test",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  69,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              15,
              69,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            21,
            24,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/decorators.ts 1`] = `
Object {
  "$id": 18,
  "block": Object {
    "range": Array [
      0,
      198,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 18,
      },
      "variableMap": Object {
        "arguments": Object {
          "$ref": 4,
        },
        "target": Object {
          "$ref": 5,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 4,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 5,
          "defs": Array [
            Object {
              "name": Object {
                "name": "target",
                "range": Array [
                  13,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "target",
              "range": Array [
                13,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "target",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          30,
          100,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              58,
              98,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "propertyKey": Object {
              "$ref": 9,
            },
            "target": Object {
              "$ref": 8,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 8,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "target",
                    "range": Array [
                      59,
                      70,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      58,
                      98,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "target",
                  "range": Array [
                    59,
                    70,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "target",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 9,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "propertyKey",
                    "range": Array [
                      72,
                      91,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      58,
                      98,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "propertyKey",
                  "range": Array [
                    72,
                    91,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "propertyKey",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 18,
      },
      "variableMap": Object {
        "arguments": Object {
          "$ref": 7,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 7,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
    Object {
      "$id": 17,
      "block": Object {
        "range": Array [
          102,
          197,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 16,
          "block": Object {
            "range": Array [
              159,
              195,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 17,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 15,
            },
          },
          "variableScope": Object {
            "$ref": 16,
          },
          "variables": Array [
            Object {
              "$id": 15,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 16,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 13,
          "from": Object {
            "$ref": 17,
          },
          "identifier": Object {
            "name": "gec",
            "range": Array [
              122,
              125,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 14,
          "from": Object {
            "$ref": 17,
          },
          "identifier": Object {
            "name": "gec",
            "range": Array [
              147,
              150,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 13,
        },
        Object {
          "$ref": 14,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 18,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 12,
        },
      },
      "variableScope": Object {
        "$ref": 18,
      },
      "variables": Array [
        Object {
          "$id": 12,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  113,
                  114,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  102,
                  197,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                113,
                114,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 17,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 18,
      },
      "identifier": Object {
        "name": "dec",
        "range": Array [
          103,
          106,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "C": Object {
      "$ref": 2,
    },
    "dec": Object {
      "$ref": 0,
    },
    "gec": Object {
      "$ref": 1,
    },
  },
  "variableScope": Object {
    "$ref": 18,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "dec",
            "range": Array [
              9,
              12,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              29,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "dec",
          "range": Array [
            9,
            12,
          ],
          "type": "Identifier",
        },
      ],
      "name": "dec",
      "references": Array [
        Object {
          "$ref": 3,
        },
      ],
      "scope": Object {
        "$ref": 18,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "gec",
            "range": Array [
              39,
              42,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              30,
              100,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "gec",
          "range": Array [
            39,
            42,
          ],
          "type": "Identifier",
        },
      ],
      "name": "gec",
      "references": Array [
        Object {
          "$ref": 13,
        },
        Object {
          "$ref": 14,
        },
      ],
      "scope": Object {
        "$ref": 18,
      },
    },
    Object {
      "$id": 2,
      "defs": Array [
        Object {
          "name": Object {
            "name": "C",
            "range": Array [
              113,
              114,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              102,
              197,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "C",
          "range": Array [
            113,
            114,
          ],
          "type": "Identifier",
        },
      ],
      "name": "C",
      "references": Array [],
      "scope": Object {
        "$ref": 18,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/enum.ts 1`] = `
Object {
  "$id": 14,
  "block": Object {
    "range": Array [
      0,
      71,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 13,
      "block": Object {
        "range": Array [
          20,
          70,
        ],
        "type": "TSEnumDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "A",
            "range": Array [
              33,
              34,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "B",
            "range": Array [
              44,
              45,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 4,
          },
          "writeExpr": Object {
            "range": Array [
              48,
              53,
            ],
            "type": "BinaryExpression",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              48,
              49,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 10,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "C",
            "range": Array [
              59,
              60,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 5,
          },
          "writeExpr": Object {
            "range": Array [
              63,
              68,
            ],
            "type": "BinaryExpression",
          },
        },
        Object {
          "$id": 11,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "A",
            "range": Array [
              63,
              64,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 12,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "B",
            "range": Array [
              67,
              68,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 4,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 7,
        },
        Object {
          "$ref": 9,
        },
      ],
      "type": "enum",
      "upperScope": Object {
        "$ref": 14,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 3,
        },
        "B": Object {
          "$ref": 4,
        },
        "C": Object {
          "$ref": 5,
        },
      },
      "variableScope": Object {
        "$ref": 14,
      },
      "variables": Array [
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  33,
                  34,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  33,
                  38,
                ],
                "type": "TSEnumMember",
              },
              "parent": undefined,
              "type": "EnumMemberName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                33,
                34,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [
            Object {
              "$ref": 6,
            },
            Object {
              "$ref": 11,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
        Object {
          "$id": 4,
          "defs": Array [
            Object {
              "name": Object {
                "name": "B",
                "range": Array [
                  44,
                  45,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  44,
                  53,
                ],
                "type": "TSEnumMember",
              },
              "parent": undefined,
              "type": "EnumMemberName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "B",
              "range": Array [
                44,
                45,
              ],
              "type": "Identifier",
            },
          ],
          "name": "B",
          "references": Array [
            Object {
              "$ref": 8,
            },
            Object {
              "$ref": 12,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
        Object {
          "$id": 5,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  59,
                  60,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  59,
                  68,
                ],
                "type": "TSEnumMember",
              },
              "parent": undefined,
              "type": "EnumMemberName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                59,
                60,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [
            Object {
              "$ref": 10,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          6,
          15,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          18,
          19,
        ],
        "type": "Literal",
      },
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "E": Object {
      "$ref": 1,
    },
    "a": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 14,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              6,
              15,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              19,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              19,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            6,
            15,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 7,
        },
        Object {
          "$ref": 9,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "E",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              20,
              70,
            ],
            "type": "TSEnumDeclaration",
          },
          "parent": undefined,
          "type": "EnumName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "E",
          "range": Array [
            25,
            26,
          ],
          "type": "Identifier",
        },
      ],
      "name": "E",
      "references": Array [],
      "scope": Object {
        "$ref": 14,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/enum-string.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "TSEnumDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "BAR",
            "range": Array [
              15,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              26,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "enum",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "BAR": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "BAR",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  26,
                ],
                "type": "TSEnumMember",
              },
              "parent": undefined,
              "type": "EnumMemberName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "BAR",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "BAR",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              5,
              8,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "TSEnumDeclaration",
          },
          "parent": undefined,
          "type": "EnumName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            5,
            8,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/export-as-namespace.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 0,
      "from": Object {
        "$ref": 1,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          20,
          21,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/expression-as.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 0,
      "from": Object {
        "$ref": 1,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          1,
          2,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/expression-type-parameters.ts 1`] = `
Object {
  "$id": 14,
  "block": Object {
    "range": Array [
      0,
      67,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 6,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "foo",
        "range": Array [
          28,
          31,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 7,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          37,
          38,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 8,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "b",
        "range": Array [
          40,
          41,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 9,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "c",
        "range": Array [
          43,
          44,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 2,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 10,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "baz",
        "range": Array [
          48,
          51,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 11,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "d",
        "range": Array [
          57,
          58,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 3,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 12,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "e",
        "range": Array [
          60,
          61,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 4,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 13,
      "from": Object {
        "$ref": 14,
      },
      "identifier": Object {
        "name": "f",
        "range": Array [
          63,
          64,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 5,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
    Object {
      "$ref": 10,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "a": Object {
      "$ref": 0,
    },
    "b": Object {
      "$ref": 1,
    },
    "c": Object {
      "$ref": 2,
    },
    "d": Object {
      "$ref": 3,
    },
    "e": Object {
      "$ref": 4,
    },
    "f": Object {
      "$ref": 5,
    },
  },
  "variableScope": Object {
    "$ref": 14,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              7,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            6,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [
        Object {
          "$ref": 7,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "b",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              9,
              10,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "b",
          "range": Array [
            9,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "b",
      "references": Array [
        Object {
          "$ref": 8,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
    Object {
      "$id": 2,
      "defs": Array [
        Object {
          "name": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              12,
              13,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "c",
          "range": Array [
            12,
            13,
          ],
          "type": "Identifier",
        },
      ],
      "name": "c",
      "references": Array [
        Object {
          "$ref": 9,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
    Object {
      "$id": 3,
      "defs": Array [
        Object {
          "name": Object {
            "name": "d",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              15,
              16,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "d",
          "range": Array [
            15,
            16,
          ],
          "type": "Identifier",
        },
      ],
      "name": "d",
      "references": Array [
        Object {
          "$ref": 11,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
    Object {
      "$id": 4,
      "defs": Array [
        Object {
          "name": Object {
            "name": "e",
            "range": Array [
              18,
              19,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              18,
              19,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "e",
          "range": Array [
            18,
            19,
          ],
          "type": "Identifier",
        },
      ],
      "name": "e",
      "references": Array [
        Object {
          "$ref": 12,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
    Object {
      "$id": 5,
      "defs": Array [
        Object {
          "name": Object {
            "name": "f",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              21,
              22,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "f",
          "range": Array [
            21,
            22,
          ],
          "type": "Identifier",
        },
      ],
      "name": "f",
      "references": Array [
        Object {
          "$ref": 13,
        },
      ],
      "scope": Object {
        "$ref": 14,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/function-overload.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      101,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "TSDeclareFunction",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "empty-function",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [],
    },
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          19,
          46,
        ],
        "type": "TSDeclareFunction",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "empty-function",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  30,
                  39,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  46,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": true,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                30,
                39,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          47,
          100,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 5,
        },
        "arguments": Object {
          "$ref": 4,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 4,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 5,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  58,
                  68,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  47,
                  100,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                58,
                68,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "f": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "f",
            "range": Array [
              56,
              57,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              47,
              100,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "f",
          "range": Array [
            56,
            57,
          ],
          "type": "Identifier",
        },
      ],
      "name": "f",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/function-overload-2.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "TSDeclareFunction",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "empty-function",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          19,
          46,
        ],
        "type": "TSDeclareFunction",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "empty-function",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  30,
                  39,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  46,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": true,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                30,
                39,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "f": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "f",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "TSDeclareFunction",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "f",
          "range": Array [
            9,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "f",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/identifier-decorators.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          7,
          64,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              35,
              62,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "Decorator",
                "range": Array [
                  37,
                  46,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
            "config": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "config",
                    "range": Array [
                      47,
                      53,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      35,
                      62,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "config",
                  "range": Array [
                    47,
                    53,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "config",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "Test": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Test",
                "range": Array [
                  13,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  64,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Test",
              "range": Array [
                13,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Test",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Test": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Test",
            "range": Array [
              13,
              17,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              7,
              64,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Test",
          "range": Array [
            13,
            17,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Test",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/ignore-type-only-stuff.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      115,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "a": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              110,
              114,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              110,
              114,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              106,
              114,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            110,
            114,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/import-equals.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "foo",
            "range": Array [
              7,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              27,
            ],
            "type": "TSImportEqualsDeclaration",
          },
          "parent": null,
          "type": "ImportBinding",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "foo",
          "range": Array [
            7,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "foo",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/import-keyword.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/interface-type.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      67,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/jsx-attributes.tsx 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      143,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          28,
          142,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "text",
            "range": Array [
              116,
              120,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "function",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "arguments": Object {
          "$ref": 3,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 3,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 6,
      },
      "identifier": Object {
        "name": "text",
        "range": Array [
          6,
          10,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          13,
          19,
        ],
        "type": "Literal",
      },
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "Foo": Object {
      "$ref": 1,
    },
    "text": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "text",
            "range": Array [
              6,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              19,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              20,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "text",
          "range": Array [
            6,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "text",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 4,
        },
      ],
      "scope": Object {
        "$ref": 6,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "Foo",
            "range": Array [
              37,
              40,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              28,
              142,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "Foo",
          "range": Array [
            37,
            40,
          ],
          "type": "Identifier",
        },
      ],
      "name": "Foo",
      "references": Array [],
      "scope": Object {
        "$ref": 6,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/method-overload.ts 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      124,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          19,
          123,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              73,
              121,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 7,
            },
            "arguments": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 7,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      74,
                      81,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      73,
                      121,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    74,
                    81,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "s",
            "range": Array [
              59,
              60,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
      ],
      "type": "class",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 4,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 4,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  123,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 10,
      },
      "identifier": Object {
        "name": "s",
        "range": Array [
          6,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          18,
        ],
        "type": "CallExpression",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 10,
      },
      "identifier": Object {
        "name": "Symbol",
        "range": Array [
          10,
          16,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "A": Object {
      "$ref": 1,
    },
    "s": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "s",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              18,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "s",
          "range": Array [
            6,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "s",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 5,
        },
      ],
      "scope": Object {
        "$ref": 10,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "A",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              19,
              123,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "A",
          "range": Array [
            25,
            26,
          ],
          "type": "Identifier",
        },
      ],
      "name": "A",
      "references": Array [],
      "scope": Object {
        "$ref": 10,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/namespace.ts 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          24,
          56,
        ],
        "type": "TSModuleBlock",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              43,
              44,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 5,
          },
          "writeExpr": Object {
            "range": Array [
              47,
              48,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              53,
              54,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 5,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "block",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 5,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 5,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  43,
                  44,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  43,
                  48,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  37,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                43,
                44,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 6,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 9,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          6,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          11,
        ],
        "type": "Literal",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 9,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          57,
          58,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 9,
      },
      "identifier": Object {
        "name": "N",
        "range": Array [
          59,
          60,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "N": Object {
      "$ref": 1,
    },
    "a": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              11,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              11,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            6,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "scope": Object {
        "$ref": 9,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "N",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              12,
              56,
            ],
            "type": "TSModuleDeclaration",
          },
          "parent": null,
          "type": "NamespaceName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "N",
          "range": Array [
            22,
            23,
          ],
          "type": "Identifier",
        },
      ],
      "name": "N",
      "references": Array [
        Object {
          "$ref": 4,
        },
      ],
      "scope": Object {
        "$ref": 9,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/rest-element.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "args": Object {
          "$ref": 2,
        },
        "arguments": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "args",
                "range": Array [
                  16,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "args",
              "range": Array [
                16,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "args",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "foo": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "foo",
            "range": Array [
              9,
              12,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "foo",
          "range": Array [
            9,
            12,
          ],
          "type": "Identifier",
        },
      ],
      "name": "foo",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/type-alias.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/type-annotations.ts 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      103,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          32,
          102,
        ],
        "type": "ClassDeclaration",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              47,
              100,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 4,
            },
            "arguments": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 3,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      48,
                      59,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      47,
                      100,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    48,
                    59,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "class",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  102,
                ],
                "type": "ClassDeclaration",
              },
              "parent": undefined,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                38,
                39,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "C": Object {
      "$ref": 1,
    },
    "a": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              20,
              31,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              20,
              31,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              16,
              31,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            20,
            31,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "C",
            "range": Array [
              38,
              39,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              32,
              102,
            ],
            "type": "ClassDeclaration",
          },
          "parent": null,
          "type": "ClassName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "C",
          "range": Array [
            38,
            39,
          ],
          "type": "Identifier",
        },
      ],
      "name": "C",
      "references": Array [],
      "scope": Object {
        "$ref": 7,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/type-assertions.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 0,
      "from": Object {
        "$ref": 4,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          17,
          18,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": null,
      "writeExpr": Object {
        "range": Array [
          21,
          26,
        ],
        "type": "TSTypeAssertion",
      },
    },
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 4,
      },
      "identifier": Object {
        "name": "b",
        "range": Array [
          25,
          26,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 4,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          28,
          29,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": null,
      "writeExpr": Object {
        "range": Array [
          32,
          38,
        ],
        "type": "TSAsExpression",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 4,
      },
      "identifier": Object {
        "name": "b",
        "range": Array [
          32,
          33,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/type-parameter.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "arguments": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "f": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "f",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "f",
          "range": Array [
            9,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "f",
      "references": Array [],
      "scope": Object {
        "$ref": 3,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typed-jsx-element.tsx 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 2,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          6,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          37,
        ],
        "type": "JSXElement",
      },
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "a": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              37,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              38,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "a",
          "range": Array [
            6,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "a",
      "references": Array [
        Object {
          "$ref": 1,
        },
      ],
      "scope": Object {
        "$ref": 2,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typeof.ts 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      43,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 3,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          4,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          22,
        ],
        "type": "ObjectExpression",
      },
    },
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 3,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          39,
          42,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "obj": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              22,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "obj",
          "range": Array [
            4,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "obj",
      "references": Array [
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "scope": Object {
        "$ref": 3,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typeof-in-assertions.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          4,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          22,
        ],
        "type": "ObjectExpression",
      },
    },
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          23,
          24,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": null,
      "writeExpr": Object {
        "range": Array [
          27,
          40,
        ],
        "type": "TSTypeAssertion",
      },
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          35,
          38,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "b",
        "range": Array [
          39,
          40,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 5,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "a",
        "range": Array [
          42,
          43,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": null,
      "writeExpr": Object {
        "range": Array [
          46,
          61,
        ],
        "type": "TSAsExpression",
      },
    },
    Object {
      "$id": 6,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "b",
        "range": Array [
          46,
          47,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
    Object {
      "$id": 7,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          58,
          61,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "obj": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              22,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "obj",
          "range": Array [
            4,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "obj",
      "references": Array [
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 7,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typeof-in-call-signature.ts 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      165,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          6,
          9,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          12,
          24,
        ],
        "type": "ObjectExpression",
      },
    },
    Object {
      "$id": 2,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          61,
          64,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 3,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          76,
          79,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          95,
          98,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 5,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          125,
          128,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 6,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          140,
          143,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 7,
      "from": Object {
        "$ref": 8,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          159,
          162,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "obj": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "obj",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              6,
              24,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              24,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "obj",
          "range": Array [
            6,
            9,
          ],
          "type": "Identifier",
        },
      ],
      "name": "obj",
      "references": Array [
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 6,
        },
        Object {
          "$ref": 7,
        },
      ],
      "scope": Object {
        "$ref": 8,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typeof-in-return-type.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      83,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          82,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 2,
        },
        "arguments": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  11,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  82,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                11,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "f": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "f",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              82,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "f",
          "range": Array [
            9,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "f",
      "references": Array [],
      "scope": Object {
        "$ref": 5,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typeof-in-type-parameters.ts 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      62,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          61,
        ],
        "type": "FunctionDeclaration",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": false,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "g",
            "range": Array [
              28,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "function",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "arguments": Object {
          "$ref": 1,
        },
        "g": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 1,
          "defs": Array [],
          "eslintUsed": undefined,
          "identifiers": Array [],
          "name": "arguments",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "g",
                "range": Array [
                  31,
                  35,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  61,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "Parameter",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "g",
              "range": Array [
                31,
                35,
              ],
              "type": "Identifier",
            },
          ],
          "name": "g",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "g": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "g",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              0,
              61,
            ],
            "type": "FunctionDeclaration",
          },
          "parent": null,
          "type": "FunctionName",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "g",
          "range": Array [
            9,
            10,
          ],
          "type": "Identifier",
        },
      ],
      "name": "g",
      "references": Array [],
      "scope": Object {
        "$ref": 5,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/typeof-in-var.ts 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      147,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 4,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          4,
          7,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": Object {
        "range": Array [
          10,
          22,
        ],
        "type": "ObjectExpression",
      },
    },
    Object {
      "$id": 5,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "obj2",
        "range": Array [
          27,
          43,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 1,
      },
      "writeExpr": Object {
        "range": Array [
          46,
          58,
        ],
        "type": "ObjectExpression",
      },
    },
    Object {
      "$id": 6,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          40,
          43,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 7,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "value",
        "range": Array [
          65,
          70,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 2,
      },
      "writeExpr": Object {
        "range": Array [
          87,
          99,
        ],
        "type": "ObjectExpression",
      },
    },
    Object {
      "$id": 8,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          81,
          84,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
    Object {
      "$id": 9,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "element",
        "range": Array [
          105,
          112,
        ],
        "type": "Identifier",
      },
      "kind": "w",
      "resolved": Object {
        "$ref": 3,
      },
      "writeExpr": Object {
        "range": Array [
          132,
          146,
        ],
        "type": "ArrayExpression",
      },
    },
    Object {
      "$id": 10,
      "from": Object {
        "$ref": 11,
      },
      "identifier": Object {
        "name": "obj",
        "range": Array [
          123,
          126,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": Object {
        "$ref": 0,
      },
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "element": Object {
      "$ref": 3,
    },
    "obj": Object {
      "$ref": 0,
    },
    "obj2": Object {
      "$ref": 1,
    },
    "value": Object {
      "$ref": 2,
    },
  },
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "obj",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              22,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "obj",
          "range": Array [
            4,
            7,
          ],
          "type": "Identifier",
        },
      ],
      "name": "obj",
      "references": Array [
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 6,
        },
        Object {
          "$ref": 8,
        },
        Object {
          "$ref": 10,
        },
      ],
      "scope": Object {
        "$ref": 11,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "obj2",
            "range": Array [
              27,
              43,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              27,
              58,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              23,
              58,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "obj2",
          "range": Array [
            27,
            43,
          ],
          "type": "Identifier",
        },
      ],
      "name": "obj2",
      "references": Array [
        Object {
          "$ref": 5,
        },
      ],
      "scope": Object {
        "$ref": 11,
      },
    },
    Object {
      "$id": 2,
      "defs": Array [
        Object {
          "name": Object {
            "name": "value",
            "range": Array [
              65,
              70,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              63,
              99,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              59,
              99,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "value",
          "range": Array [
            65,
            70,
          ],
          "type": "Identifier",
        },
      ],
      "name": "value",
      "references": Array [
        Object {
          "$ref": 7,
        },
      ],
      "scope": Object {
        "$ref": 11,
      },
    },
    Object {
      "$id": 3,
      "defs": Array [
        Object {
          "name": Object {
            "name": "element",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              104,
              146,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              100,
              146,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "element",
          "range": Array [
            105,
            112,
          ],
          "type": "Identifier",
        },
      ],
      "name": "element",
      "references": Array [
        Object {
          "$ref": 9,
        },
      ],
      "scope": Object {
        "$ref": 11,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-array-type.src.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-conditional.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              47,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              47,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              48,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            47,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-conditional-with-null.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              45,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              45,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              46,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            45,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-indexed.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              11,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              11,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              12,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            11,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-infer.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      147,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-intersection-type.src.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-mapped.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "map": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "map",
            "range": Array [
              4,
              35,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              35,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              36,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "map",
          "range": Array [
            4,
            35,
          ],
          "type": "Identifier",
        },
      ],
      "name": "map",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-mapped-readonly.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "map": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "map",
            "range": Array [
              4,
              45,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              45,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              46,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "map",
          "range": Array [
            4,
            45,
          ],
          "type": "Identifier",
        },
      ],
      "name": "map",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-mapped-readonly-minus.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "map": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "map",
            "range": Array [
              4,
              46,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              46,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              47,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "map",
          "range": Array [
            4,
            46,
          ],
          "type": "Identifier",
        },
      ],
      "name": "map",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-mapped-readonly-plus.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "map": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "map",
            "range": Array [
              4,
              47,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              47,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              48,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "map",
          "range": Array [
            4,
            47,
          ],
          "type": "Identifier",
        },
      ],
      "name": "map",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-nested-types.src.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-parenthesized-type.src.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-reference.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              8,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              8,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              9,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            8,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-reference-generic.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              20,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              20,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              21,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            20,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-reference-generic-nested.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              27,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              27,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            27,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-tuple.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              31,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              31,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              32,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            31,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-tuple-empty.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              9,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              9,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            9,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-tuple-optional.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      45,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              44,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              44,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              44,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            44,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-tuple-rest.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              28,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              28,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            28,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-tuple-type.src.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-type-literal.src.ts 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "obj": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "obj",
            "range": Array [
              4,
              22,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              22,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "obj",
          "range": Array [
            4,
            22,
          ],
          "type": "Identifier",
        },
      ],
      "name": "obj",
      "references": Array [],
      "scope": Object {
        "$ref": 1,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-type-operator.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
    "y": Object {
      "$ref": 1,
    },
  },
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              14,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              14,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            14,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 2,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "y",
            "range": Array [
              20,
              36,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              20,
              36,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              16,
              37,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "y",
          "range": Array [
            20,
            36,
          ],
          "type": "Identifier",
        },
      ],
      "name": "y",
      "references": Array [],
      "scope": Object {
        "$ref": 2,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-typeof.src.ts 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [
    Object {
      "$id": 1,
      "from": Object {
        "$ref": 2,
      },
      "identifier": Object {
        "name": "y",
        "range": Array [
          14,
          15,
        ],
        "type": "Identifier",
      },
      "kind": "r",
      "resolved": null,
      "writeExpr": undefined,
    },
  ],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "x": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "x",
            "range": Array [
              4,
              17,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              17,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "x",
          "range": Array [
            4,
            17,
          ],
          "type": "Identifier",
        },
      ],
      "name": "x",
      "references": Array [],
      "scope": Object {
        "$ref": 2,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-union-intersection.src.ts 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      161,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {
    "intersection": Object {
      "$ref": 1,
    },
    "precedence1": Object {
      "$ref": 2,
    },
    "precedence2": Object {
      "$ref": 3,
    },
    "union": Object {
      "$ref": 0,
    },
  },
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [
    Object {
      "$id": 0,
      "defs": Array [
        Object {
          "name": Object {
            "name": "union",
            "range": Array [
              4,
              36,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              4,
              36,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "union",
          "range": Array [
            4,
            36,
          ],
          "type": "Identifier",
        },
      ],
      "name": "union",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
    Object {
      "$id": 1,
      "defs": Array [
        Object {
          "name": Object {
            "name": "intersection",
            "range": Array [
              42,
              71,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              42,
              71,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              38,
              72,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "intersection",
          "range": Array [
            42,
            71,
          ],
          "type": "Identifier",
        },
      ],
      "name": "intersection",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
    Object {
      "$id": 2,
      "defs": Array [
        Object {
          "name": Object {
            "name": "precedence1",
            "range": Array [
              77,
              115,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              77,
              115,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              73,
              116,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "precedence1",
          "range": Array [
            77,
            115,
          ],
          "type": "Identifier",
        },
      ],
      "name": "precedence1",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
    Object {
      "$id": 3,
      "defs": Array [
        Object {
          "name": Object {
            "name": "precedence2",
            "range": Array [
              121,
              159,
            ],
            "type": "Identifier",
          },
          "node": Object {
            "range": Array [
              121,
              159,
            ],
            "type": "VariableDeclarator",
          },
          "parent": Object {
            "range": Array [
              117,
              160,
            ],
            "type": "VariableDeclaration",
          },
          "type": "Variable",
        },
      ],
      "eslintUsed": undefined,
      "identifiers": Array [
        Object {
          "name": "precedence2",
          "range": Array [
            121,
            159,
          ],
          "type": "Identifier",
        },
      ],
      "name": "precedence2",
      "references": Array [],
      "scope": Object {
        "$ref": 4,
      },
    },
  ],
}
`;

exports[`TypeScript scope analysis sourceType: script tests/fixtures/scope-analysis/types-union-type.src.ts 1`] = `
Object {
  "$id": 0,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 0,
  },
  "variables": Array [],
}
`;
