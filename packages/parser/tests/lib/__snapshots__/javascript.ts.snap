// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`javascript fixtures/arrayLiteral/array-literal-in-lhs.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "fn",
            "range": Array [
              0,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              11,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrayLiteral/array-literals-in-binary-expr.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      9,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          9,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/as-param.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              4,
              12,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/as-param-with-params.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              4,
              16,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 1,
            },
            "y": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      5,
                      6,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      4,
                      16,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    5,
                    6,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      8,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      4,
                      16,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    8,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/basic.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              0,
              12,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 0,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/basic-in-binary-expression.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              1,
              10,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      10,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              19,
              28,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      19,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      19,
                      28,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    19,
                    20,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/block-body.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              12,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "e": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "e",
                    "range": Array [
                      0,
                      1,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      12,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "e",
                  "range": Array [
                    0,
                    1,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "e",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/block-body-not-object.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              18,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "e": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "e",
                    "range": Array [
                      0,
                      1,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      18,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "e",
                  "range": Array [
                    0,
                    1,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "e",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-dup-params.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              12,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      12,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      4,
                      5,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      12,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
                Object {
                  "name": "a",
                  "range": Array [
                    4,
                    5,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-missing-paren.src 1`] = `"';' expected."`;

exports[`javascript fixtures/arrowFunctions/error-not-arrow.src 1`] = `"Expression expected."`;

exports[`javascript fixtures/arrowFunctions/error-numeric-param.src 1`] = `"';' expected."`;

exports[`javascript fixtures/arrowFunctions/error-numeric-param-multi.src 1`] = `"';' expected."`;

exports[`javascript fixtures/arrowFunctions/error-reverse-arrow.src 1`] = `"Expression expected."`;

exports[`javascript fixtures/arrowFunctions/error-strict-default-param-eval.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              14,
              31,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "eval",
                "range": Array [
                  15,
                  19,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  22,
                  24,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      15,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      31,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    15,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-dup-params.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              26,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      26,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      18,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      26,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
                Object {
                  "name": "a",
                  "range": Array [
                    18,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-eval.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              30,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      1,
                      5,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      30,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    1,
                    5,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-eval-return.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              26,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      15,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      26,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    15,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-octal.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              23,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      23,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-param-arguments.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              14,
              34,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "arguments",
                    "range": Array [
                      15,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      34,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "arguments",
                  "range": Array [
                    15,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      26,
                      27,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      34,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    26,
                    27,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-param-eval.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              14,
              29,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      15,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      29,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    15,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      21,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      29,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    21,
                    22,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-param-names.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              14,
              29,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      15,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      29,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    15,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      21,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      29,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    21,
                    22,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-param-no-paren-arguments.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              29,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "arguments",
                    "range": Array [
                      14,
                      23,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      29,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "arguments",
                  "range": Array [
                    14,
                    23,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-strict-param-no-paren-eval.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              24,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      14,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      14,
                      24,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    14,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-two-lines.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              8,
              16,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              16,
            ],
            "type": "ArrowFunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/error-wrapped-param.src 1`] = `"';' expected."`;

exports[`javascript fixtures/arrowFunctions/expression.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      9,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          9,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              1,
              7,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      7,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/iife.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "e": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "e",
                    "range": Array [
                      0,
                      1,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "e",
                  "range": Array [
                    0,
                    1,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "e",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/multiple-params.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              16,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
            "b": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      16,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      4,
                      5,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      16,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    4,
                    5,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/no-auto-return.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              17,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
            "b": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      17,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      4,
                      5,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      17,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    4,
                    5,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/not-strict-arguments.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "arguments",
                    "range": Array [
                      0,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "arguments",
                  "range": Array [
                    0,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/not-strict-eval.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      0,
                      4,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      10,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    0,
                    4,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/not-strict-eval-params.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
            "eval": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "eval",
                    "range": Array [
                      1,
                      5,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "eval",
                  "range": Array [
                    1,
                    5,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "eval",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      7,
                      8,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    7,
                    8,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/not-strict-octal.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      10,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/return-arrow-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              12,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [
            Object {
              "$id": 2,
              "block": Object {
                "range": Array [
                  5,
                  12,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 3,
              },
              "variableMap": Object {
                "y": Object {
                  "$ref": 1,
                },
              },
              "variableScope": Object {
                "$ref": 2,
              },
              "variables": Array [
                Object {
                  "$id": 1,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "y",
                        "range": Array [
                          5,
                          6,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          5,
                          12,
                        ],
                        "type": "ArrowFunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "y",
                      "range": Array [
                        5,
                        6,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "y",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 2,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      0,
                      1,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      12,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    0,
                    1,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/return-sequence.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  8,
                  27,
                ],
                "type": "ArrowFunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "x",
                    "range": Array [
                      19,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 0,
                  },
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "y",
                    "range": Array [
                      22,
                      23,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 1,
                  },
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "z",
                    "range": Array [
                      25,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 2,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "y": Object {
                  "$ref": 1,
                },
                "z": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 1,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "y",
                        "range": Array [
                          9,
                          10,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          8,
                          27,
                        ],
                        "type": "ArrowFunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "y",
                      "range": Array [
                        9,
                        10,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "y",
                  "references": Array [
                    Object {
                      "$ref": 4,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "z",
                        "range": Array [
                          12,
                          13,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          8,
                          27,
                        ],
                        "type": "ArrowFunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "z",
                      "range": Array [
                        12,
                        13,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "z",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      28,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/single-param.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              11,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "e": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "e",
                    "range": Array [
                      0,
                      1,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      11,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "e",
                  "range": Array [
                    0,
                    1,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "e",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/single-param-parens.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              0,
              13,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "e": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "e",
                    "range": Array [
                      1,
                      2,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      13,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "e",
                  "range": Array [
                    1,
                    2,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "e",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/arrowFunctions/single-param-return-identifier.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              14,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "earth",
                "range": Array [
                  9,
                  14,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 1,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "sun": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "sun",
                    "range": Array [
                      1,
                      4,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      14,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "sun",
                  "range": Array [
                    1,
                    4,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "sun",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/and-operator-array-object.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      124,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          124,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "v",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              42,
            ],
            "type": "LogicalExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              48,
              49,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              52,
              86,
            ],
            "type": "LogicalExpression",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              92,
              93,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              96,
              104,
            ],
            "type": "LogicalExpression",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              110,
              111,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              114,
              122,
            ],
            "type": "LogicalExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "v": Object {
          "$ref": 0,
        },
        "x": Object {
          "$ref": 1,
        },
        "y": Object {
          "$ref": 3,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "v",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  42,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "v",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "v",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  48,
                  49,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  48,
                  86,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  44,
                  87,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                48,
                49,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  92,
                  93,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  92,
                  104,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  88,
                  105,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                92,
                93,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  110,
                  111,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  110,
                  122,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  106,
                  123,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                110,
                111,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/delete-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              7,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/do-while-statements.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      59,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          59,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              29,
              43,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  34,
                  35,
                ],
                "type": "Identifier",
              },
              "kind": "rw",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  39,
                  40,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "block",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              23,
              24,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              51,
              52,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "i": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "i",
                "range": Array [
                  19,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  24,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  15,
                  25,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "i",
              "range": Array [
                19,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "i",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/identifiers-double-underscore.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      60,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          60,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              20,
              36,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "__Foo": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "__Foo",
                    "range": Array [
                      26,
                      31,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      20,
                      36,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "__Foo",
                  "range": Array [
                    26,
                    31,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "__Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              38,
              59,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "__test",
            "range": Array [
              4,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              17,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "__Bar": Object {
          "$ref": 2,
        },
        "__Foo": Object {
          "$ref": 1,
        },
        "__test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "__test",
                "range": Array [
                  4,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  17,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "__test",
              "range": Array [
                4,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "__test",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "__Foo",
                "range": Array [
                  26,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  20,
                  36,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "__Foo",
              "range": Array [
                26,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "__Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "__Bar",
                "range": Array [
                  47,
                  52,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  38,
                  59,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "__Bar",
              "range": Array [
                47,
                52,
              ],
              "type": "Identifier",
            },
          ],
          "name": "__Bar",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/instanceof.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "Set",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/new-with-member-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/new-without-parens.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              16,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "X",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "X": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "X",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "X",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "X",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/or-operator-array-object.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      124,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          124,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "v",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              42,
            ],
            "type": "LogicalExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              48,
              49,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              52,
              86,
            ],
            "type": "LogicalExpression",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              92,
              93,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              96,
              104,
            ],
            "type": "LogicalExpression",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              110,
              111,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              114,
              122,
            ],
            "type": "LogicalExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "v": Object {
          "$ref": 0,
        },
        "x": Object {
          "$ref": 1,
        },
        "y": Object {
          "$ref": 3,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "v",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  42,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "v",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "v",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  48,
                  49,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  48,
                  86,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  44,
                  87,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                48,
                49,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  92,
                  93,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  92,
                  104,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  88,
                  105,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                92,
                93,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  110,
                  111,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  110,
                  122,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  106,
                  123,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                110,
                111,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/typeof-expression.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/update-expression.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              11,
              34,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  28,
                  29,
                ],
                "type": "Identifier",
              },
              "kind": "rw",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": null,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              9,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "f",
            "range": Array [
              35,
              36,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 1,
        },
        "i": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "i",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  9,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "i",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "i",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  20,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  34,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                20,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/basics/void-expression.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/bigIntLiterals/binary.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      6,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          6,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/bigIntLiterals/decimal.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      4,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          4,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/bigIntLiterals/hex.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      6,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          6,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/bigIntLiterals/octal.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      6,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          6,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/binaryLiterals/invalid.src 1`] = `"';' expected."`;

exports[`javascript fixtures/binaryLiterals/lowercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      7,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          7,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/binaryLiterals/uppercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      7,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          7,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/blockBindings/const.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "bar",
            "range": Array [
              12,
              15,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              12,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  15,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/blockBindings/let.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "bar",
            "range": Array [
              10,
              13,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              10,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  13,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  14,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/blockBindings/let-in-switchcase.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              47,
            ],
            "type": "SwitchStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "t",
                "range": Array [
                  31,
                  32,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  35,
                  37,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "switch",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "t": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "t",
                    "range": Array [
                      31,
                      32,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      31,
                      37,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      27,
                      38,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "t",
                  "range": Array [
                    31,
                    32,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "t",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "answer",
            "range": Array [
              8,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/callExpression/call-expression-with-array.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      9,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          9,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/callExpression/call-expression-with-object.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      9,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          9,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/callExpression/mixed-expression.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      72,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          72,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              1,
              65,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [
            Object {
              "$id": 2,
              "block": Object {
                "range": Array [
                  18,
                  57,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 3,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 1,
                },
              },
              "variableScope": Object {
                "$ref": 2,
              },
              "variables": Array [
                Object {
                  "$id": 1,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 2,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/callExpression/new-expression-with-array.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              17,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/callExpression/new-expression-with-object.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-accessor-properties.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              31,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  14,
                  18,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  24,
                  29,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
                "c": Object {
                  "$ref": 5,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 5,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "c",
                        "range": Array [
                          25,
                          26,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          24,
                          29,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "c",
                      "range": Array [
                        25,
                        26,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "c",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      31,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-computed-static-method.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              25,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  19,
                  23,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 3,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  17,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      25,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              1,
              9,
            ],
            "type": "ClassExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-method-named-prototype.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  18,
                  22,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-method-named-static.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              21,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  15,
                  19,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      21,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-method-named-with-space.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              25,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  19,
                  24,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      25,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-one-method.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              21,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  15,
                  19,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      21,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-one-method-super.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      45,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          45,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              43,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  15,
                  41,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      43,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-static-method.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  17,
                  21,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-static-method-named-prototype.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              34,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  29,
                  33,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      34,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  34,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-static-method-named-static.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              28,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  22,
                  26,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      28,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-static-methods-and-accessor-properties.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      59,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          59,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 9,
          "block": Object {
            "range": Array [
              0,
              58,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  17,
                  21,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 9,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  34,
                  38,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 9,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
            Object {
              "$id": 8,
              "block": Object {
                "range": Array [
                  51,
                  56,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 9,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 6,
                },
                "b": Object {
                  "$ref": 7,
                },
              },
              "variableScope": Object {
                "$ref": 8,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 8,
                  },
                },
                Object {
                  "$id": 7,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "b",
                        "range": Array [
                          52,
                          53,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          51,
                          56,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "b",
                      "range": Array [
                        52,
                        53,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "b",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 8,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 10,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      58,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 9,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  58,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-computed-static-methods.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              38,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  18,
                  22,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  33,
                  37,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 6,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  16,
                  17,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "b",
                "range": Array [
                  31,
                  32,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      38,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  38,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-methods.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              20,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  10,
                  14,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  15,
                  19,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      20,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-methods-computed-constructor.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              47,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  22,
                  26,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  42,
                  46,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      47,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  47,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-methods-semi.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              21,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  10,
                  14,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  16,
                  20,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      21,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  21,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-methods-three-semi.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  11,
                  15,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  21,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-methods-two-semi.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  10,
                  14,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  16,
                  20,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-two-static-methods-named-constructor.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      56,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          56,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              55,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  27,
                  31,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  50,
                  54,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      55,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  55,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-with-constructor.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              25,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  20,
                  24,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      25,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-with-constructor-parameters.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              33,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  20,
                  32,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 4,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          21,
                          24,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          20,
                          32,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        21,
                        24,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          26,
                          29,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          20,
                          32,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        26,
                        29,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      33,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  33,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-with-constructor-with-space.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              26,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  21,
                  25,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      26,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/class-with-no-body.src 1`] = `"'{' expected."`;

exports[`javascript fixtures/classes/derived-class-assign-to-var.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              8,
              27,
            ],
            "type": "ClassExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      14,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      8,
                      27,
                    ],
                    "type": "ClassExpression",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    14,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              27,
            ],
            "type": "ClassExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/derived-class-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              1,
              18,
            ],
            "type": "ClassExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/empty-class.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      10,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/empty-class-double-semi.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      10,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/empty-class-semi.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              11,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      11,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  11,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/empty-literal-derived-class.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              20,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      20,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/invalid-class-declaration.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              0,
              8,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/invalid-class-setter-declaration.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  17,
                  22,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 4,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/invalid-class-two-super-classes.src 1`] = `"Classes can only extend a single class."`;

exports[`javascript fixtures/classes/named-class-expression.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              1,
              11,
            ],
            "type": "ClassExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      7,
                      8,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      11,
                    ],
                    "type": "ClassExpression",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    7,
                    8,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/classes/named-derived-class-expression.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              1,
              20,
            ],
            "type": "ClassExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      7,
                      8,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      20,
                    ],
                    "type": "ClassExpression",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    7,
                    8,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/commaOperator/comma-operator-conditional.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "xx",
            "range": Array [
              4,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              26,
            ],
            "type": "SequenceExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "xx",
            "range": Array [
              10,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "rw",
          "resolved": null,
          "writeExpr": null,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "xx": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "xx",
                "range": Array [
                  4,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "xx",
              "range": Array [
                4,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "xx",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/commaOperator/comma-operator-multi.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "v1",
            "range": Array [
              4,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              29,
            ],
            "type": "SequenceExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "v1": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "v1",
                "range": Array [
                  4,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "v1",
              "range": Array [
                4,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "v1",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/commaOperator/comma-operator-nested.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "v1",
            "range": Array [
              4,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              33,
            ],
            "type": "SequenceExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "v1": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "v1",
                "range": Array [
                  4,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  34,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "v1",
              "range": Array [
                4,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "v1",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/commaOperator/comma-operator-return.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      50,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          50,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              49,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  22,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  26,
                  27,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "v1",
                "range": Array [
                  41,
                  43,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  45,
                  46,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      22,
                      23,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      22,
                      27,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      18,
                      28,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    22,
                    23,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "f1": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f1",
                "range": Array [
                  9,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  49,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f1",
              "range": Array [
                9,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f1",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/commaOperator/comma-operator-simple.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              14,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  15,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/commaOperator/comma-operator-simple-nested.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              6,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              15,
              19,
            ],
            "type": "SequenceExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  6,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                6,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/defaultParams/class-constructor.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              46,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  25,
                  44,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "foo",
                    "range": Array [
                      26,
                      29,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      30,
                      35,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          26,
                          29,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          44,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        26,
                        29,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [
                    Object {
                      "$ref": 4,
                    },
                  ],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      46,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  46,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/defaultParams/class-method.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              38,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  36,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 5,
                  },
                  "identifier": Object {
                    "name": "bar",
                    "range": Array [
                      18,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      22,
                      27,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          18,
                          21,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          36,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        18,
                        21,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [
                    Object {
                      "$ref": 4,
                    },
                  ],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      38,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  38,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/defaultParams/declaration.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              20,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  15,
                  16,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      20,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/defaultParams/expression.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              4,
              22,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "y",
                "range": Array [
                  13,
                  14,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  17,
                  18,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "y": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      13,
                      14,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      4,
                      22,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    13,
                    14,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              22,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/defaultParams/method.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              9,
              25,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  20,
                  21,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      18,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      9,
                      25,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    18,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              27,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/defaultParams/not-all-params.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              10,
              35,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "b",
                "range": Array [
                  22,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": Object {
                "range": Array [
                  26,
                  28,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 3,
            },
            "arguments": Object {
              "$ref": 2,
            },
            "b": Object {
              "$ref": 4,
            },
            "c": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      19,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      10,
                      35,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    19,
                    20,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      22,
                      23,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      10,
                      35,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    22,
                    23,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "c",
                    "range": Array [
                      30,
                      31,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      10,
                      35,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "c",
                  "range": Array [
                    30,
                    31,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "c",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              35,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  35,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/array-member.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "ok",
            "range": Array [
              1,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/array-to-array.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              9,
              15,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              9,
              15,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              10,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/array-var-undefined.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "ArrayExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/call-expression-destruction-array.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/call-expression-destruction-object.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      12,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          12,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-constructor-params-array.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              47,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  25,
                  45,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 4,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          27,
                          30,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          45,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        27,
                        30,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          32,
                          35,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          45,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        32,
                        35,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      47,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  47,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-constructor-params-defaults-array.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  25,
                  49,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "foo",
                    "range": Array [
                      27,
                      30,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      31,
                      32,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 6,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "bar",
                    "range": Array [
                      34,
                      37,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 4,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      38,
                      39,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 4,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          27,
                          30,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          49,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        27,
                        30,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          34,
                          37,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          49,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        34,
                        37,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [
                    Object {
                      "$ref": 6,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-constructor-params-defaults-object.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      52,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          52,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              51,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  25,
                  49,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "foo",
                    "range": Array [
                      27,
                      30,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      31,
                      32,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 6,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "bar",
                    "range": Array [
                      34,
                      37,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 4,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      38,
                      39,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 4,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          27,
                          30,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          49,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        27,
                        30,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          34,
                          37,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          49,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        34,
                        37,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [
                    Object {
                      "$ref": 6,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      51,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  51,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-constructor-params-object.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      48,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          48,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              47,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  25,
                  45,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 4,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          27,
                          30,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          45,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        27,
                        30,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          32,
                          35,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          45,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        32,
                        35,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      47,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  47,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-method-params-array.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  37,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
                "baz": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          19,
                          22,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          37,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        19,
                        22,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "baz",
                        "range": Array [
                          24,
                          27,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          37,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "baz",
                      "range": Array [
                        24,
                        27,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "baz",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      39,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-method-params-defaults-array.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      44,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          44,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              43,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  17,
                  41,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "bar",
                    "range": Array [
                      19,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      23,
                      24,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 6,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "baz",
                    "range": Array [
                      26,
                      29,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 4,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      30,
                      31,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
                "baz": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          19,
                          22,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          41,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        19,
                        22,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "baz",
                        "range": Array [
                          26,
                          29,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          41,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "baz",
                      "range": Array [
                        26,
                        29,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "baz",
                  "references": Array [
                    Object {
                      "$ref": 6,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      43,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-method-params-defaults-object.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      44,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          44,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              43,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 7,
              "block": Object {
                "range": Array [
                  17,
                  41,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "bar",
                    "range": Array [
                      19,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      23,
                      24,
                    ],
                    "type": "Literal",
                  },
                },
                Object {
                  "$id": 6,
                  "from": Object {
                    "$ref": 7,
                  },
                  "identifier": Object {
                    "name": "baz",
                    "range": Array [
                      26,
                      29,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 4,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      30,
                      31,
                    ],
                    "type": "Literal",
                  },
                },
              ],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 8,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
                "baz": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          19,
                          22,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          41,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        19,
                        22,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [
                    Object {
                      "$ref": 5,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "baz",
                        "range": Array [
                          26,
                          29,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          41,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "baz",
                      "range": Array [
                        26,
                        29,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "baz",
                  "references": Array [
                    Object {
                      "$ref": 6,
                    },
                  ],
                  "scope": Object {
                    "$ref": 7,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      43,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/class-method-params-object.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  17,
                  37,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 6,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
                "baz": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          19,
                          22,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          37,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        19,
                        22,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
                Object {
                  "$id": 4,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "baz",
                        "range": Array [
                          24,
                          27,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          37,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "baz",
                      "range": Array [
                        24,
                        27,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "baz",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      39,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-array.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              3,
              5,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-array-all.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              18,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              24,
              25,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 9,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  13,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                13,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  20,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                20,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 7,
            },
            Object {
              "$ref": 8,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 9,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-array-longform-nested-multi.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "b",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "b",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              29,
              31,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "b",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 7,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 2,
        },
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  38,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                8,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  38,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                14,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  38,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 7,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-array-multi.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 7,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  13,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                13,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  16,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                16,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 7,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-array-nested-all.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              26,
              27,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              19,
              21,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              26,
              27,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              26,
              27,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 6,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "z": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  27,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  28,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-array-nested-multi.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "z": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  23,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  23,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "x",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-all.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              18,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              24,
              25,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 9,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  13,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                13,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  20,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                20,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 7,
            },
            Object {
              "$ref": 8,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 9,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-assign.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "Object",
            "range": Array [
              3,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              10,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "Object",
            "range": Array [
              3,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              26,
              28,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "String",
            "range": Array [
              13,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              20,
              21,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "String",
            "range": Array [
              13,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              26,
              28,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-longform.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              15,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "x",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  21,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-longform-all.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              14,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              40,
              41,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              23,
              25,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              40,
              41,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              34,
              36,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              40,
              41,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              40,
              41,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 9,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  41,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  42,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                8,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  19,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  41,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  42,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                19,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  30,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  41,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  42,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                30,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 7,
            },
            Object {
              "$ref": 8,
            },
          ],
          "scope": Object {
            "$ref": 10,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 9,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-longform-multi.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              18,
              20,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              30,
              31,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 7,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                8,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                14,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                25,
                26,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 7,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-mixed-multi.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              24,
              25,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              15,
              17,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              24,
              25,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              24,
              25,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              24,
              25,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 7,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                11,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  19,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                19,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 7,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-multi.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 7,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  13,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                13,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  16,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                16,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 7,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-nested-all.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              18,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              22,
              24,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              18,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              29,
              30,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 6,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "z": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                18,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/defaults-object-nested-multi.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              11,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              18,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              25,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "z": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  26,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  26,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                18,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/destructured-array-catch.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      72,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          72,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              0,
              71,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  24,
                  46,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "b",
                    "range": Array [
                      35,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "name": "a",
                    "range": Array [
                      40,
                      41,
                    ],
                    "type": "Identifier",
                  },
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "a",
                    "range": Array [
                      40,
                      41,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 2,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "type": "block",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 10,
              },
              "variables": Array [],
            },
            Object {
              "$id": 9,
              "block": Object {
                "range": Array [
                  49,
                  69,
                ],
                "type": "CatchClause",
              },
              "childScopes": Array [
                Object {
                  "$id": 8,
                  "block": Object {
                    "range": Array [
                      64,
                      69,
                    ],
                    "type": "BlockStatement",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "block",
                  "upperScope": Object {
                    "$ref": 9,
                  },
                  "variableMap": Object {},
                  "variableScope": Object {
                    "$ref": 10,
                  },
                  "variables": Array [],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "catch",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {
                "stack": Object {
                  "$ref": 7,
                },
              },
              "variableScope": Object {
                "$ref": 10,
              },
              "variables": Array [
                Object {
                  "$id": 7,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "range": Array [
                          55,
                          62,
                        ],
                        "type": "ArrayPattern",
                      },
                      "node": Object {
                        "range": Array [
                          49,
                          69,
                        ],
                        "type": "CatchClause",
                      },
                      "parent": null,
                      "type": "CatchClause",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "stack",
                      "range": Array [
                        56,
                        61,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "stack",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      71,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      35,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      34,
                      41,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      30,
                      42,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    35,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  71,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/destructured-object-catch.src 1`] = `
Object {
  "$id": 12,
  "block": Object {
    "range": Array [
      0,
      72,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 11,
      "block": Object {
        "range": Array [
          0,
          72,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 10,
          "block": Object {
            "range": Array [
              0,
              71,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  24,
                  46,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "b",
                    "range": Array [
                      35,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "name": "a",
                    "range": Array [
                      40,
                      41,
                    ],
                    "type": "Identifier",
                  },
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "a",
                    "range": Array [
                      40,
                      41,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": Object {
                    "$ref": 2,
                  },
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "type": "block",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 10,
              },
              "variables": Array [],
            },
            Object {
              "$id": 9,
              "block": Object {
                "range": Array [
                  49,
                  69,
                ],
                "type": "CatchClause",
              },
              "childScopes": Array [
                Object {
                  "$id": 8,
                  "block": Object {
                    "range": Array [
                      64,
                      69,
                    ],
                    "type": "BlockStatement",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "block",
                  "upperScope": Object {
                    "$ref": 9,
                  },
                  "variableMap": Object {},
                  "variableScope": Object {
                    "$ref": 10,
                  },
                  "variables": Array [],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "catch",
              "upperScope": Object {
                "$ref": 10,
              },
              "variableMap": Object {
                "stack": Object {
                  "$ref": 7,
                },
              },
              "variableScope": Object {
                "$ref": 10,
              },
              "variables": Array [
                Object {
                  "$id": 7,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "range": Array [
                          55,
                          62,
                        ],
                        "type": "ObjectPattern",
                      },
                      "node": Object {
                        "range": Array [
                          49,
                          69,
                        ],
                        "type": "CatchClause",
                      },
                      "parent": null,
                      "type": "CatchClause",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "stack",
                      "range": Array [
                        56,
                        61,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "stack",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 9,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 11,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 10,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      71,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 10,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      35,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      34,
                      41,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      30,
                      42,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    35,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 10,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 12,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 11,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  71,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 11,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 12,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/invalid-defaults-object-assign.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "Object",
            "range": Array [
              3,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "String",
            "range": Array [
              13,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/named-param.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "text",
            "range": Array [
              17,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "res",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "res",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/nested-array.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              19,
              30,
            ],
            "type": "ArrayExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              19,
              30,
            ],
            "type": "ArrayExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "z": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  13,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  30,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                13,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/nested-object.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      53,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          53,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              27,
              52,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              27,
              52,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "b": Object {
          "$ref": 1,
        },
        "y": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  52,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  53,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                8,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  19,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  52,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  53,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                19,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/object-var-named.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              14,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "b": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/object-var-undefined.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/param-defaults-array.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  12,
                  13,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  16,
                  18,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/param-defaults-object.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  12,
                  13,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  16,
                  18,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/param-defaults-object-nested.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              38,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  12,
                  13,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  16,
                  18,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "z",
                "range": Array [
                  25,
                  26,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": Object {
                "range": Array [
                  29,
                  31,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
            "z": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      38,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "z",
                    "range": Array [
                      25,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      38,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "z",
                  "range": Array [
                    25,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "z",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  38,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-array.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      13,
                      14,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    13,
                    14,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      16,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    16,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-array-wrapped.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              1,
              23,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  1,
                  23,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 2,
                },
                "arguments": Object {
                  "$ref": 1,
                },
                "b": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 1,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          14,
                          15,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          1,
                          23,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        14,
                        15,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "b",
                        "range": Array [
                          17,
                          18,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          1,
                          23,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "b",
                      "range": Array [
                        17,
                        18,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "b",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": true,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function-expression-name",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      10,
                      11,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      23,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "FunctionName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    10,
                    11,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-multi-object.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      16,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    16,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-nested-array.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              27,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
            "z": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      27,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "z",
                    "range": Array [
                      20,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      27,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "z",
                  "range": Array [
                    20,
                    21,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "z",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-nested-object.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              35,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
            "y": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      35,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      26,
                      27,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      35,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    26,
                    27,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-object.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      13,
                      14,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    13,
                    14,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      16,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    16,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/params-object-wrapped.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              1,
              23,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  1,
                  23,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "a": Object {
                  "$ref": 2,
                },
                "arguments": Object {
                  "$ref": 1,
                },
                "b": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 1,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "a",
                        "range": Array [
                          14,
                          15,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          1,
                          23,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "a",
                      "range": Array [
                        14,
                        15,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "a",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "b",
                        "range": Array [
                          17,
                          18,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          1,
                          23,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "b",
                      "range": Array [
                        17,
                        18,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "b",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": true,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function-expression-name",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      10,
                      11,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      1,
                      23,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "FunctionName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    10,
                    11,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring/sparse-array.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "array",
            "range": Array [
              9,
              14,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "array",
            "range": Array [
              9,
              14,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "array",
            "range": Array [
              9,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/arrow-param-array.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 1,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "y": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      10,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/arrow-param-nested-array.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 1,
            },
            "y": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/arrow-param-nested-object.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              17,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  16,
                  17,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 1,
            },
            "y": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      17,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      8,
                      9,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      17,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    8,
                    9,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/arrow-param-nested-object-named.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              27,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  26,
                  27,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 1,
            },
            "y": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      7,
                      8,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      27,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    7,
                    8,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      18,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      27,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    18,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/arrow-param-object.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              10,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 1,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "y": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      10,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/param-defaults-array.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  2,
                  3,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  6,
                  8,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/param-defaults-object.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              15,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  2,
                  3,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  6,
                  8,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      15,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-arrowFunctions/param-defaults-object-nested.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              35,
            ],
            "type": "ArrowFunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  2,
                  3,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  6,
                  8,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "z",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  19,
                  21,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  30,
                  31,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "z",
                "range": Array [
                  33,
                  34,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
            "z": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      2,
                      3,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      35,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    2,
                    3,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 2,
                },
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "z",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      35,
                    ],
                    "type": "ArrowFunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "z",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "z",
              "references": Array [
                Object {
                  "$ref": 3,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-blockBindings/array-const-undefined.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              14,
            ],
            "type": "ArrayExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-blockBindings/array-let-undefined.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "ArrayExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-blockBindings/object-const-named.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              14,
              16,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "b": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-blockBindings/object-const-undefined.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              14,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-blockBindings/object-let-named.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              14,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "b": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-blockBindings/object-let-undefined.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-defaultParams/param-array.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              24,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  12,
                  13,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  17,
                  20,
                ],
                "type": "ArrayExpression",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      24,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-defaultParams/param-object.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              4,
              30,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  14,
                  15,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  19,
                  26,
                ],
                "type": "ObjectExpression",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      14,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      4,
                      30,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    14,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "f",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              30,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-defaultParams/param-object-short.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              3,
              21,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  10,
                  17,
                ],
                "type": "ObjectExpression",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
            "x": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      5,
                      6,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      3,
                      21,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    5,
                    6,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-defaultParams/param-object-wrapped.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              5,
              31,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": Object {
                "range": Array [
                  20,
                  27,
                ],
                "type": "ObjectExpression",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
            "x": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      5,
                      31,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-forOf/loop.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "foo",
            "range": Array [
              12,
              15,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              12,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/complex-destructured.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              3,
              4,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/destructured-array-literal.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "d",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/destructuring-param.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              30,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
            "ok": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      30,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      15,
                      16,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      30,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    15,
                    16,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "ok",
                    "range": Array [
                      22,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      30,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "ok",
                  "range": Array [
                    22,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "ok",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  30,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/error-complex-destructured-spread-first.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "d",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/invalid-not-final-array-empty.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "b",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/multi-destructured.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              1,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/not-final-array.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/single-destructured.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "b",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/var-complex-destructured.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              10,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              18,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "d",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 6,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
        "b": Object {
          "$ref": 1,
        },
        "c": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  24,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  10,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  24,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                10,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "c",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  24,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  25,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "c",
              "range": Array [
                18,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "c",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/var-destructured-array-literal.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "d",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "d",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 6,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
        "b": Object {
          "$ref": 1,
        },
        "c": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  12,
                  13,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                12,
                13,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "c",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "c",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "c",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/var-multi-destructured.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "c",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "c",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
        "b": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  5,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  17,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                5,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  17,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                11,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/destructuring-and-spread/var-single-destructured.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "b",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                8,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/block.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      64,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          64,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              63,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "a",
                "range": Array [
                  39,
                  40,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  43,
                  44,
                ],
                "type": "Literal",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      39,
                      40,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      39,
                      44,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      35,
                      45,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    39,
                    40,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  63,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/directive-in-class.src 1`] = `
Object {
  "$id": 13,
  "block": Object {
    "range": Array [
      0,
      220,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 12,
      "block": Object {
        "range": Array [
          0,
          220,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 11,
          "block": Object {
            "range": Array [
              15,
              219,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 3,
              "block": Object {
                "range": Array [
                  43,
                  75,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 11,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 3,
                  },
                },
              ],
            },
            Object {
              "$id": 5,
              "block": Object {
                "range": Array [
                  89,
                  121,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 11,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 4,
                },
              },
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [
                Object {
                  "$id": 4,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 5,
                  },
                },
              ],
            },
            Object {
              "$id": 8,
              "block": Object {
                "range": Array [
                  135,
                  172,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 11,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 6,
                },
                "value": Object {
                  "$ref": 7,
                },
              },
              "variableScope": Object {
                "$ref": 8,
              },
              "variables": Array [
                Object {
                  "$id": 6,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 8,
                  },
                },
                Object {
                  "$id": 7,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "value",
                        "range": Array [
                          136,
                          141,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          135,
                          172,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "value",
                      "range": Array [
                        136,
                        141,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "value",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 8,
                  },
                },
              ],
            },
            Object {
              "$id": 10,
              "block": Object {
                "range": Array [
                  185,
                  217,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 11,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 9,
                },
              },
              "variableScope": Object {
                "$ref": 10,
              },
              "variables": Array [
                Object {
                  "$id": 9,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 10,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 12,
          },
          "variableMap": Object {
            "Foo": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 12,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Foo",
                    "range": Array [
                      21,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      219,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Foo",
                  "range": Array [
                    21,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Foo",
              "references": Array [],
              "scope": Object {
                "$ref": 11,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 13,
      },
      "variableMap": Object {
        "Foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 12,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Foo",
                "range": Array [
                  21,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  219,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Foo",
              "range": Array [
                21,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Foo",
          "references": Array [],
          "scope": Object {
            "$ref": 12,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 13,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/first-expression.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      121,
      130,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          121,
          130,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/function-non-strict.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  39,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/non-directive-string.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      172,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          172,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              10,
              30,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [],
        },
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              32,
              136,
            ],
            "type": "SwitchStatement",
          },
          "childScopes": Array [
            Object {
              "$id": 1,
              "block": Object {
                "range": Array [
                  64,
                  92,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 3,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [],
            },
            Object {
              "$id": 2,
              "block": Object {
                "range": Array [
                  106,
                  134,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 3,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 5,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "switch",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [],
        },
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              151,
              171,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/non-unique-directive.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/program.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              18,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              22,
              23,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  18,
                  23,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  14,
                  24,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                18,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/program-order.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  31,
                  32,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  31,
                  32,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  27,
                  33,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                31,
                32,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/directives/raw.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalAsyncIteration/async-generators.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              26,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  16,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                16,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalAsyncIteration/async-iterator.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          70,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              69,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  27,
                  67,
                ],
                "type": "ForOfStatement",
              },
              "childScopes": Array [
                Object {
                  "$id": 5,
                  "block": Object {
                    "range": Array [
                      59,
                      67,
                    ],
                    "type": "BlockStatement",
                  },
                  "childScopes": Array [],
                  "functionExpressionScope": false,
                  "isStrict": true,
                  "references": Array [],
                  "throughReferences": Array [],
                  "type": "block",
                  "upperScope": Object {
                    "$ref": 6,
                  },
                  "variableMap": Object {},
                  "variableScope": Object {
                    "$ref": 7,
                  },
                  "variables": Array [],
                },
              ],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "item",
                    "range": Array [
                      44,
                      48,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 2,
                  },
                  "writeExpr": Object {
                    "name": "items",
                    "range": Array [
                      52,
                      57,
                    ],
                    "type": "Identifier",
                  },
                },
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "items",
                    "range": Array [
                      52,
                      57,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 4,
                },
              ],
              "type": "for",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "item": Object {
                  "$ref": 2,
                },
              },
              "variableScope": Object {
                "$ref": 7,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "item",
                        "range": Array [
                          44,
                          48,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          44,
                          48,
                        ],
                        "type": "VariableDeclarator",
                      },
                      "parent": Object {
                        "range": Array [
                          38,
                          48,
                        ],
                        "type": "VariableDeclaration",
                      },
                      "type": "Variable",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "item",
                      "range": Array [
                        44,
                        48,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "item",
                  "references": Array [
                    Object {
                      "$ref": 3,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 4,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  69,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalDynamicImport/dynamic-import.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "main",
            "range": Array [
              19,
              23,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/arg-spread.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              24,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      12,
                      13,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      24,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    12,
                    13,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      18,
                      19,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      24,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    18,
                    19,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "c": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "c",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "c",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "c",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/destructuring-assign-mirror.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              2,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              13,
              22,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              13,
              22,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              14,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              20,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/function-parameter-object-spread.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              26,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "bar": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "bar",
                    "range": Array [
                      17,
                      20,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      26,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "bar",
                  "range": Array [
                    17,
                    20,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "bar",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/invalid-rest.src 1`] = `"',' expected."`;

exports[`javascript fixtures/experimentalObjectRestSpread/invalid-rest-trailing-comma.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "foo",
            "range": Array [
              22,
              25,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "foo",
            "range": Array [
              22,
              25,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "foo",
            "range": Array [
              22,
              25,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              22,
              25,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 6,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 6,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/object-rest.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      49,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          49,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              47,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              47,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "range": Array [
              21,
              47,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
        "y": Object {
          "$ref": 1,
        },
        "z": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "y",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "y",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "y",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "z",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "z",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "z",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/property-spread.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      84,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          84,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              32,
              33,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              36,
              82,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              47,
              50,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "get",
            "range": Array [
              61,
              64,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "set",
            "range": Array [
              73,
              76,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
        "get": Object {
          "$ref": 1,
        },
        "set": Object {
          "$ref": 2,
        },
        "x": Object {
          "$ref": 3,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  7,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "get",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "get",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "get",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "set",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  22,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "set",
              "range": Array [
                22,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "set",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  32,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  82,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  28,
                  83,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                32,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/shorthand-method-args.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      109,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          109,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              17,
              104,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
            "options": Object {
              "$ref": 3,
            },
            "otherVar": Object {
              "$ref": 2,
            },
            "someVar": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "someVar",
                    "range": Array [
                      19,
                      26,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      17,
                      104,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "someVar",
                  "range": Array [
                    19,
                    26,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "someVar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "otherVar",
                    "range": Array [
                      28,
                      36,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      17,
                      104,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "otherVar",
                  "range": Array [
                    28,
                    36,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "otherVar",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "options",
                    "range": Array [
                      41,
                      48,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      17,
                      104,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "options",
                  "range": Array [
                    41,
                    48,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "options",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/shorthand-methods.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      114,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          114,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              24,
              111,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
            "options": Object {
              "$ref": 5,
            },
            "otherVar": Object {
              "$ref": 4,
            },
            "someVar": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "someVar",
                    "range": Array [
                      26,
                      33,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      24,
                      111,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "someVar",
                  "range": Array [
                    26,
                    33,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "someVar",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "otherVar",
                    "range": Array [
                      35,
                      43,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      24,
                      111,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "otherVar",
                  "range": Array [
                    35,
                    43,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "otherVar",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "options",
                    "range": Array [
                      48,
                      55,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      24,
                      111,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "options",
                  "range": Array [
                    48,
                    55,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "options",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              113,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  113,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  114,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 7,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/shorthand-properties.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      70,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          70,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              32,
              33,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              36,
              68,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              42,
              45,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "get",
            "range": Array [
              51,
              54,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "set",
            "range": Array [
              63,
              66,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
        "get": Object {
          "$ref": 1,
        },
        "set": Object {
          "$ref": 2,
        },
        "x": Object {
          "$ref": 3,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  7,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "get",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "get",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "get",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "set",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  22,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "set",
              "range": Array [
                22,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "set",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  32,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  68,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  28,
                  69,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                32,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/single-spread.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      80,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          80,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              32,
              33,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              36,
              78,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              47,
              50,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "get",
            "range": Array [
              61,
              64,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "set",
            "range": Array [
              73,
              76,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
        "get": Object {
          "$ref": 1,
        },
        "set": Object {
          "$ref": 2,
        },
        "x": Object {
          "$ref": 3,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  7,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "get",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "get",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "get",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "set",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  22,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "set",
              "range": Array [
                22,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "set",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  32,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  78,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  28,
                  79,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                32,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/spread-trailing-comma.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              3,
              4,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalObjectRestSpread/two-spread.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      78,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          78,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              32,
              33,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              36,
              76,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              47,
              50,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "get",
            "range": Array [
              59,
              62,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "set",
            "range": Array [
              71,
              74,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
        "get": Object {
          "$ref": 1,
        },
        "set": Object {
          "$ref": 2,
        },
        "x": Object {
          "$ref": 3,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  7,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "get",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "get",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "get",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "set",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  22,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "set",
              "range": Array [
                22,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "set",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  32,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  76,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  28,
                  77,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                32,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalOptionalCatchBinding/optional-catch-binding.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              4,
              6,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [],
        },
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              15,
            ],
            "type": "CatchClause",
          },
          "childScopes": Array [
            Object {
              "$id": 1,
              "block": Object {
                "range": Array [
                  13,
                  15,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 2,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 3,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "catch",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/experimentalOptionalCatchBinding/optional-catch-binding-finally.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              4,
              6,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              15,
            ],
            "type": "CatchClause",
          },
          "childScopes": Array [
            Object {
              "$id": 1,
              "block": Object {
                "range": Array [
                  13,
                  15,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 2,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "catch",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              24,
              26,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/exponentiationOperators/exponential-operators.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              14,
            ],
            "type": "BinaryExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "rw",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              22,
              23,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/for/for-empty.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/for/for-loop.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              28,
              30,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              12,
              13,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              23,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "rw",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": null,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "i": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "i",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  13,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  4,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "i",
              "range": Array [
                8,
                9,
              ],
              "type": "Identifier",
            },
          ],
          "name": "i",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/for/for-with-coma.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      46,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          46,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              41,
              44,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 9,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              14,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "j",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              20,
              22,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              24,
              25,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "j",
            "range": Array [
              28,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              31,
              32,
            ],
            "type": "Identifier",
          },
          "kind": "rw",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": null,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 9,
          },
          "identifier": Object {
            "name": "j",
            "range": Array [
              36,
              37,
            ],
            "type": "Identifier",
          },
          "kind": "rw",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": null,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "i": Object {
          "$ref": 0,
        },
        "j": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "i",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "i",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "i",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "j",
                "range": Array [
                  16,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  16,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "j",
              "range": Array [
                16,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "j",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/for/for-with-const.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              29,
            ],
            "type": "ForStatement",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  26,
                  29,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  15,
                  16,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "j",
                "range": Array [
                  22,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "i": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "i",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      11,
                      16,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      16,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "i",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "i",
              "references": Array [
                Object {
                  "$ref": 1,
                },
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/for/for-with-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      43,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          43,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              9,
              10,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              12,
              13,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              16,
              33,
            ],
            "type": "CallExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              16,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              35,
              36,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              39,
              40,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/for/for-with-let.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              29,
            ],
            "type": "ForStatement",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  26,
                  29,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "block",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  15,
                  16,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "i",
                "range": Array [
                  18,
                  19,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "j",
                "range": Array [
                  22,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "i": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "i",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      11,
                      16,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      16,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "i",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "i",
              "references": Array [
                Object {
                  "$ref": 1,
                },
                Object {
                  "$ref": 2,
                },
              ],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-array.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              16,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "ArrayExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-bare-nonstrict.src 1`] = `
Object {
  "$id": 14,
  "block": Object {
    "range": Array [
      0,
      133,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 13,
      "block": Object {
        "range": Array [
          0,
          133,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 12,
          "block": Object {
            "range": Array [
              113,
              132,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 11,
              "from": Object {
                "$ref": 12,
              },
              "identifier": Object {
                "name": "iterations",
                "range": Array [
                  119,
                  129,
                ],
                "type": "Identifier",
              },
              "kind": "rw",
              "resolved": Object {
                "$ref": 1,
              },
              "writeExpr": null,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 11,
            },
          ],
          "type": "block",
          "upperScope": Object {
            "$ref": 13,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 13,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "effects",
            "range": Array [
              4,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              14,
              15,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "iterations",
            "range": Array [
              21,
              31,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              34,
              35,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              58,
              59,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              63,
              76,
            ],
            "type": "SequenceExpression",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "effects",
            "range": Array [
              65,
              72,
            ],
            "type": "Identifier",
          },
          "kind": "rw",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": null,
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              58,
              59,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              81,
              111,
            ],
            "type": "SequenceExpression",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "stored",
            "range": Array [
              81,
              87,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": Object {
            "name": "a",
            "range": Array [
              90,
              91,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 10,
          "from": Object {
            "$ref": 13,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              90,
              91,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 14,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 3,
        },
        "effects": Object {
          "$ref": 0,
        },
        "iterations": Object {
          "$ref": 1,
        },
        "stored": Object {
          "$ref": 2,
        },
      },
      "variableScope": Object {
        "$ref": 13,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "effects",
                "range": Array [
                  4,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  15,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "effects",
              "range": Array [
                4,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "effects",
          "references": Array [
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "iterations",
                "range": Array [
                  21,
                  31,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  21,
                  35,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  17,
                  36,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "iterations",
              "range": Array [
                21,
                31,
              ],
              "type": "Identifier",
            },
          ],
          "name": "iterations",
          "references": Array [
            Object {
              "$ref": 5,
            },
            Object {
              "$ref": 11,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "stored",
                "range": Array [
                  41,
                  47,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  41,
                  47,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  37,
                  48,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "stored",
              "range": Array [
                41,
                47,
              ],
              "type": "Identifier",
            },
          ],
          "name": "stored",
          "references": Array [
            Object {
              "$ref": 9,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  58,
                  59,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  58,
                  77,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  54,
                  77,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                58,
                59,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 6,
            },
            Object {
              "$ref": 8,
            },
            Object {
              "$ref": 10,
            },
          ],
          "scope": Object {
            "$ref": 13,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 14,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-destruction.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              31,
              33,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "name",
            "range": Array [
              10,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "value",
            "range": Array [
              16,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "name": Object {
          "$ref": 0,
        },
        "value": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "name",
                "range": Array [
                  10,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "name",
              "range": Array [
                10,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "name",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "value",
                "range": Array [
                  16,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "value",
              "range": Array [
                16,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "value",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-destruction-object.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              31,
              33,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "name",
            "range": Array [
              10,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "value",
            "range": Array [
              16,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "name": Object {
          "$ref": 0,
        },
        "value": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "name",
                "range": Array [
                  10,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "name",
              "range": Array [
                10,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "name",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "value",
                "range": Array [
                  16,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "value",
              "range": Array [
                16,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "value",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-object.src 1`] = `"';' expected."`;

exports[`javascript fixtures/forIn/for-in-object-with-body.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              14,
              16,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-with-assigment.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              0,
              36,
            ],
            "type": "ForInStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  13,
                  15,
                ],
                "type": "Literal",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "name": "list",
                "range": Array [
                  19,
                  23,
                ],
                "type": "Identifier",
              },
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "list",
                "range": Array [
                  19,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "process",
                "range": Array [
                  25,
                  32,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 6,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  33,
                  34,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      9,
                      15,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      15,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    9,
                    10,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
                Object {
                  "$ref": 2,
                },
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-with-bare-assigment.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              9,
              10,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              5,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "arr",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "arr",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-with-const.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              33,
            ],
            "type": "ForInStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "name": "list",
                "range": Array [
                  16,
                  20,
                ],
                "type": "Identifier",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "list",
                "range": Array [
                  16,
                  20,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "process",
                "range": Array [
                  22,
                  29,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 4,
              "from": Object {
                "$ref": 5,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  30,
                  31,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      12,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
                Object {
                  "$ref": 4,
                },
              ],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-with-milti-asigment.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              18,
            ],
            "type": "AssignmentExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              13,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "z",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              17,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "q",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "q",
            "range": Array [
              22,
              23,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  18,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-with-rest.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              38,
              41,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "xx",
            "range": Array [
              10,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "array",
            "range": Array [
              31,
              36,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "rrestOff",
            "range": Array [
              17,
              25,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "array",
            "range": Array [
              31,
              36,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "array",
            "range": Array [
              31,
              36,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forIn/for-in-with-var.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "list",
            "range": Array [
              14,
              18,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "list",
            "range": Array [
              14,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "process",
            "range": Array [
              20,
              27,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              28,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  10,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-array.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              36,
            ],
            "type": "ForOfStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  14,
                  16,
                ],
                "type": "ArrayExpression",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "doSomething",
                "range": Array [
                  22,
                  33,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      10,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    9,
                    10,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-destruction.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              31,
              33,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "name",
            "range": Array [
              10,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "value",
            "range": Array [
              16,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "name": Object {
          "$ref": 0,
        },
        "value": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "name",
                "range": Array [
                  10,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "name",
              "range": Array [
                10,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "name",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "value",
                "range": Array [
                  16,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "value",
              "range": Array [
                16,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "value",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-destruction-object.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              31,
              33,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "name",
            "range": Array [
              10,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "value",
            "range": Array [
              16,
              21,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              26,
              29,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 4,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "name": Object {
          "$ref": 0,
        },
        "value": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "name",
                "range": Array [
                  10,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "name",
              "range": Array [
                10,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "name",
          "references": Array [
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "value",
                "range": Array [
                  16,
                  21,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  22,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "value",
              "range": Array [
                16,
                21,
              ],
              "type": "Identifier",
            },
          ],
          "name": "value",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 4,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-object.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              36,
            ],
            "type": "ForOfStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "range": Array [
                  14,
                  16,
                ],
                "type": "ObjectExpression",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "doSomething",
                "range": Array [
                  22,
                  33,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      10,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    9,
                    10,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-with-function-initializer.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          65,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              13,
              43,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 6,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 6,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              13,
              43,
            ],
            "type": "FunctionExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "i",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "list",
            "range": Array [
              47,
              51,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "list",
            "range": Array [
              47,
              51,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "process",
            "range": Array [
              53,
              60,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              61,
              62,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "i": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "i",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  43,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  43,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "i",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "i",
          "references": Array [
            Object {
              "$ref": 1,
            },
            Object {
              "$ref": 2,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-with-rest.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              38,
              41,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "xx",
            "range": Array [
              10,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "array",
            "range": Array [
              31,
              36,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "rrestOff",
            "range": Array [
              17,
              25,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "array",
            "range": Array [
              31,
              36,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "array",
            "range": Array [
              31,
              36,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-with-var-and-braces.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              19,
              41,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "doSomething",
                "range": Array [
                  25,
                  36,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "block",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "foo",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  10,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/for-of-with-var-and-no-braces.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              9,
              10,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "foo",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              14,
              17,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "doSomething",
            "range": Array [
              23,
              34,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  10,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  5,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/invalid-for-of-with-const-and-no-braces.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              39,
            ],
            "type": "ForOfStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  11,
                  12,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "name": "foo",
                "range": Array [
                  16,
                  19,
                ],
                "type": "Identifier",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  16,
                  19,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "doSomething",
                "range": Array [
                  25,
                  36,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      12,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/forOf/invalid-for-of-with-let-and-no-braces.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      38,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          38,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              37,
            ],
            "type": "ForOfStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 0,
              },
              "writeExpr": Object {
                "name": "foo",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
            },
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "foo",
                "range": Array [
                  14,
                  17,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "doSomething",
                "range": Array [
                  23,
                  34,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "for",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "x": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      9,
                      10,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      5,
                      10,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    9,
                    10,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 1,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/function/return-multiline-sequence.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      63,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          63,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              62,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  40,
                  41,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "y",
                "range": Array [
                  47,
                  48,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "z",
                "range": Array [
                  54,
                  55,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
            "y": Object {
              "$ref": 3,
            },
            "z": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      14,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      62,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    14,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      17,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      62,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    17,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "z",
                    "range": Array [
                      20,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      62,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "z",
                  "range": Array [
                    20,
                    21,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "z",
              "references": Array [
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  62,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/function/return-sequence.src 1`] = `
Object {
  "$id": 10,
  "block": Object {
    "range": Array [
      0,
      47,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 9,
      "block": Object {
        "range": Array [
          0,
          47,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 8,
          "block": Object {
            "range": Array [
              0,
              46,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  35,
                  36,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "y",
                "range": Array [
                  38,
                  39,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 3,
              },
              "writeExpr": undefined,
            },
            Object {
              "$id": 7,
              "from": Object {
                "$ref": 8,
              },
              "identifier": Object {
                "name": "z",
                "range": Array [
                  41,
                  42,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 9,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
            "y": Object {
              "$ref": 3,
            },
            "z": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      14,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      46,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    14,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "y",
                    "range": Array [
                      17,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      46,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "y",
                  "range": Array [
                    17,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "y",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "z",
                    "range": Array [
                      20,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      46,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "z",
                  "range": Array [
                    20,
                    21,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "z",
              "references": Array [
                Object {
                  "$ref": 7,
                },
              ],
              "scope": Object {
                "$ref": 8,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 10,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 9,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  46,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 9,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 10,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/anonymous-generator.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              1,
              25,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "v",
                "range": Array [
                  22,
                  23,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 1,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/async-generator-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      1,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          1,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              1,
              27,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  17,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  1,
                  27,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                17,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/async-generator-method.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      66,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          66,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              65,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 6,
              "block": Object {
                "range": Array [
                  23,
                  63,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 4,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "x",
                    "range": Array [
                      42,
                      43,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "w",
                  "resolved": Object {
                    "$ref": 3,
                  },
                  "writeExpr": Object {
                    "range": Array [
                      46,
                      56,
                    ],
                    "type": "YieldExpression",
                  },
                },
                Object {
                  "$id": 5,
                  "from": Object {
                    "$ref": 6,
                  },
                  "identifier": Object {
                    "name": "g",
                    "range": Array [
                      53,
                      54,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 5,
                },
              ],
              "type": "function",
              "upperScope": Object {
                "$ref": 7,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "x": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "x",
                        "range": Array [
                          42,
                          43,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          42,
                          56,
                        ],
                        "type": "VariableDeclarator",
                      },
                      "parent": Object {
                        "range": Array [
                          36,
                          57,
                        ],
                        "type": "VariableDeclaration",
                      },
                      "type": "Variable",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "x",
                      "range": Array [
                        42,
                        43,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "x",
                  "references": Array [
                    Object {
                      "$ref": 4,
                    },
                  ],
                  "scope": Object {
                    "$ref": 6,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "class",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "C": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 8,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "C",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      65,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "C",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "C",
              "references": Array [],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "C": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "C",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  65,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "C",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "C",
          "references": Array [],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 5,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/double-yield.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              1,
              32,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/empty-generator-declaration.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              0,
              16,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "t": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "t",
                "range": Array [
                  10,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  16,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "t",
              "range": Array [
                10,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "t",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/generator-declaration.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              30,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "v",
                "range": Array [
                  27,
                  28,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "test",
                "range": Array [
                  10,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  30,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "test",
              "range": Array [
                10,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "test",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/yield-delegation.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              1,
              26,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "v",
                "range": Array [
                  23,
                  24,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 1,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/yield-without-value.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              1,
              24,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/yield-without-value-in-call.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              1,
              28,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 1,
              "from": Object {
                "$ref": 2,
              },
              "identifier": Object {
                "name": "fn",
                "range": Array [
                  16,
                  18,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 1,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/generators/yield-without-value-no-semi.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              1,
              23,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/globalReturn/return-identifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "fooz",
            "range": Array [
              7,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/globalReturn/return-no-arg.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      8,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          8,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/globalReturn/return-true.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/hexLiterals/invalid.src 1`] = `"';' expected."`;

exports[`javascript fixtures/hexLiterals/lowercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      8,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          8,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/hexLiterals/uppercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      8,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          8,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/importMeta/simple-import-meta.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/labels/label-break.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      55,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          55,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              21,
              54,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/labels/label-continue.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      61,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          61,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              21,
              60,
            ],
            "type": "BlockStatement",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "block",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/error-delete.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              26,
              27,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  8,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  18,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/error-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      43,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          43,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              41,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 2,
              "from": Object {
                "$ref": 3,
              },
              "identifier": Object {
                "name": "friends",
                "range": Array [
                  31,
                  38,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  41,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/error-strict.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      65,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          65,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              28,
              64,
            ],
            "type": "WithStatement",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  41,
                  64,
                ],
                "type": "BlockStatement",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [
                Object {
                  "$id": 2,
                  "from": Object {
                    "$ref": 4,
                  },
                  "identifier": Object {
                    "name": "console",
                    "range": Array [
                      44,
                      51,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
                Object {
                  "$id": 3,
                  "from": Object {
                    "$ref": 4,
                  },
                  "identifier": Object {
                    "name": "roof",
                    "range": Array [
                      56,
                      60,
                    ],
                    "type": "Identifier",
                  },
                  "kind": "r",
                  "resolved": null,
                  "writeExpr": undefined,
                },
              ],
              "throughReferences": Array [
                Object {
                  "$ref": 2,
                },
                Object {
                  "$ref": 3,
                },
              ],
              "type": "block",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {},
              "variableScope": Object {
                "$ref": 6,
              },
              "variables": Array [],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 3,
            },
          ],
          "type": "with",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "house",
            "range": Array [
              34,
              39,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "house": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "house",
                "range": Array [
                  7,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  12,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "house",
              "range": Array [
                7,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "house",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-async-named-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              30,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  30,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                22,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-const.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              13,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              19,
              20,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  20,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  7,
                  21,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-array.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-async-named-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      39,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          39,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              15,
              38,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  30,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  38,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                30,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-class.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              15,
              25,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-expression.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-function.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 1,
          "block": Object {
            "range": Array [
              15,
              29,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 2,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 0,
            },
          },
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [
            Object {
              "$id": 0,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 1,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-named-class.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              15,
              30,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Test": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Test",
                    "range": Array [
                      21,
                      25,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      15,
                      30,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Test",
                  "range": Array [
                    21,
                    25,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Test",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Test",
                "range": Array [
                  21,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  30,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Test",
              "range": Array [
                21,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Test",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-named-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              15,
              32,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  24,
                  27,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  32,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                24,
                27,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-number.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-object.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-default-value.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              15,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-batch.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-default.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-named-as-default.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-named-as-specifier.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-named-as-specifiers.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      41,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          41,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-specifier.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-from-specifiers.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-function.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      26,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          26,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              25,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  16,
                  19,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  25,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                16,
                19,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-let.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              11,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              18,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  11,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  7,
                  19,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                11,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-as-default.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-as-specifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-as-specifiers.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              24,
              27,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-class.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              22,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "Test": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "Test",
                    "range": Array [
                      13,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      7,
                      22,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "Test",
                  "range": Array [
                    13,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "Test",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "Test": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "Test",
                "range": Array [
                  13,
                  17,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  22,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "Test",
              "range": Array [
                13,
                17,
              ],
              "type": "Identifier",
            },
          ],
          "name": "Test",
          "references": Array [],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-empty.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      11,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          11,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-specifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-specifiers.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              13,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-named-specifiers-comma.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              8,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              13,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-var.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  11,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  7,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                11,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-var-anonymous-function.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              17,
              31,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              11,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              31,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  11,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  31,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  7,
                  32,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                11,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/export-var-number.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              11,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              17,
              18,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  11,
                  14,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  7,
                  19,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                11,
                14,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-default.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  10,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-default-and-named-specifiers.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 1,
        },
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  10,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-default-and-namespace-specifiers.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      33,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          33,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 1,
        },
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  10,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  17,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  12,
                  20,
                ],
                "type": "ImportNamespaceSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  32,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                17,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-default-as.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  19,
                  22,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  22,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                19,
                22,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-jquery.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "$": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "$",
                "range": Array [
                  7,
                  8,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  8,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "$",
              "range": Array [
                7,
                8,
              ],
              "type": "Identifier",
            },
          ],
          "name": "$",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-module.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-named-as-specifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "baz": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "baz",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  18,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  31,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "baz",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "baz",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-named-as-specifiers.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      37,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          37,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "baz": Object {
          "$ref": 0,
        },
        "xyz": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "baz",
                "range": Array [
                  15,
                  18,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  18,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "baz",
              "range": Array [
                15,
                18,
              ],
              "type": "Identifier",
            },
          ],
          "name": "baz",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "xyz",
                "range": Array [
                  20,
                  23,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  20,
                  23,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  36,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "xyz",
              "range": Array [
                20,
                23,
              ],
              "type": "Identifier",
            },
          ],
          "name": "xyz",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-named-empty.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-named-specifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      25,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          25,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  8,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  11,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                8,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-named-specifiers.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 0,
        },
        "baz": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  8,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  11,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                8,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "baz",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "baz",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "baz",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-named-specifiers-comma.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      31,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          31,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "bar": Object {
          "$ref": 0,
        },
        "baz": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "bar",
                "range": Array [
                  8,
                  11,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  8,
                  11,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  30,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "bar",
              "range": Array [
                8,
                11,
              ],
              "type": "Identifier",
            },
          ],
          "name": "bar",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "baz",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  30,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "baz",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "baz",
          "references": Array [],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-namespace-specifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  12,
                  15,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  15,
                ],
                "type": "ImportNamespaceSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                12,
                15,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/import-null-as-nil.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      34,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          34,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "nil": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "nil",
                "range": Array [
                  17,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  9,
                  20,
                ],
                "type": "ImportSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  33,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "nil",
              "range": Array [
                17,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "nil",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/invalid-await.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "await": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "await",
                "range": Array [
                  11,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  11,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  7,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "await",
              "range": Array [
                11,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "await",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/invalid-class.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 0,
          "block": Object {
            "range": Array [
              15,
              23,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 1,
          },
          "variableMap": Object {},
          "variableScope": Object {
            "$ref": 1,
          },
          "variables": Array [],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/invalid-export-batch-missing-from-clause.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-export-batch-token.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-export-default.src 1`] = `"';' expected."`;

exports[`javascript fixtures/modules/invalid-export-default-equal.src 1`] = `"Expression expected."`;

exports[`javascript fixtures/modules/invalid-export-default-token.src 1`] = `"';' expected."`;

exports[`javascript fixtures/modules/invalid-export-named-default.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      17,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          17,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "default",
            "range": Array [
              8,
              15,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/invalid-export-named-extra-comma.src 1`] = `"Identifier expected."`;

exports[`javascript fixtures/modules/invalid-export-named-middle-comma.src 1`] = `"Identifier expected."`;

exports[`javascript fixtures/modules/invalid-import-default.src 1`] = `"Expression expected."`;

exports[`javascript fixtures/modules/invalid-import-default-after-named.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-default-after-named-after-default.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-default-missing-module-specifier.src 1`] = `"'=' expected."`;

exports[`javascript fixtures/modules/invalid-import-default-module-specifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  7,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  7,
                  10,
                ],
                "type": "ImportDefaultSpecifier",
              },
              "parent": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "ImportDeclaration",
              },
              "type": "ImportBinding",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                7,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [],
          "scope": Object {
            "$ref": 1,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/invalid-import-missing-module-specifier.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-module-specifier.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      22,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          22,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/modules/invalid-import-named-after-named.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-named-after-namespace.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-named-as-missing-from.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-named-extra-comma.src 1`] = `"Identifier expected."`;

exports[`javascript fixtures/modules/invalid-import-named-middle-comma.src 1`] = `"Identifier expected."`;

exports[`javascript fixtures/modules/invalid-import-namespace-after-named.src 1`] = `"'from' expected."`;

exports[`javascript fixtures/modules/invalid-import-namespace-missing-as.src 1`] = `"'as' expected."`;

exports[`javascript fixtures/newTarget/invalid-new-target.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              18,
            ],
            "type": "MetaProperty",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  18,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  19,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/newTarget/invalid-unknown-property.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      45,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          45,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              8,
              44,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "f",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              44,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  44,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  44,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/newTarget/simple-new-target.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      41,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          41,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              40,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "x",
                "range": Array [
                  23,
                  24,
                ],
                "type": "Identifier",
              },
              "kind": "w",
              "resolved": Object {
                "$ref": 2,
              },
              "writeExpr": Object {
                "range": Array [
                  27,
                  37,
                ],
                "type": "MetaProperty",
              },
            },
          ],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "x": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "x",
                    "range": Array [
                      23,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      23,
                      37,
                    ],
                    "type": "VariableDeclarator",
                  },
                  "parent": Object {
                    "range": Array [
                      19,
                      38,
                    ],
                    "type": "VariableDeclaration",
                  },
                  "type": "Variable",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "x",
                  "range": Array [
                    23,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "x",
              "references": Array [
                Object {
                  "$ref": 3,
                },
              ],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  40,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteral/object-literal-in-lhs.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "fn",
            "range": Array [
              0,
              2,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "obj",
            "range": Array [
              11,
              14,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/computed-addition-property.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              28,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              23,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  28,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/computed-and-identifier.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              3,
              4,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/computed-getter-and-setter.src 1`] = `
Object {
  "$id": 8,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 7,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              9,
              14,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
        Object {
          "$id": 6,
          "block": Object {
            "range": Array [
              23,
              29,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 7,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 4,
            },
            "v": Object {
              "$ref": 5,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
            Object {
              "$id": 5,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "v",
                    "range": Array [
                      24,
                      25,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      23,
                      29,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "v",
                  "range": Array [
                    24,
                    25,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "v",
              "references": Array [],
              "scope": Object {
                "$ref": 6,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 7,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              21,
              22,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 8,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 7,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 8,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/computed-string-property.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              28,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              23,
              26,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  28,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/computed-variable-property.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      28,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          28,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              26,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "bar",
            "range": Array [
              15,
              18,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              21,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  26,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/invalid-computed-variable-property.src 1`] = `"':' expected."`;

exports[`javascript fixtures/objectLiteralComputedProperties/invalid-standalone-computed-variable-property.src 1`] = `"':' expected."`;

exports[`javascript fixtures/objectLiteralComputedProperties/standalone-expression.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              3,
              4,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/standalone-expression-with-addition.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralComputedProperties/standalone-expression-with-method.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              7,
              20,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              3,
              4,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralDuplicateProperties/error-proto-property.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      81,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          81,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "proto",
            "range": Array [
              19,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              27,
              29,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              36,
              37,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              40,
              80,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "proto",
            "range": Array [
              54,
              59,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "proto",
            "range": Array [
              73,
              78,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "proto": Object {
          "$ref": 0,
        },
        "x": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "proto",
                "range": Array [
                  19,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  29,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  15,
                  30,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "proto",
              "range": Array [
                19,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "proto",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  36,
                  37,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  36,
                  80,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  32,
                  81,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                36,
                37,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralDuplicateProperties/error-proto-string-property.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      85,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          85,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "proto",
            "range": Array [
              19,
              24,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              27,
              29,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              36,
              37,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              40,
              84,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "proto",
            "range": Array [
              56,
              61,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "proto",
            "range": Array [
              77,
              82,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "proto": Object {
          "$ref": 0,
        },
        "x": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "proto",
                "range": Array [
                  19,
                  24,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  29,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  15,
                  30,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "proto",
              "range": Array [
                19,
                24,
              ],
              "type": "Identifier",
            },
          ],
          "name": "proto",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 4,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  36,
                  37,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  36,
                  84,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  32,
                  85,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                36,
                37,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 3,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralDuplicateProperties/strict-duplicate-properties.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      53,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          53,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              23,
              52,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  19,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  52,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  15,
                  53,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                19,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralDuplicateProperties/strict-duplicate-string-properties.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      57,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          57,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              19,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              23,
              56,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  19,
                  20,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  19,
                  56,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  15,
                  57,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                19,
                20,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/invalid-method-no-braces.src 1`] = `"'{' expected."`;

exports[`javascript fixtures/objectLiteralShorthandMethods/method-property.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      51,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          51,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              17,
              47,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  37,
                  40,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              49,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  49,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  50,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/simple-method.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      30,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          30,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              16,
              26,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              28,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/simple-method-named-get.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              13,
              23,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              25,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/simple-method-named-set.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              13,
              23,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              25,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/simple-method-with-argument.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      35,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          35,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              16,
              31,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "test": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "test",
                    "range": Array [
                      17,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      16,
                      31,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "test",
                  "range": Array [
                    17,
                    21,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "test",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 4,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              33,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/simple-method-with-string-name.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      32,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          32,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 2,
          "block": Object {
            "range": Array [
              18,
              28,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 3,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 2,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 2,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              0,
              1,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "range": Array [
              4,
              30,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandMethods/string-name-method-property.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      53,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          53,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              19,
              49,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 3,
              "from": Object {
                "$ref": 4,
              },
              "identifier": Object {
                "name": "bar",
                "range": Array [
                  39,
                  42,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 3,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              51,
            ],
            "type": "ObjectExpression",
          },
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  51,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  52,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/objectLiteralShorthandProperties/shorthand-properties.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      67,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          67,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              32,
              33,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 3,
          },
          "writeExpr": Object {
            "range": Array [
              36,
              65,
            ],
            "type": "ObjectExpression",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              42,
              45,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "get",
            "range": Array [
              51,
              54,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "set",
            "range": Array [
              60,
              63,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 2,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
        "get": Object {
          "$ref": 1,
        },
        "set": Object {
          "$ref": 2,
        },
        "x": Object {
          "$ref": 3,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  7,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "get",
                "range": Array [
                  13,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  13,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "get",
              "range": Array [
                13,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "get",
          "references": Array [
            Object {
              "$ref": 6,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 2,
          "defs": Array [
            Object {
              "name": Object {
                "name": "set",
                "range": Array [
                  22,
                  25,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  22,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "set",
              "range": Array [
                22,
                25,
              ],
              "type": "Identifier",
            },
          ],
          "name": "set",
          "references": Array [
            Object {
              "$ref": 7,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
        Object {
          "$id": 3,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  32,
                  33,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  32,
                  65,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  28,
                  66,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                32,
                33,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/octalLiterals/invalid.src 1`] = `"';' expected."`;

exports[`javascript fixtures/octalLiterals/legacy.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      7,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          7,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/octalLiterals/lowercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      7,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          7,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/octalLiterals/strict-uppercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": true,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/octalLiterals/uppercase.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      7,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          7,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/regex/regexp-simple.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              16,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/regexUFlag/regex-u-extended-escape.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      42,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          42,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              40,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  40,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  41,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/regexUFlag/regex-u-invalid-extended-escape.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              21,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  21,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/regexUFlag/regex-u-simple.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              16,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/regexYFlag/regexp-y-simple.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      18,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          18,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              16,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "foo": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "foo",
                "range": Array [
                  4,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  16,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  17,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "foo",
              "range": Array [
                4,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "foo",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/basic-rest.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      17,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    17,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/class-constructor.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      44,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          44,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              43,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  25,
                  41,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "foo": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "foo",
                        "range": Array [
                          29,
                          32,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          25,
                          41,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "foo",
                      "range": Array [
                        29,
                        32,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "foo",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      43,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/class-method.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      36,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          36,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              0,
              35,
            ],
            "type": "ClassDeclaration",
          },
          "childScopes": Array [
            Object {
              "$id": 4,
              "block": Object {
                "range": Array [
                  17,
                  33,
                ],
                "type": "FunctionExpression",
              },
              "childScopes": Array [],
              "functionExpressionScope": false,
              "isStrict": true,
              "references": Array [],
              "throughReferences": Array [],
              "type": "function",
              "upperScope": Object {
                "$ref": 5,
              },
              "variableMap": Object {
                "arguments": Object {
                  "$ref": 2,
                },
                "bar": Object {
                  "$ref": 3,
                },
              },
              "variableScope": Object {
                "$ref": 4,
              },
              "variables": Array [
                Object {
                  "$id": 2,
                  "defs": Array [],
                  "eslintUsed": undefined,
                  "identifiers": Array [],
                  "name": "arguments",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
                Object {
                  "$id": 3,
                  "defs": Array [
                    Object {
                      "name": Object {
                        "name": "bar",
                        "range": Array [
                          21,
                          24,
                        ],
                        "type": "Identifier",
                      },
                      "node": Object {
                        "range": Array [
                          17,
                          33,
                        ],
                        "type": "FunctionExpression",
                      },
                      "parent": null,
                      "type": "Parameter",
                    },
                  ],
                  "eslintUsed": undefined,
                  "identifiers": Array [
                    Object {
                      "name": "bar",
                      "range": Array [
                        21,
                        24,
                      ],
                      "type": "Identifier",
                    },
                  ],
                  "name": "bar",
                  "references": Array [],
                  "scope": Object {
                    "$ref": 4,
                  },
                },
              ],
            },
          ],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "class",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "A": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 6,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "A",
                    "range": Array [
                      6,
                      7,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      35,
                    ],
                    "type": "ClassDeclaration",
                  },
                  "parent": undefined,
                  "type": "ClassName",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "A",
                  "range": Array [
                    6,
                    7,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "A",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "A": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "A",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  35,
                ],
                "type": "ClassDeclaration",
              },
              "parent": null,
              "type": "ClassName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "A",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "A",
          "references": Array [],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/error-no-default.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      24,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          24,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              24,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      24,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      17,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      24,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    17,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  24,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/error-not-last.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              0,
              23,
            ],
            "type": "TSDeclareFunction",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "empty-function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 2,
            },
            "c": Object {
              "$ref": 3,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      11,
                      12,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    11,
                    12,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      17,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    17,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "c",
                    "range": Array [
                      20,
                      21,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      23,
                    ],
                    "type": "TSDeclareFunction",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": true,
              "identifiers": Array [
                Object {
                  "name": "c",
                  "range": Array [
                    20,
                    21,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "c",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  23,
                ],
                "type": "TSDeclareFunction",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/func-expression.src 1`] = `
Object {
  "$id": 6,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 5,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 4,
          "block": Object {
            "range": Array [
              8,
              26,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 5,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 3,
            },
            "arguments": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 4,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      21,
                      22,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      8,
                      26,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    21,
                    22,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 4,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 5,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              26,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 6,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 5,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  26,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  27,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 5,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 6,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/func-expression-multi.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      29,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          29,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 5,
          "block": Object {
            "range": Array [
              8,
              28,
            ],
            "type": "FunctionExpression",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 6,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 3,
            },
            "arguments": Object {
              "$ref": 2,
            },
            "b": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 5,
          },
          "variables": Array [
            Object {
              "$id": 2,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 3,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      17,
                      18,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      8,
                      28,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    17,
                    18,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
            Object {
              "$id": 4,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      23,
                      24,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      8,
                      28,
                    ],
                    "type": "FunctionExpression",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    23,
                    24,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 5,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "x",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              28,
            ],
            "type": "FunctionExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  28,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  29,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/invalid-rest-param.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      23,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          23,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              22,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "a": Object {
              "$ref": 2,
            },
            "arguments": Object {
              "$ref": 1,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "a",
                    "range": Array [
                      16,
                      17,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      22,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "a",
                  "range": Array [
                    16,
                    17,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "a",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "x": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "x",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  22,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "x",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "x",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/restParams/single-rest.src 1`] = `
Object {
  "$id": 5,
  "block": Object {
    "range": Array [
      0,
      20,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 4,
      "block": Object {
        "range": Array [
          0,
          20,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 3,
          "block": Object {
            "range": Array [
              0,
              19,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [],
          "throughReferences": Array [],
          "type": "function",
          "upperScope": Object {
            "$ref": 4,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 1,
            },
            "b": Object {
              "$ref": 2,
            },
          },
          "variableScope": Object {
            "$ref": 3,
          },
          "variables": Array [
            Object {
              "$id": 1,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
            Object {
              "$id": 2,
              "defs": Array [
                Object {
                  "name": Object {
                    "name": "b",
                    "range": Array [
                      14,
                      15,
                    ],
                    "type": "Identifier",
                  },
                  "node": Object {
                    "range": Array [
                      0,
                      19,
                    ],
                    "type": "FunctionDeclaration",
                  },
                  "parent": null,
                  "type": "Parameter",
                },
              ],
              "eslintUsed": undefined,
              "identifiers": Array [
                Object {
                  "name": "b",
                  "range": Array [
                    14,
                    15,
                  ],
                  "type": "Identifier",
                },
              ],
              "name": "b",
              "references": Array [],
              "scope": Object {
                "$ref": 3,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 5,
      },
      "variableMap": Object {
        "f": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 4,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "f",
                "range": Array [
                  9,
                  10,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  19,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "f",
              "range": Array [
                9,
                10,
              ],
              "type": "Identifier",
            },
          ],
          "name": "f",
          "references": Array [],
          "scope": Object {
            "$ref": 4,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 5,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-float.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              13,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  13,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  14,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-float-negative.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              14,
            ],
            "type": "UnaryExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-null.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      16,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          16,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              14,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  14,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  15,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-number.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              11,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  11,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  12,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-number-negative.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              12,
            ],
            "type": "UnaryExpression",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-string.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      15,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          15,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              10,
              13,
            ],
            "type": "Literal",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  13,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  14,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/simple-literals/literal-undefined.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      21,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          21,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "name": "undefined",
            "range": Array [
              10,
              19,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "undefined",
            "range": Array [
              10,
              19,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  6,
                  7,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  6,
                  19,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  20,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                6,
                7,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 3,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/spread/complex-spread.src 1`] = `
Object {
  "$id": 11,
  "block": Object {
    "range": Array [
      0,
      115,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 10,
      "block": Object {
        "range": Array [
          0,
          115,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "ka",
            "range": Array [
              7,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "nested",
            "range": Array [
              14,
              20,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "other",
            "range": Array [
              27,
              32,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "nested2",
            "range": Array [
              48,
              55,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "y",
            "range": Array [
              62,
              63,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "z",
            "range": Array [
              71,
              72,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 6,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "c",
            "range": Array [
              77,
              78,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 7,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "rest2",
            "range": Array [
              85,
              90,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 8,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "rest",
            "range": Array [
              97,
              101,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": null,
          "writeExpr": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
        },
        Object {
          "$id": 9,
          "from": Object {
            "$ref": 10,
          },
          "identifier": Object {
            "name": "complex",
            "range": Array [
              105,
              112,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
        Object {
          "$ref": 4,
        },
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 6,
        },
        Object {
          "$ref": 7,
        },
        Object {
          "$ref": 8,
        },
        Object {
          "$ref": 9,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 11,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 10,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
    Object {
      "$ref": 4,
    },
    Object {
      "$ref": 5,
    },
    Object {
      "$ref": 6,
    },
    Object {
      "$ref": 7,
    },
    Object {
      "$ref": 8,
    },
    Object {
      "$ref": 9,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 11,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/spread/error-invalid-if.src 1`] = `"Expression expected."`;

exports[`javascript fixtures/spread/error-invalid-sequence.src 1`] = `"Expression expected."`;

exports[`javascript fixtures/spread/multi-function-call.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              10,
              11,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/spread/not-final-param.src 1`] = `
Object {
  "$id": 4,
  "block": Object {
    "range": Array [
      0,
      14,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 3,
      "block": Object {
        "range": Array [
          0,
          14,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "func",
            "range": Array [
              0,
              4,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              8,
              9,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 3,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
        Object {
          "$ref": 2,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 4,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 3,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
    Object {
      "$ref": 2,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 4,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/spread/simple-function-call.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              7,
              8,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
        Object {
          "$ref": 1,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
    Object {
      "$ref": 1,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/deeply-nested.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      46,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          46,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "raw",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/error-octal-literal.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      7,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          7,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/escape-characters.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      40,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          40,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "ts",
            "range": Array [
              4,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              39,
            ],
            "type": "TemplateLiteral",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "ts": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "ts",
                "range": Array [
                  4,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  39,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  40,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "ts",
              "range": Array [
                4,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "ts",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/expressions.src 1`] = `
Object {
  "$id": 7,
  "block": Object {
    "range": Array [
      0,
      59,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 6,
      "block": Object {
        "range": Array [
          0,
          59,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              4,
              5,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              8,
              9,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              15,
              16,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": Object {
            "range": Array [
              19,
              25,
            ],
            "type": "Literal",
          },
        },
        Object {
          "$id": 4,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              37,
              38,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 1,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 5,
          "from": Object {
            "$ref": 6,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              51,
              52,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 7,
      },
      "variableMap": Object {
        "a": Object {
          "$ref": 0,
        },
        "b": Object {
          "$ref": 1,
        },
      },
      "variableScope": Object {
        "$ref": 6,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "a",
                "range": Array [
                  4,
                  5,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  9,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  10,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "a",
              "range": Array [
                4,
                5,
              ],
              "type": "Identifier",
            },
          ],
          "name": "a",
          "references": Array [
            Object {
              "$ref": 2,
            },
            Object {
              "$ref": 5,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
        Object {
          "$id": 1,
          "defs": Array [
            Object {
              "name": Object {
                "name": "b",
                "range": Array [
                  15,
                  16,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  15,
                  25,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  11,
                  26,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "b",
              "range": Array [
                15,
                16,
              ],
              "type": "Identifier",
            },
          ],
          "name": "b",
          "references": Array [
            Object {
              "$ref": 3,
            },
            Object {
              "$ref": 4,
            },
          ],
          "scope": Object {
            "$ref": 6,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 7,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/multi-line-template-string.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      111,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          111,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/simple-template-string.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      5,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          5,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/single-dollar-sign.src 1`] = `
Object {
  "$id": 3,
  "block": Object {
    "range": Array [
      0,
      13,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 2,
      "block": Object {
        "range": Array [
          0,
          13,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 2,
          },
          "identifier": Object {
            "name": "ts",
            "range": Array [
              4,
              6,
            ],
            "type": "Identifier",
          },
          "kind": "w",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": Object {
            "range": Array [
              9,
              12,
            ],
            "type": "TemplateLiteral",
          },
        },
      ],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 3,
      },
      "variableMap": Object {
        "ts": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 2,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "ts",
                "range": Array [
                  4,
                  6,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  4,
                  12,
                ],
                "type": "VariableDeclarator",
              },
              "parent": Object {
                "range": Array [
                  0,
                  13,
                ],
                "type": "VariableDeclaration",
              },
              "type": "Variable",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "ts",
              "range": Array [
                4,
                6,
              ],
              "type": "Identifier",
            },
          ],
          "name": "ts",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 2,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 3,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/tagged-no-placeholders.src 1`] = `
Object {
  "$id": 2,
  "block": Object {
    "range": Array [
      0,
      10,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 1,
      "block": Object {
        "range": Array [
          0,
          10,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 0,
          "from": Object {
            "$ref": 1,
          },
          "identifier": Object {
            "name": "foo",
            "range": Array [
              0,
              3,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 0,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 2,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 1,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 0,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 2,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/templateStrings/tagged-template-string.src 1`] = `
Object {
  "$id": 9,
  "block": Object {
    "range": Array [
      0,
      76,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 8,
      "block": Object {
        "range": Array [
          0,
          76,
        ],
        "type": "Program",
      },
      "childScopes": Array [
        Object {
          "$id": 7,
          "block": Object {
            "range": Array [
              0,
              43,
            ],
            "type": "FunctionDeclaration",
          },
          "childScopes": Array [],
          "functionExpressionScope": false,
          "isStrict": true,
          "references": Array [
            Object {
              "$id": 5,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "console",
                "range": Array [
                  18,
                  25,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": null,
              "writeExpr": undefined,
            },
            Object {
              "$id": 6,
              "from": Object {
                "$ref": 7,
              },
              "identifier": Object {
                "name": "arguments",
                "range": Array [
                  30,
                  39,
                ],
                "type": "Identifier",
              },
              "kind": "r",
              "resolved": Object {
                "$ref": 4,
              },
              "writeExpr": undefined,
            },
          ],
          "throughReferences": Array [
            Object {
              "$ref": 5,
            },
          ],
          "type": "function",
          "upperScope": Object {
            "$ref": 8,
          },
          "variableMap": Object {
            "arguments": Object {
              "$ref": 4,
            },
          },
          "variableScope": Object {
            "$ref": 7,
          },
          "variables": Array [
            Object {
              "$id": 4,
              "defs": Array [],
              "eslintUsed": undefined,
              "identifiers": Array [],
              "name": "arguments",
              "references": Array [
                Object {
                  "$ref": 6,
                },
              ],
              "scope": Object {
                "$ref": 7,
              },
            },
          ],
        },
      ],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [
        Object {
          "$id": 1,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "tag",
            "range": Array [
              44,
              47,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": Object {
            "$ref": 0,
          },
          "writeExpr": undefined,
        },
        Object {
          "$id": 2,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "a",
            "range": Array [
              55,
              56,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
        Object {
          "$id": 3,
          "from": Object {
            "$ref": 8,
          },
          "identifier": Object {
            "name": "b",
            "range": Array [
              71,
              72,
            ],
            "type": "Identifier",
          },
          "kind": "r",
          "resolved": null,
          "writeExpr": undefined,
        },
      ],
      "throughReferences": Array [
        Object {
          "$ref": 5,
        },
        Object {
          "$ref": 2,
        },
        Object {
          "$ref": 3,
        },
      ],
      "type": "module",
      "upperScope": Object {
        "$ref": 9,
      },
      "variableMap": Object {
        "tag": Object {
          "$ref": 0,
        },
      },
      "variableScope": Object {
        "$ref": 8,
      },
      "variables": Array [
        Object {
          "$id": 0,
          "defs": Array [
            Object {
              "name": Object {
                "name": "tag",
                "range": Array [
                  9,
                  12,
                ],
                "type": "Identifier",
              },
              "node": Object {
                "range": Array [
                  0,
                  43,
                ],
                "type": "FunctionDeclaration",
              },
              "parent": null,
              "type": "FunctionName",
            },
          ],
          "eslintUsed": undefined,
          "identifiers": Array [
            Object {
              "name": "tag",
              "range": Array [
                9,
                12,
              ],
              "type": "Identifier",
            },
          ],
          "name": "tag",
          "references": Array [
            Object {
              "$ref": 1,
            },
          ],
          "scope": Object {
            "$ref": 8,
          },
        },
      ],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [
    Object {
      "$ref": 5,
    },
    Object {
      "$ref": 2,
    },
    Object {
      "$ref": 3,
    },
  ],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 9,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/unicodeCodePointEscapes/basic-string-literal.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      19,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          19,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/unicodeCodePointEscapes/complex-string-literal.src 1`] = `
Object {
  "$id": 1,
  "block": Object {
    "range": Array [
      0,
      27,
    ],
    "type": "Program",
  },
  "childScopes": Array [
    Object {
      "$id": 0,
      "block": Object {
        "range": Array [
          0,
          27,
        ],
        "type": "Program",
      },
      "childScopes": Array [],
      "functionExpressionScope": false,
      "isStrict": true,
      "references": Array [],
      "throughReferences": Array [],
      "type": "module",
      "upperScope": Object {
        "$ref": 1,
      },
      "variableMap": Object {},
      "variableScope": Object {
        "$ref": 0,
      },
      "variables": Array [],
    },
  ],
  "functionExpressionScope": false,
  "isStrict": false,
  "references": Array [],
  "throughReferences": Array [],
  "type": "global",
  "upperScope": null,
  "variableMap": Object {},
  "variableScope": Object {
    "$ref": 1,
  },
  "variables": Array [],
}
`;

exports[`javascript fixtures/unicodeCodePointEscapes/invalid-empty-escape.src 1`] = `"Hexadecimal digit expected."`;

exports[`javascript fixtures/unicodeCodePointEscapes/invalid-too-large-escape.src 1`] = `"An extended Unicode escape value must be between 0x0 and 0x10FFFF inclusive."`;
