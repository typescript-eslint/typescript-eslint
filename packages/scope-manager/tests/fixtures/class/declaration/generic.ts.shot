// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`class declaration generic 1`] = `
ScopeManager {
  variables: Array [
    Variable$1 {
      defs: Array [
        ClassNameDefinition$1 {
          name: Identifier<"Foo">,
          node: ClassDeclaration$1,
        },
      ],
      name: "Foo",
      references: Array [],
      isValueVariable: true,
      isTypeVariable: true,
    },
    Variable$2 {
      defs: Array [
        ClassNameDefinition$2 {
          name: Identifier<"Foo">,
          node: ClassDeclaration$1,
        },
      ],
      name: "Foo",
      references: Array [],
      isValueVariable: true,
      isTypeVariable: true,
    },
    Variable$3 {
      defs: Array [
        TypeDefinition$3 {
          name: Identifier<"A">,
          node: TSTypeParameter$2,
        },
      ],
      name: "A",
      references: Array [],
      isValueVariable: false,
      isTypeVariable: true,
    },
    Variable$4 {
      defs: Array [
        TypeDefinition$4 {
          name: Identifier<"Unresolved">,
          node: TSTypeAliasDeclaration$3,
        },
      ],
      name: "Unresolved",
      references: Array [],
      isValueVariable: false,
      isTypeVariable: true,
    },
  ],
  scopes: Array [
    GlobalScope$1 {
      block: Program$4,
      isStrict: false,
      references: Array [
        Reference$1 {
          identifier: Identifier<"A">,
          isTypeReference: true,
          isValueReference: false,
          resolved: null,
        },
      ],
      set: Map {
        "Foo" => Variable$1,
        "Unresolved" => Variable$4,
      },
      type: "global",
      upper: null,
      variables: Array [
        Variable$1,
        Variable$4,
      ],
    },
    ClassScope$2 {
      block: ClassDeclaration$1,
      isStrict: true,
      references: Array [],
      set: Map {
        "Foo" => Variable$2,
        "A" => Variable$3,
      },
      type: "class",
      upper: GlobalScope$1,
      variables: Array [
        Variable$2,
        Variable$3,
      ],
    },
  ],
}
`;
