// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`type-declaration signatures method-computed-name2 1`] = `
ScopeManager {
  variables: [
    ImplicitGlobalConstTypeVariable,
    Variable$2 {
      defs: [
        TSEnumNameDefinition$1 {
          name: Identifier<"Foo">,
          node: TSEnumDeclaration$1,
        },
      ],
      name: "Foo",
      references: [
        Reference$1 {
          identifier: Identifier<"Foo">,
          isRead: true,
          isTypeReference: false,
          isValueReference: true,
          isWrite: false,
          resolved: Variable$2,
        },
      ],
      isValueVariable: true,
      isTypeVariable: true,
    },
    Variable$3 {
      defs: [
        TSEnumMemberDefinition$2 {
          name: Identifier<"a">,
          node: TSEnumMember$2,
        },
      ],
      name: "a",
      references: [],
      isValueVariable: true,
      isTypeVariable: true,
    },
    Variable$4 {
      defs: [
        TypeDefinition$3 {
          name: Identifier<"A">,
          node: TSTypeAliasDeclaration$3,
        },
      ],
      name: "A",
      references: [],
      isValueVariable: false,
      isTypeVariable: true,
    },
  ],
  scopes: [
    GlobalScope$1 {
      block: Program$4,
      isStrict: false,
      references: [
        Reference$1,
      ],
      set: Map {
        "const" => ImplicitGlobalConstTypeVariable,
        "Foo" => Variable$2,
        "A" => Variable$4,
      },
      type: "global",
      upper: null,
      variables: [
        ImplicitGlobalConstTypeVariable,
        Variable$2,
        Variable$4,
      ],
    },
    TSEnumScope$2 {
      block: TSEnumDeclaration$1,
      isStrict: true,
      references: [],
      set: Map {
        "a" => Variable$3,
      },
      type: "tsEnum",
      upper: GlobalScope$1,
      variables: [
        Variable$3,
      ],
    },
    FunctionTypeScope$3 {
      block: TSMethodSignature$5,
      isStrict: true,
      references: [],
      set: Map {},
      type: "functionType",
      upper: GlobalScope$1,
      variables: [],
    },
  ],
}
`;
