// THIS CODE WAS AUTOMATICALLY GENERATED
// DO NOT EDIT THIS CODE BY HAND
// RUN THE FOLLOWING COMMAND FROM THE WORKSPACE ROOT TO REGENERATE:
// npx nx generate-lib repo

import type { ImplicitLibVariableOptions } from '../variable';

import { TYPE, TYPE_VALUE } from './base-config';
import { decorators } from './decorators';
import { decorators_legacy } from './decorators.legacy';

export const es5 = {
  ...decorators,
  ...decorators_legacy,
  Array: TYPE_VALUE,
  ArrayBuffer: TYPE_VALUE,
  ArrayBufferConstructor: TYPE,
  ArrayBufferLike: TYPE,
  ArrayBufferTypes: TYPE,
  ArrayBufferView: TYPE,
  ArrayConstructor: TYPE,
  ArrayLike: TYPE,
  Awaited: TYPE,
  Boolean: TYPE_VALUE,
  BooleanConstructor: TYPE,
  CallableFunction: TYPE,
  Capitalize: TYPE,
  ConcatArray: TYPE,
  ConstructorParameters: TYPE,
  DataView: TYPE_VALUE,
  DataViewConstructor: TYPE,
  Date: TYPE_VALUE,
  DateConstructor: TYPE,
  Error: TYPE_VALUE,
  ErrorConstructor: TYPE,
  EvalError: TYPE_VALUE,
  EvalErrorConstructor: TYPE,
  Exclude: TYPE,
  Extract: TYPE,
  Float32Array: TYPE_VALUE,
  Float32ArrayConstructor: TYPE,
  Float64Array: TYPE_VALUE,
  Float64ArrayConstructor: TYPE,
  Function: TYPE_VALUE,
  FunctionConstructor: TYPE,
  IArguments: TYPE,
  ImportAssertions: TYPE,
  ImportAttributes: TYPE,
  ImportCallOptions: TYPE,
  ImportMeta: TYPE,
  InstanceType: TYPE,
  Int16Array: TYPE_VALUE,
  Int16ArrayConstructor: TYPE,
  Int32Array: TYPE_VALUE,
  Int32ArrayConstructor: TYPE,
  Int8Array: TYPE_VALUE,
  Int8ArrayConstructor: TYPE,
  Intl: TYPE_VALUE,
  JSON: TYPE_VALUE,
  Lowercase: TYPE,
  Math: TYPE_VALUE,
  NewableFunction: TYPE,
  NoInfer: TYPE,
  NonNullable: TYPE,
  Number: TYPE_VALUE,
  NumberConstructor: TYPE,
  Object: TYPE_VALUE,
  ObjectConstructor: TYPE,
  Omit: TYPE,
  OmitThisParameter: TYPE,
  Parameters: TYPE,
  Partial: TYPE,
  Pick: TYPE,
  Promise: TYPE,
  PromiseConstructorLike: TYPE,
  PromiseLike: TYPE,
  PropertyDescriptor: TYPE,
  PropertyDescriptorMap: TYPE,
  PropertyKey: TYPE,
  RangeError: TYPE_VALUE,
  RangeErrorConstructor: TYPE,
  Readonly: TYPE,
  ReadonlyArray: TYPE,
  Record: TYPE,
  ReferenceError: TYPE_VALUE,
  ReferenceErrorConstructor: TYPE,
  RegExp: TYPE_VALUE,
  RegExpConstructor: TYPE,
  RegExpExecArray: TYPE,
  RegExpMatchArray: TYPE,
  Required: TYPE,
  ReturnType: TYPE,
  String: TYPE_VALUE,
  StringConstructor: TYPE,
  Symbol: TYPE,
  SyntaxError: TYPE_VALUE,
  SyntaxErrorConstructor: TYPE,
  TemplateStringsArray: TYPE,
  ThisParameterType: TYPE,
  ThisType: TYPE,
  TypedPropertyDescriptor: TYPE,
  TypeError: TYPE_VALUE,
  TypeErrorConstructor: TYPE,
  Uint16Array: TYPE_VALUE,
  Uint16ArrayConstructor: TYPE,
  Uint32Array: TYPE_VALUE,
  Uint32ArrayConstructor: TYPE,
  Uint8Array: TYPE_VALUE,
  Uint8ArrayConstructor: TYPE,
  Uint8ClampedArray: TYPE_VALUE,
  Uint8ClampedArrayConstructor: TYPE,
  Uncapitalize: TYPE,
  Uppercase: TYPE,
  URIError: TYPE_VALUE,
  URIErrorConstructor: TYPE,
  WeakKey: TYPE,
  WeakKeyTypes: TYPE,
} as Record<string, ImplicitLibVariableOptions>;
