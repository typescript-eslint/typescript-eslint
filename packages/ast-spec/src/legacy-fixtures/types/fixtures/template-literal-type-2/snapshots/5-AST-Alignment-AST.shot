// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures types template-literal-type-2 AST Alignment - AST 1`] = `
"Snapshot Diff:
- TSESTree
+ Babel

  Program {
    type: 'Program',
    body: Array [
      TSTypeAliasDeclaration {
        type: 'TSTypeAliasDeclaration',
        id: Identifier {
          type: 'Identifier',
          name: 'T',

          range: [78, 79],
          loc: {
            start: { column: 5, line: 3 },
            end: { column: 6, line: 3 },
          },
        },
-       typeAnnotation: TSTemplateLiteralType {
-         type: 'TSTemplateLiteralType',
-         quasis: Array [
-           TemplateElement {
-             type: 'TemplateElement',
-             tail: false,
-             value: Object {
-               'cooked': 'foo',
-               'raw': 'foo',
-             },
+       typeAnnotation: TSLiteralType {
+         type: 'TSLiteralType',
+         literal: TemplateLiteral {
+           type: 'TemplateLiteral',
+           expressions: Array [
+             TSLiteralType {
+               type: 'TSLiteralType',
+               literal: Literal {
+                 type: 'Literal',
+                 raw: '\\\\'bar\\\\'',
+                 value: 'bar',

-             range: [82, 88],
-             loc: {
-               start: { column: 9, line: 3 },
-               end: { column: 15, line: 3 },
-             },
-           },
-           TemplateElement {
-             type: 'TemplateElement',
-             tail: true,
-             value: Object {
-               'cooked': '',
-               'raw': '',
-             },
+                 range: [88, 93],
+                 loc: {
+                   start: { column: 15, line: 3 },
+                   end: { column: 20, line: 3 },
+                 },
+               },

-             range: [93, 95],
-             loc: {
-               start: { column: 20, line: 3 },
-               end: { column: 22, line: 3 },
-             },
-           },
-         ],
-         types: Array [
-           TSLiteralType {
-             type: 'TSLiteralType',
-             literal: Literal {
-               type: 'Literal',
-               raw: '\\\\'bar\\\\'',
-               value: 'bar',
-
                range: [88, 93],
                loc: {
                  start: { column: 15, line: 3 },
                  end: { column: 20, line: 3 },
                },
              },
+           ],
+           quasis: Array [
+             TemplateElement {
+               type: 'TemplateElement',
+               tail: false,
+               value: Object {
+                 'cooked': 'foo',
+                 'raw': 'foo',
+               },

-             range: [88, 93],
-             loc: {
-               start: { column: 15, line: 3 },
-               end: { column: 20, line: 3 },
+               range: [82, 88],
+               loc: {
+                 start: { column: 9, line: 3 },
+                 end: { column: 15, line: 3 },
+               },
+             },
+             TemplateElement {
+               type: 'TemplateElement',
+               tail: true,
+               value: Object {
+                 'cooked': '',
+                 'raw': '',
+               },
+
+               range: [93, 95],
+               loc: {
+                 start: { column: 20, line: 3 },
+                 end: { column: 22, line: 3 },
+               },
              },
+           ],
+
+           range: [82, 95],
+           loc: {
+             start: { column: 9, line: 3 },
+             end: { column: 22, line: 3 },
            },
-         ],
+         },

          range: [82, 95],
          loc: {
            start: { column: 9, line: 3 },
            end: { column: 22, line: 3 },
          },
        },

        range: [73, 96],
        loc: {
          start: { column: 0, line: 3 },
          end: { column: 23, line: 3 },
        },
      },
    ],
    sourceType: 'script',

    range: [73, 97],
    loc: {
      start: { column: 0, line: 3 },
      end: { column: 0, line: 4 },
    },
  }"
`;
