// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures types conditional-infer-nested TSESTree - AST 1`] = `
Program {
  type: "Program",
  body: [
    TSTypeAliasDeclaration {
      type: "TSTypeAliasDeclaration",
      declare: false,
      id: Identifier {
        type: "Identifier",
        decorators: [],
        name: "Unpacked",
        optional: false,

        range: [78, 86],
        loc: {
          start: { column: 5, line: 3 },
          end: { column: 13, line: 3 },
        },
      },
      typeAnnotation: TSConditionalType {
        type: "TSConditionalType",
        checkType: TSTypeReference {
          type: "TSTypeReference",
          typeName: Identifier {
            type: "Identifier",
            decorators: [],
            name: "T",
            optional: false,

            range: [92, 93],
            loc: {
              start: { column: 19, line: 3 },
              end: { column: 20, line: 3 },
            },
          },

          range: [92, 93],
          loc: {
            start: { column: 19, line: 3 },
            end: { column: 20, line: 3 },
          },
        },
        extendsType: TSArrayType {
          type: "TSArrayType",
          elementType: TSInferType {
            type: "TSInferType",
            typeParameter: TSTypeParameter {
              type: "TSTypeParameter",
              const: false,
              in: false,
              name: Identifier {
                type: "Identifier",
                decorators: [],
                name: "U",
                optional: false,

                range: [109, 110],
                loc: {
                  start: { column: 36, line: 3 },
                  end: { column: 37, line: 3 },
                },
              },
              out: false,

              range: [109, 110],
              loc: {
                start: { column: 36, line: 3 },
                end: { column: 37, line: 3 },
              },
            },

            range: [103, 110],
            loc: {
              start: { column: 30, line: 3 },
              end: { column: 37, line: 3 },
            },
          },

          range: [102, 113],
          loc: {
            start: { column: 29, line: 3 },
            end: { column: 40, line: 3 },
          },
        },
        falseType: TSConditionalType {
          type: "TSConditionalType",
          checkType: TSTypeReference {
            type: "TSTypeReference",
            typeName: Identifier {
              type: "Identifier",
              decorators: [],
              name: "T",
              optional: false,

              range: [124, 125],
              loc: {
                start: { column: 4, line: 5 },
                end: { column: 5, line: 5 },
              },
            },

            range: [124, 125],
            loc: {
              start: { column: 4, line: 5 },
              end: { column: 5, line: 5 },
            },
          },
          extendsType: TSInferType {
            type: "TSInferType",
            typeParameter: TSTypeParameter {
              type: "TSTypeParameter",
              const: false,
              in: false,
              name: Identifier {
                type: "Identifier",
                decorators: [],
                name: "U",
                optional: false,

                range: [140, 141],
                loc: {
                  start: { column: 20, line: 5 },
                  end: { column: 21, line: 5 },
                },
              },
              out: false,

              range: [140, 141],
              loc: {
                start: { column: 20, line: 5 },
                end: { column: 21, line: 5 },
              },
            },

            range: [134, 141],
            loc: {
              start: { column: 14, line: 5 },
              end: { column: 21, line: 5 },
            },
          },
          falseType: TSConditionalType {
            type: "TSConditionalType",
            checkType: TSTypeReference {
              type: "TSTypeReference",
              typeName: Identifier {
                type: "Identifier",
                decorators: [],
                name: "T",
                optional: false,

                range: [156, 157],
                loc: {
                  start: { column: 6, line: 7 },
                  end: { column: 7, line: 7 },
                },
              },

              range: [156, 157],
              loc: {
                start: { column: 6, line: 7 },
                end: { column: 7, line: 7 },
              },
            },
            extendsType: TSTypeReference {
              type: "TSTypeReference",
              typeArguments: TSTypeParameterInstantiation {
                type: "TSTypeParameterInstantiation",
                params: [
                  TSInferType {
                    type: "TSInferType",
                    typeParameter: TSTypeParameter {
                      type: "TSTypeParameter",
                      const: false,
                      in: false,
                      name: Identifier {
                        type: "Identifier",
                        decorators: [],
                        name: "U",
                        optional: false,

                        range: [180, 181],
                        loc: {
                          start: { column: 30, line: 7 },
                          end: { column: 31, line: 7 },
                        },
                      },
                      out: false,

                      range: [180, 181],
                      loc: {
                        start: { column: 30, line: 7 },
                        end: { column: 31, line: 7 },
                      },
                    },

                    range: [174, 181],
                    loc: {
                      start: { column: 24, line: 7 },
                      end: { column: 31, line: 7 },
                    },
                  },
                ],

                range: [173, 182],
                loc: {
                  start: { column: 23, line: 7 },
                  end: { column: 32, line: 7 },
                },
              },
              typeName: Identifier {
                type: "Identifier",
                decorators: [],
                name: "Promise",
                optional: false,

                range: [166, 173],
                loc: {
                  start: { column: 16, line: 7 },
                  end: { column: 23, line: 7 },
                },
              },

              range: [166, 182],
              loc: {
                start: { column: 16, line: 7 },
                end: { column: 32, line: 7 },
              },
            },
            falseType: TSTypeReference {
              type: "TSTypeReference",
              typeName: Identifier {
                type: "Identifier",
                decorators: [],
                name: "T",
                optional: false,

                range: [201, 202],
                loc: {
                  start: { column: 8, line: 9 },
                  end: { column: 9, line: 9 },
                },
              },

              range: [201, 202],
              loc: {
                start: { column: 8, line: 9 },
                end: { column: 9, line: 9 },
              },
            },
            trueType: TSTypeReference {
              type: "TSTypeReference",
              typeName: Identifier {
                type: "Identifier",
                decorators: [],
                name: "U",
                optional: false,

                range: [191, 192],
                loc: {
                  start: { column: 8, line: 8 },
                  end: { column: 9, line: 8 },
                },
              },

              range: [191, 192],
              loc: {
                start: { column: 8, line: 8 },
                end: { column: 9, line: 8 },
              },
            },

            range: [156, 202],
            loc: {
              start: { column: 6, line: 7 },
              end: { column: 9, line: 9 },
            },
          },
          trueType: TSTypeReference {
            type: "TSTypeReference",
            typeName: Identifier {
              type: "Identifier",
              decorators: [],
              name: "U",
              optional: false,

              range: [148, 149],
              loc: {
                start: { column: 6, line: 6 },
                end: { column: 7, line: 6 },
              },
            },

            range: [148, 149],
            loc: {
              start: { column: 6, line: 6 },
              end: { column: 7, line: 6 },
            },
          },

          range: [124, 202],
          loc: {
            start: { column: 4, line: 5 },
            end: { column: 9, line: 9 },
          },
        },
        trueType: TSTypeReference {
          type: "TSTypeReference",
          typeName: Identifier {
            type: "Identifier",
            decorators: [],
            name: "U",
            optional: false,

            range: [118, 119],
            loc: {
              start: { column: 4, line: 4 },
              end: { column: 5, line: 4 },
            },
          },

          range: [118, 119],
          loc: {
            start: { column: 4, line: 4 },
            end: { column: 5, line: 4 },
          },
        },

        range: [92, 202],
        loc: {
          start: { column: 19, line: 3 },
          end: { column: 9, line: 9 },
        },
      },
      typeParameters: TSTypeParameterDeclaration {
        type: "TSTypeParameterDeclaration",
        params: [
          TSTypeParameter {
            type: "TSTypeParameter",
            const: false,
            in: false,
            name: Identifier {
              type: "Identifier",
              decorators: [],
              name: "T",
              optional: false,

              range: [87, 88],
              loc: {
                start: { column: 14, line: 3 },
                end: { column: 15, line: 3 },
              },
            },
            out: false,

            range: [87, 88],
            loc: {
              start: { column: 14, line: 3 },
              end: { column: 15, line: 3 },
            },
          },
        ],

        range: [86, 89],
        loc: {
          start: { column: 13, line: 3 },
          end: { column: 16, line: 3 },
        },
      },

      range: [73, 203],
      loc: {
        start: { column: 0, line: 3 },
        end: { column: 10, line: 9 },
      },
    },
  ],
  sourceType: "script",

  range: [73, 204],
  loc: {
    start: { column: 0, line: 3 },
    end: { column: 0, line: 10 },
  },
}
`;
