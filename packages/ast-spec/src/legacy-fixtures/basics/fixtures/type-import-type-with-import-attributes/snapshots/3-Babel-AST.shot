// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures basics type-import-type-with-import-attributes Babel - AST 1`] = `
Program {
  type: "Program",
  body: [
    TSTypeAliasDeclaration {
      type: "TSTypeAliasDeclaration",
      id: Identifier {
        type: "Identifier",
        name: "A",

        range: [78, 79],
        loc: {
          start: { column: 5, line: 3 },
          end: { column: 6, line: 3 },
        },
      },
      typeAnnotation: TSTypeQuery {
        type: "TSTypeQuery",
        exprName: TSImportType {
          type: "TSImportType",
          argument: Literal {
            type: "Literal",
            raw: ""A"",
            value: "A",

            range: [96, 99],
            loc: {
              start: { column: 23, line: 3 },
              end: { column: 26, line: 3 },
            },
          },
          options: ObjectExpression {
            type: "ObjectExpression",
            properties: [
              Property {
                type: "Property",
                computed: false,
                key: Identifier {
                  type: "Identifier",
                  name: "with",

                  range: [103, 107],
                  loc: {
                    start: { column: 30, line: 3 },
                    end: { column: 34, line: 3 },
                  },
                },
                kind: "init",
                method: false,
                shorthand: false,
                value: ObjectExpression {
                  type: "ObjectExpression",
                  properties: [
                    Property {
                      type: "Property",
                      computed: false,
                      key: Identifier {
                        type: "Identifier",
                        name: "type",

                        range: [111, 115],
                        loc: {
                          start: { column: 38, line: 3 },
                          end: { column: 42, line: 3 },
                        },
                      },
                      kind: "init",
                      method: false,
                      shorthand: false,
                      value: Literal {
                        type: "Literal",
                        raw: ""json"",
                        value: "json",

                        range: [117, 123],
                        loc: {
                          start: { column: 44, line: 3 },
                          end: { column: 50, line: 3 },
                        },
                      },

                      range: [111, 123],
                      loc: {
                        start: { column: 38, line: 3 },
                        end: { column: 50, line: 3 },
                      },
                    },
                  ],

                  range: [109, 125],
                  loc: {
                    start: { column: 36, line: 3 },
                    end: { column: 52, line: 3 },
                  },
                },

                range: [103, 125],
                loc: {
                  start: { column: 30, line: 3 },
                  end: { column: 52, line: 3 },
                },
              },
            ],

            range: [101, 127],
            loc: {
              start: { column: 28, line: 3 },
              end: { column: 54, line: 3 },
            },
          },

          range: [89, 128],
          loc: {
            start: { column: 16, line: 3 },
            end: { column: 55, line: 3 },
          },
        },

        range: [82, 128],
        loc: {
          start: { column: 9, line: 3 },
          end: { column: 55, line: 3 },
        },
      },

      range: [73, 129],
      loc: {
        start: { column: 0, line: 3 },
        end: { column: 56, line: 3 },
      },
    },
  ],
  sourceType: "script",

  range: [73, 130],
  loc: {
    start: { column: 0, line: 3 },
    end: { column: 0, line: 4 },
  },
}
`;
