// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures basics class-with-optional-methods Babel - AST 1`] = `
Program {
  type: "Program",
  body: [
    ClassDeclaration {
      type: "ClassDeclaration",
      body: ClassBody {
        type: "ClassBody",
        body: [
          MethodDefinition {
            type: "MethodDefinition",
            computed: false,
            key: Identifier {
              type: "Identifier",
              name: "foo",

              range: [87, 90],
              loc: {
                start: { column: 2, line: 4 },
                end: { column: 5, line: 4 },
              },
            },
            kind: "method",
            optional: true,
            static: false,
            value: FunctionExpression {
              type: "FunctionExpression",
              async: false,
              expression: false,
              generator: false,
              id: null,
              params: [],

              range: [91, 94],
              loc: {
                start: { column: 6, line: 4 },
                end: { column: 9, line: 4 },
              },
            },

            range: [87, 94],
            loc: {
              start: { column: 2, line: 4 },
              end: { column: 9, line: 4 },
            },
          },
          MethodDefinition {
            type: "MethodDefinition",
            computed: false,
            key: Identifier {
              type: "Identifier",
              name: "bar",

              range: [97, 100],
              loc: {
                start: { column: 2, line: 5 },
                end: { column: 5, line: 5 },
              },
            },
            kind: "method",
            optional: true,
            static: false,
            value: FunctionExpression {
              type: "FunctionExpression",
              async: false,
              expression: false,
              generator: false,
              id: null,
              params: [],
              returnType: TSTypeAnnotation {
                type: "TSTypeAnnotation",
                typeAnnotation: TSStringKeyword {
                  type: "TSStringKeyword",

                  range: [105, 111],
                  loc: {
                    start: { column: 10, line: 5 },
                    end: { column: 16, line: 5 },
                  },
                },

                range: [103, 111],
                loc: {
                  start: { column: 8, line: 5 },
                  end: { column: 16, line: 5 },
                },
              },

              range: [101, 112],
              loc: {
                start: { column: 6, line: 5 },
                end: { column: 17, line: 5 },
              },
            },

            range: [97, 112],
            loc: {
              start: { column: 2, line: 5 },
              end: { column: 17, line: 5 },
            },
          },
          MethodDefinition {
            type: "MethodDefinition",
            accessibility: "private",
            computed: false,
            key: Identifier {
              type: "Identifier",
              name: "baz",

              range: [123, 126],
              loc: {
                start: { column: 10, line: 6 },
                end: { column: 13, line: 6 },
              },
            },
            kind: "method",
            optional: true,
            static: false,
            value: FunctionExpression {
              type: "FunctionExpression",
              async: false,
              expression: false,
              generator: false,
              id: null,
              params: [],
              returnType: TSTypeAnnotation {
                type: "TSTypeAnnotation",
                typeAnnotation: TSStringKeyword {
                  type: "TSStringKeyword",

                  range: [131, 137],
                  loc: {
                    start: { column: 18, line: 6 },
                    end: { column: 24, line: 6 },
                  },
                },

                range: [129, 137],
                loc: {
                  start: { column: 16, line: 6 },
                  end: { column: 24, line: 6 },
                },
              },

              range: [127, 138],
              loc: {
                start: { column: 14, line: 6 },
                end: { column: 25, line: 6 },
              },
            },

            range: [115, 138],
            loc: {
              start: { column: 2, line: 6 },
              end: { column: 25, line: 6 },
            },
          },
        ],

        range: [83, 140],
        loc: {
          start: { column: 10, line: 3 },
          end: { column: 1, line: 7 },
        },
      },
      id: Identifier {
        type: "Identifier",
        name: "Foo",

        range: [79, 82],
        loc: {
          start: { column: 6, line: 3 },
          end: { column: 9, line: 3 },
        },
      },
      superClass: null,

      range: [73, 140],
      loc: {
        start: { column: 0, line: 3 },
        end: { column: 1, line: 7 },
      },
    },
  ],
  sourceType: "script",

  range: [73, 141],
  loc: {
    start: { column: 0, line: 3 },
    end: { column: 0, line: 8 },
  },
}
`;
