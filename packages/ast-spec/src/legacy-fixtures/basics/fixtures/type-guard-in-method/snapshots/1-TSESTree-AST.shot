// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures basics type-guard-in-method TSESTree - AST 1`] = `
Program {
  type: "Program",
  body: [
    ClassDeclaration {
      type: "ClassDeclaration",
      body: ClassBody {
        type: "ClassBody",
        body: [
          MethodDefinition {
            type: "MethodDefinition",
            computed: false,
            key: Identifier {
              type: "Identifier",
              name: "isBar",

              range: [87, 92],
              loc: {
                start: { column: 2, line: 4 },
                end: { column: 7, line: 4 },
              },
            },
            kind: "method",
            override: false,
            static: false,
            value: FunctionExpression {
              type: "FunctionExpression",
              async: false,
              body: BlockStatement {
                type: "BlockStatement",
                body: [
                  ReturnStatement {
                    type: "ReturnStatement",
                    argument: BinaryExpression {
                      type: "BinaryExpression",
                      left: ThisExpression {
                        type: "ThisExpression",

                        range: [124, 128],
                        loc: {
                          start: { column: 11, line: 5 },
                          end: { column: 15, line: 5 },
                        },
                      },
                      operator: "instanceof",
                      right: Identifier {
                        type: "Identifier",
                        name: "Foo",

                        range: [140, 143],
                        loc: {
                          start: { column: 27, line: 5 },
                          end: { column: 30, line: 5 },
                        },
                      },

                      range: [124, 143],
                      loc: {
                        start: { column: 11, line: 5 },
                        end: { column: 30, line: 5 },
                      },
                    },

                    range: [117, 144],
                    loc: {
                      start: { column: 4, line: 5 },
                      end: { column: 31, line: 5 },
                    },
                  },
                ],

                range: [111, 148],
                loc: {
                  start: { column: 26, line: 4 },
                  end: { column: 3, line: 6 },
                },
              },
              expression: false,
              generator: false,
              id: null,
              params: [],
              returnType: TSTypeAnnotation {
                type: "TSTypeAnnotation",
                typeAnnotation: TSTypePredicate {
                  type: "TSTypePredicate",
                  asserts: false,
                  parameterName: TSThisType {
                    type: "TSThisType",

                    range: [96, 100],
                    loc: {
                      start: { column: 11, line: 4 },
                      end: { column: 15, line: 4 },
                    },
                  },
                  typeAnnotation: TSTypeAnnotation {
                    type: "TSTypeAnnotation",
                    typeAnnotation: TSStringKeyword {
                      type: "TSStringKeyword",

                      range: [104, 110],
                      loc: {
                        start: { column: 19, line: 4 },
                        end: { column: 25, line: 4 },
                      },
                    },

                    range: [104, 110],
                    loc: {
                      start: { column: 19, line: 4 },
                      end: { column: 25, line: 4 },
                    },
                  },

                  range: [96, 110],
                  loc: {
                    start: { column: 11, line: 4 },
                    end: { column: 25, line: 4 },
                  },
                },

                range: [94, 110],
                loc: {
                  start: { column: 9, line: 4 },
                  end: { column: 25, line: 4 },
                },
              },

              range: [92, 148],
              loc: {
                start: { column: 7, line: 4 },
                end: { column: 3, line: 6 },
              },
            },

            range: [87, 148],
            loc: {
              start: { column: 2, line: 4 },
              end: { column: 3, line: 6 },
            },
          },
          PropertyDefinition {
            type: "PropertyDefinition",
            computed: false,
            declare: false,
            key: Identifier {
              type: "Identifier",
              name: "isBaz",

              range: [151, 156],
              loc: {
                start: { column: 2, line: 7 },
                end: { column: 7, line: 7 },
              },
            },
            override: false,
            static: false,
            value: ArrowFunctionExpression {
              type: "ArrowFunctionExpression",
              async: false,
              body: BlockStatement {
                type: "BlockStatement",
                body: [
                  ReturnStatement {
                    type: "ReturnStatement",
                    argument: BinaryExpression {
                      type: "BinaryExpression",
                      left: ThisExpression {
                        type: "ThisExpression",

                        range: [194, 198],
                        loc: {
                          start: { column: 11, line: 8 },
                          end: { column: 15, line: 8 },
                        },
                      },
                      operator: "instanceof",
                      right: Identifier {
                        type: "Identifier",
                        name: "Foo",

                        range: [210, 213],
                        loc: {
                          start: { column: 27, line: 8 },
                          end: { column: 30, line: 8 },
                        },
                      },

                      range: [194, 213],
                      loc: {
                        start: { column: 11, line: 8 },
                        end: { column: 30, line: 8 },
                      },
                    },

                    range: [187, 214],
                    loc: {
                      start: { column: 4, line: 8 },
                      end: { column: 31, line: 8 },
                    },
                  },
                ],

                range: [181, 218],
                loc: {
                  start: { column: 32, line: 7 },
                  end: { column: 3, line: 9 },
                },
              },
              expression: false,
              generator: false,
              id: null,
              params: [],
              returnType: TSTypeAnnotation {
                type: "TSTypeAnnotation",
                typeAnnotation: TSTypePredicate {
                  type: "TSTypePredicate",
                  asserts: false,
                  parameterName: TSThisType {
                    type: "TSThisType",

                    range: [163, 167],
                    loc: {
                      start: { column: 14, line: 7 },
                      end: { column: 18, line: 7 },
                    },
                  },
                  typeAnnotation: TSTypeAnnotation {
                    type: "TSTypeAnnotation",
                    typeAnnotation: TSStringKeyword {
                      type: "TSStringKeyword",

                      range: [171, 177],
                      loc: {
                        start: { column: 22, line: 7 },
                        end: { column: 28, line: 7 },
                      },
                    },

                    range: [171, 177],
                    loc: {
                      start: { column: 22, line: 7 },
                      end: { column: 28, line: 7 },
                    },
                  },

                  range: [163, 177],
                  loc: {
                    start: { column: 14, line: 7 },
                    end: { column: 28, line: 7 },
                  },
                },

                range: [161, 177],
                loc: {
                  start: { column: 12, line: 7 },
                  end: { column: 28, line: 7 },
                },
              },

              range: [159, 218],
              loc: {
                start: { column: 10, line: 7 },
                end: { column: 3, line: 9 },
              },
            },

            range: [151, 219],
            loc: {
              start: { column: 2, line: 7 },
              end: { column: 4, line: 9 },
            },
          },
        ],

        range: [83, 221],
        loc: {
          start: { column: 10, line: 3 },
          end: { column: 1, line: 10 },
        },
      },
      id: Identifier {
        type: "Identifier",
        name: "Foo",

        range: [79, 82],
        loc: {
          start: { column: 6, line: 3 },
          end: { column: 9, line: 3 },
        },
      },
      superClass: null,

      range: [73, 221],
      loc: {
        start: { column: 0, line: 3 },
        end: { column: 1, line: 10 },
      },
    },
  ],
  sourceType: "script",

  range: [73, 222],
  loc: {
    start: { column: 0, line: 3 },
    end: { column: 0, line: 11 },
  },
}
`;
