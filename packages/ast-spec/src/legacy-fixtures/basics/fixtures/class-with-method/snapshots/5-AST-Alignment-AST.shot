// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures basics class-with-method AST Alignment - AST 1`] = `
"Snapshot Diff:
- TSESTree
+ Babel

  Program {
    type: 'Program',
    body: Array [
      ClassDeclaration {
        type: 'ClassDeclaration',
-       abstract: false,
        body: ClassBody {
          type: 'ClassBody',
          body: Array [
            MethodDefinition {
              type: 'MethodDefinition',
              computed: false,
-             decorators: Array [],
              key: Identifier {
                type: 'Identifier',
-               decorators: Array [],
                name: 'foo',
-               optional: false,

                range: [85, 88],
                loc: {
                  start: { column: 2, line: 4 },
                  end: { column: 5, line: 4 },
                },
              },
              kind: 'method',
-             optional: false,
-             override: false,
              static: false,
              value: FunctionExpression {
                type: 'FunctionExpression',
                async: false,
                body: BlockStatement {
                  type: 'BlockStatement',
                  body: Array [],

                  range: [99, 101],
                  loc: {
                    start: { column: 16, line: 4 },
                    end: { column: 18, line: 4 },
                  },
                },
-               declare: false,
                expression: false,
                generator: false,
                id: null,
                params: Array [],
                returnType: TSTypeAnnotation {
                  type: 'TSTypeAnnotation',
                  typeAnnotation: TSNumberKeyword {
                    type: 'TSNumberKeyword',

                    range: [92, 98],
                    loc: {
                      start: { column: 9, line: 4 },
                      end: { column: 15, line: 4 },
                    },
                  },

                  range: [90, 98],
                  loc: {
                    start: { column: 7, line: 4 },
                    end: { column: 15, line: 4 },
                  },
                },

                range: [88, 101],
                loc: {
                  start: { column: 5, line: 4 },
                  end: { column: 18, line: 4 },
                },
              },

              range: [85, 101],
              loc: {
                start: { column: 2, line: 4 },
                end: { column: 18, line: 4 },
              },
            },
            MethodDefinition {
              type: 'MethodDefinition',
              computed: false,
-             decorators: Array [],
              key: Identifier {
                type: 'Identifier',
-               decorators: Array [],
                name: 'bar',
-               optional: false,

                range: [104, 107],
                loc: {
                  start: { column: 2, line: 5 },
                  end: { column: 5, line: 5 },
                },
              },
              kind: 'method',
-             optional: false,
-             override: false,
              static: false,
              value: FunctionExpression {
                type: 'FunctionExpression',
                async: false,
                body: BlockStatement {
                  type: 'BlockStatement',
                  body: Array [],

                  range: [113, 115],
                  loc: {
                    start: { column: 11, line: 5 },
                    end: { column: 13, line: 5 },
                  },
                },
-               declare: false,
                expression: false,
                generator: false,
                id: null,
                params: Array [],
                typeParameters: TSTypeParameterDeclaration {
                  type: 'TSTypeParameterDeclaration',
                  params: Array [
                    TSTypeParameter {
                      type: 'TSTypeParameter',
-                     in: false,
-                     name: Identifier {
-                       type: 'Identifier',
-                       decorators: Array [],
-                       name: 'T',
-                       optional: false,
-
-                       range: [108, 109],
-                       loc: {
-                         start: { column: 6, line: 5 },
-                         end: { column: 7, line: 5 },
-                       },
-                     },
-                     out: false,
+                     name: 'T',

                      range: [108, 109],
                      loc: {
                        start: { column: 6, line: 5 },
                        end: { column: 7, line: 5 },
                      },
                    },
                  ],

                  range: [107, 110],
                  loc: {
                    start: { column: 5, line: 5 },
                    end: { column: 8, line: 5 },
                  },
                },

-               range: [107, 115],
+               range: [110, 115],
                loc: {
-                 start: { column: 5, line: 5 },
+                 start: { column: 8, line: 5 },
                  end: { column: 13, line: 5 },
                },
              },

              range: [104, 115],
              loc: {
                start: { column: 2, line: 5 },
                end: { column: 13, line: 5 },
              },
            },
            MethodDefinition {
              type: 'MethodDefinition',
              computed: false,
-             decorators: Array [],
              key: Identifier {
                type: 'Identifier',
-               decorators: Array [],
                name: 'baz',
-               optional: false,

                range: [118, 121],
                loc: {
                  start: { column: 2, line: 6 },
                  end: { column: 5, line: 6 },
                },
              },
              kind: 'method',
-             optional: false,
-             override: false,
              static: false,
              value: FunctionExpression {
                type: 'FunctionExpression',
                async: false,
                body: BlockStatement {
                  type: 'BlockStatement',
                  body: Array [],

                  range: [124, 126],
                  loc: {
                    start: { column: 8, line: 6 },
                    end: { column: 10, line: 6 },
                  },
                },
-               declare: false,
                expression: false,
                generator: false,
                id: null,
                params: Array [],

                range: [121, 126],
                loc: {
                  start: { column: 5, line: 6 },
                  end: { column: 10, line: 6 },
                },
              },

              range: [118, 126],
              loc: {
                start: { column: 2, line: 6 },
                end: { column: 10, line: 6 },
              },
            },
          ],

          range: [81, 128],
          loc: {
            start: { column: 8, line: 3 },
            end: { column: 1, line: 7 },
          },
        },
-       declare: false,
-       decorators: Array [],
        id: Identifier {
          type: 'Identifier',
-         decorators: Array [],
          name: 'C',
-         optional: false,

          range: [79, 80],
          loc: {
            start: { column: 6, line: 3 },
            end: { column: 7, line: 3 },
          },
        },
-       implements: Array [],
        superClass: null,

        range: [73, 128],
        loc: {
          start: { column: 0, line: 3 },
          end: { column: 1, line: 7 },
        },
      },
    ],
    sourceType: 'script',

    range: [73, 129],
    loc: {
      start: { column: 0, line: 3 },
      end: { column: 0, line: 8 },
    },
  }"
`;
