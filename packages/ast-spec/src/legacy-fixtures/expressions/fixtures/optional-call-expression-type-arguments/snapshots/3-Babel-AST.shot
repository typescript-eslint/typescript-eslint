// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures legacy-fixtures expressions optional-call-expression-type-arguments Babel - AST 1`] = `
Program {
  type: "Program",
  body: [
    ExpressionStatement {
      type: "ExpressionStatement",
      expression: ChainExpression {
        type: "ChainExpression",
        expression: CallExpression {
          type: "CallExpression",
          arguments: [],
          callee: MemberExpression {
            type: "MemberExpression",
            computed: false,
            object: Identifier {
              type: "Identifier",
              name: "foo",

              range: [73, 76],
              loc: {
                start: { column: 0, line: 3 },
                end: { column: 3, line: 3 },
              },
            },
            optional: true,
            property: Identifier {
              type: "Identifier",
              name: "bar",

              range: [78, 81],
              loc: {
                start: { column: 5, line: 3 },
                end: { column: 8, line: 3 },
              },
            },

            range: [73, 81],
            loc: {
              start: { column: 0, line: 3 },
              end: { column: 8, line: 3 },
            },
          },
          optional: false,
          typeParameters: TSTypeParameterInstantiation {
            type: "TSTypeParameterInstantiation",
            params: [
              TSTypeReference {
                type: "TSTypeReference",
                typeName: Identifier {
                  type: "Identifier",
                  name: "A",

                  range: [82, 83],
                  loc: {
                    start: { column: 9, line: 3 },
                    end: { column: 10, line: 3 },
                  },
                },

                range: [82, 83],
                loc: {
                  start: { column: 9, line: 3 },
                  end: { column: 10, line: 3 },
                },
              },
            ],

            range: [81, 84],
            loc: {
              start: { column: 8, line: 3 },
              end: { column: 11, line: 3 },
            },
          },

          range: [73, 86],
          loc: {
            start: { column: 0, line: 3 },
            end: { column: 13, line: 3 },
          },
        },

        range: [73, 86],
        loc: {
          start: { column: 0, line: 3 },
          end: { column: 13, line: 3 },
        },
      },

      range: [73, 87],
      loc: {
        start: { column: 0, line: 3 },
        end: { column: 14, line: 3 },
      },
    },
    ExpressionStatement {
      type: "ExpressionStatement",
      expression: ChainExpression {
        type: "ChainExpression",
        expression: CallExpression {
          type: "CallExpression",
          arguments: [],
          callee: MemberExpression {
            type: "MemberExpression",
            computed: false,
            object: Identifier {
              type: "Identifier",
              name: "foo",

              range: [88, 91],
              loc: {
                start: { column: 0, line: 4 },
                end: { column: 3, line: 4 },
              },
            },
            optional: true,
            property: Identifier {
              type: "Identifier",
              name: "bar",

              range: [93, 96],
              loc: {
                start: { column: 5, line: 4 },
                end: { column: 8, line: 4 },
              },
            },

            range: [88, 96],
            loc: {
              start: { column: 0, line: 4 },
              end: { column: 8, line: 4 },
            },
          },
          optional: false,
          typeParameters: TSTypeParameterInstantiation {
            type: "TSTypeParameterInstantiation",
            params: [
              TSNumberKeyword {
                type: "TSNumberKeyword",

                range: [97, 103],
                loc: {
                  start: { column: 9, line: 4 },
                  end: { column: 15, line: 4 },
                },
              },
            ],

            range: [96, 104],
            loc: {
              start: { column: 8, line: 4 },
              end: { column: 16, line: 4 },
            },
          },

          range: [88, 106],
          loc: {
            start: { column: 0, line: 4 },
            end: { column: 18, line: 4 },
          },
        },

        range: [88, 106],
        loc: {
          start: { column: 0, line: 4 },
          end: { column: 18, line: 4 },
        },
      },

      range: [88, 107],
      loc: {
        start: { column: 0, line: 4 },
        end: { column: 19, line: 4 },
      },
    },
  ],
  sourceType: "script",

  range: [73, 108],
  loc: {
    start: { column: 0, line: 3 },
    end: { column: 0, line: 5 },
  },
}
`;
