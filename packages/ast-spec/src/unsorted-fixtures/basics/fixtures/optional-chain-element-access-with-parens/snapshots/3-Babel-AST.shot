// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AST Fixtures unsorted-fixtures basics optional-chain-element-access-with-parens Babel - AST 1`] = `
Program {
  type: "Program",
  body: Array [
    FunctionDeclaration {
      type: "FunctionDeclaration",
      async: false,
      body: BlockStatement {
        type: "BlockStatement",
        body: Array [
          ExpressionStatement {
            type: "ExpressionStatement",
            expression: ChainExpression {
              type: "ChainExpression",
              expression: MemberExpression {
                type: "MemberExpression",
                computed: true,
                object: Identifier {
                  type: "Identifier",
                  name: "one",

                  range: [127, 130],
                  loc: {
                    start: { column: 3, line: 4 },
                    end: { column: 6, line: 4 },
                  },
                },
                optional: true,
                property: Literal {
                  type: "Literal",
                  raw: "2",
                  value: 2,

                  range: [133, 134],
                  loc: {
                    start: { column: 9, line: 4 },
                    end: { column: 10, line: 4 },
                  },
                },

                range: [127, 135],
                loc: {
                  start: { column: 3, line: 4 },
                  end: { column: 11, line: 4 },
                },
              },

              range: [127, 135],
              loc: {
                start: { column: 3, line: 4 },
                end: { column: 11, line: 4 },
              },
            },

            range: [126, 137],
            loc: {
              start: { column: 2, line: 4 },
              end: { column: 13, line: 4 },
            },
          },
          ExpressionStatement {
            type: "ExpressionStatement",
            expression: MemberExpression {
              type: "MemberExpression",
              computed: true,
              object: ChainExpression {
                type: "ChainExpression",
                expression: MemberExpression {
                  type: "MemberExpression",
                  computed: true,
                  object: Identifier {
                    type: "Identifier",
                    name: "one",

                    range: [141, 144],
                    loc: {
                      start: { column: 3, line: 5 },
                      end: { column: 6, line: 5 },
                    },
                  },
                  optional: true,
                  property: Literal {
                    type: "Literal",
                    raw: "2",
                    value: 2,

                    range: [147, 148],
                    loc: {
                      start: { column: 9, line: 5 },
                      end: { column: 10, line: 5 },
                    },
                  },

                  range: [141, 149],
                  loc: {
                    start: { column: 3, line: 5 },
                    end: { column: 11, line: 5 },
                  },
                },

                range: [141, 149],
                loc: {
                  start: { column: 3, line: 5 },
                  end: { column: 11, line: 5 },
                },
              },
              optional: false,
              property: Literal {
                type: "Literal",
                raw: "3",
                value: 3,

                range: [151, 152],
                loc: {
                  start: { column: 13, line: 5 },
                  end: { column: 14, line: 5 },
                },
              },

              range: [140, 153],
              loc: {
                start: { column: 2, line: 5 },
                end: { column: 15, line: 5 },
              },
            },

            range: [140, 154],
            loc: {
              start: { column: 2, line: 5 },
              end: { column: 16, line: 5 },
            },
          },
          ExpressionStatement {
            type: "ExpressionStatement",
            expression: ChainExpression {
              type: "ChainExpression",
              expression: MemberExpression {
                type: "MemberExpression",
                computed: true,
                object: MemberExpression {
                  type: "MemberExpression",
                  computed: true,
                  object: Identifier {
                    type: "Identifier",
                    name: "one",

                    range: [158, 161],
                    loc: {
                      start: { column: 3, line: 6 },
                      end: { column: 6, line: 6 },
                    },
                  },
                  optional: false,
                  property: Literal {
                    type: "Literal",
                    raw: "2",
                    value: 2,

                    range: [162, 163],
                    loc: {
                      start: { column: 7, line: 6 },
                      end: { column: 8, line: 6 },
                    },
                  },

                  range: [158, 164],
                  loc: {
                    start: { column: 3, line: 6 },
                    end: { column: 9, line: 6 },
                  },
                },
                optional: true,
                property: Literal {
                  type: "Literal",
                  raw: "3",
                  value: 3,

                  range: [167, 168],
                  loc: {
                    start: { column: 12, line: 6 },
                    end: { column: 13, line: 6 },
                  },
                },

                range: [158, 169],
                loc: {
                  start: { column: 3, line: 6 },
                  end: { column: 14, line: 6 },
                },
              },

              range: [158, 169],
              loc: {
                start: { column: 3, line: 6 },
                end: { column: 14, line: 6 },
              },
            },

            range: [157, 171],
            loc: {
              start: { column: 2, line: 6 },
              end: { column: 16, line: 6 },
            },
          },
          ExpressionStatement {
            type: "ExpressionStatement",
            expression: MemberExpression {
              type: "MemberExpression",
              computed: true,
              object: ChainExpression {
                type: "ChainExpression",
                expression: MemberExpression {
                  type: "MemberExpression",
                  computed: true,
                  object: MemberExpression {
                    type: "MemberExpression",
                    computed: true,
                    object: Identifier {
                      type: "Identifier",
                      name: "one",

                      range: [175, 178],
                      loc: {
                        start: { column: 3, line: 7 },
                        end: { column: 6, line: 7 },
                      },
                    },
                    optional: false,
                    property: Literal {
                      type: "Literal",
                      raw: "2",
                      value: 2,

                      range: [179, 180],
                      loc: {
                        start: { column: 7, line: 7 },
                        end: { column: 8, line: 7 },
                      },
                    },

                    range: [175, 181],
                    loc: {
                      start: { column: 3, line: 7 },
                      end: { column: 9, line: 7 },
                    },
                  },
                  optional: true,
                  property: Literal {
                    type: "Literal",
                    raw: "3",
                    value: 3,

                    range: [184, 185],
                    loc: {
                      start: { column: 12, line: 7 },
                      end: { column: 13, line: 7 },
                    },
                  },

                  range: [175, 186],
                  loc: {
                    start: { column: 3, line: 7 },
                    end: { column: 14, line: 7 },
                  },
                },

                range: [175, 186],
                loc: {
                  start: { column: 3, line: 7 },
                  end: { column: 14, line: 7 },
                },
              },
              optional: false,
              property: Literal {
                type: "Literal",
                raw: "4",
                value: 4,

                range: [188, 189],
                loc: {
                  start: { column: 16, line: 7 },
                  end: { column: 17, line: 7 },
                },
              },

              range: [174, 190],
              loc: {
                start: { column: 2, line: 7 },
                end: { column: 18, line: 7 },
              },
            },

            range: [174, 191],
            loc: {
              start: { column: 2, line: 7 },
              end: { column: 19, line: 7 },
            },
          },
          ExpressionStatement {
            type: "ExpressionStatement",
            expression: ChainExpression {
              type: "ChainExpression",
              expression: MemberExpression {
                type: "MemberExpression",
                computed: true,
                object: MemberExpression {
                  type: "MemberExpression",
                  computed: true,
                  object: MemberExpression {
                    type: "MemberExpression",
                    computed: true,
                    object: Identifier {
                      type: "Identifier",
                      name: "one",

                      range: [195, 198],
                      loc: {
                        start: { column: 3, line: 8 },
                        end: { column: 6, line: 8 },
                      },
                    },
                    optional: false,
                    property: Literal {
                      type: "Literal",
                      raw: "2",
                      value: 2,

                      range: [199, 200],
                      loc: {
                        start: { column: 7, line: 8 },
                        end: { column: 8, line: 8 },
                      },
                    },

                    range: [195, 201],
                    loc: {
                      start: { column: 3, line: 8 },
                      end: { column: 9, line: 8 },
                    },
                  },
                  optional: true,
                  property: Literal {
                    type: "Literal",
                    raw: "3",
                    value: 3,

                    range: [204, 205],
                    loc: {
                      start: { column: 12, line: 8 },
                      end: { column: 13, line: 8 },
                    },
                  },

                  range: [195, 206],
                  loc: {
                    start: { column: 3, line: 8 },
                    end: { column: 14, line: 8 },
                  },
                },
                optional: true,
                property: Literal {
                  type: "Literal",
                  raw: "4",
                  value: 4,

                  range: [209, 210],
                  loc: {
                    start: { column: 17, line: 8 },
                    end: { column: 18, line: 8 },
                  },
                },

                range: [195, 211],
                loc: {
                  start: { column: 3, line: 8 },
                  end: { column: 19, line: 8 },
                },
              },

              range: [195, 211],
              loc: {
                start: { column: 3, line: 8 },
                end: { column: 19, line: 8 },
              },
            },

            range: [194, 213],
            loc: {
              start: { column: 2, line: 8 },
              end: { column: 21, line: 8 },
            },
          },
          ExpressionStatement {
            type: "ExpressionStatement",
            expression: MemberExpression {
              type: "MemberExpression",
              computed: true,
              object: ChainExpression {
                type: "ChainExpression",
                expression: MemberExpression {
                  type: "MemberExpression",
                  computed: true,
                  object: MemberExpression {
                    type: "MemberExpression",
                    computed: true,
                    object: MemberExpression {
                      type: "MemberExpression",
                      computed: true,
                      object: Identifier {
                        type: "Identifier",
                        name: "one",

                        range: [217, 220],
                        loc: {
                          start: { column: 3, line: 9 },
                          end: { column: 6, line: 9 },
                        },
                      },
                      optional: false,
                      property: Literal {
                        type: "Literal",
                        raw: "2",
                        value: 2,

                        range: [221, 222],
                        loc: {
                          start: { column: 7, line: 9 },
                          end: { column: 8, line: 9 },
                        },
                      },

                      range: [217, 223],
                      loc: {
                        start: { column: 3, line: 9 },
                        end: { column: 9, line: 9 },
                      },
                    },
                    optional: true,
                    property: Literal {
                      type: "Literal",
                      raw: "3",
                      value: 3,

                      range: [226, 227],
                      loc: {
                        start: { column: 12, line: 9 },
                        end: { column: 13, line: 9 },
                      },
                    },

                    range: [217, 228],
                    loc: {
                      start: { column: 3, line: 9 },
                      end: { column: 14, line: 9 },
                    },
                  },
                  optional: true,
                  property: Literal {
                    type: "Literal",
                    raw: "4",
                    value: 4,

                    range: [231, 232],
                    loc: {
                      start: { column: 17, line: 9 },
                      end: { column: 18, line: 9 },
                    },
                  },

                  range: [217, 233],
                  loc: {
                    start: { column: 3, line: 9 },
                    end: { column: 19, line: 9 },
                  },
                },

                range: [217, 233],
                loc: {
                  start: { column: 3, line: 9 },
                  end: { column: 19, line: 9 },
                },
              },
              optional: false,
              property: Literal {
                type: "Literal",
                raw: "5",
                value: 5,

                range: [235, 236],
                loc: {
                  start: { column: 21, line: 9 },
                  end: { column: 22, line: 9 },
                },
              },

              range: [216, 237],
              loc: {
                start: { column: 2, line: 9 },
                end: { column: 23, line: 9 },
              },
            },

            range: [216, 238],
            loc: {
              start: { column: 2, line: 9 },
              end: { column: 24, line: 9 },
            },
          },
        ],

        range: [122, 240],
        loc: {
          start: { column: 49, line: 3 },
          end: { column: 1, line: 10 },
        },
      },
      expression: false,
      generator: false,
      id: Identifier {
        type: "Identifier",
        name: "processOptionalElementParens",

        range: [82, 110],
        loc: {
          start: { column: 9, line: 3 },
          end: { column: 37, line: 3 },
        },
      },
      params: Array [
        Identifier {
          type: "Identifier",
          name: "one",
          optional: true,
          typeAnnotation: TSTypeAnnotation {
            type: "TSTypeAnnotation",
            typeAnnotation: TSAnyKeyword {
              type: "TSAnyKeyword",

              range: [117, 120],
              loc: {
                start: { column: 44, line: 3 },
                end: { column: 47, line: 3 },
              },
            },

            range: [115, 120],
            loc: {
              start: { column: 42, line: 3 },
              end: { column: 47, line: 3 },
            },
          },

          range: [111, 120],
          loc: {
            start: { column: 38, line: 3 },
            end: { column: 47, line: 3 },
          },
        },
      ],

      range: [73, 240],
      loc: {
        start: { column: 0, line: 3 },
        end: { column: 1, line: 10 },
      },
    },
  ],
  sourceType: "script",

  range: [73, 241],
  loc: {
    start: { column: 0, line: 3 },
    end: { column: 0, line: 11 },
  },
}
`;
