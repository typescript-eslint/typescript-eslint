Program {
  type: "Program",
  body: [
    TSTypeAliasDeclaration {
      type: "TSTypeAliasDeclaration",
      declare: false,
      id: Identifier {
        type: "Identifier",
        decorators: [],
        name: "TrailingComma",
        optional: false,

        range: [5, 18],
        loc: {
          start: { column: 5, line: 1 },
          end: { column: 18, line: 1 },
        },
      },
      typeAnnotation: TSImportType {
        type: "TSImportType",
        argument: TSLiteralType {
          type: "TSLiteralType",
          literal: Literal {
            type: "Literal",
            raw: ""A"",
            value: "A",

            range: [28, 31],
            loc: {
              start: { column: 28, line: 1 },
              end: { column: 31, line: 1 },
            },
          },

          range: [28, 31],
          loc: {
            start: { column: 28, line: 1 },
            end: { column: 31, line: 1 },
          },
        },
        options: ObjectExpression {
          type: "ObjectExpression",
          properties: [
            Property {
              type: "Property",
              computed: false,
              key: Identifier {
                type: "Identifier",
                decorators: [],
                name: "with",
                optional: false,

                range: [35, 39],
                loc: {
                  start: { column: 35, line: 1 },
                  end: { column: 39, line: 1 },
                },
              },
              kind: "init",
              method: false,
              optional: false,
              shorthand: false,
              value: ObjectExpression {
                type: "ObjectExpression",
                properties: [
                  Property {
                    type: "Property",
                    computed: false,
                    key: Literal {
                      type: "Literal",
                      raw: ""resolution-mode"",
                      value: "resolution-mode",

                      range: [43, 60],
                      loc: {
                        start: { column: 43, line: 1 },
                        end: { column: 60, line: 1 },
                      },
                    },
                    kind: "init",
                    method: false,
                    optional: false,
                    shorthand: false,
                    value: Literal {
                      type: "Literal",
                      raw: ""import"",
                      value: "import",

                      range: [62, 70],
                      loc: {
                        start: { column: 62, line: 1 },
                        end: { column: 70, line: 1 },
                      },
                    },

                    range: [43, 70],
                    loc: {
                      start: { column: 43, line: 1 },
                      end: { column: 70, line: 1 },
                    },
                  },
                ],

                range: [41, 73],
                loc: {
                  start: { column: 41, line: 1 },
                  end: { column: 73, line: 1 },
                },
              },

              range: [35, 73],
              loc: {
                start: { column: 35, line: 1 },
                end: { column: 73, line: 1 },
              },
            },
          ],

          range: [33, 76],
          loc: {
            start: { column: 33, line: 1 },
            end: { column: 76, line: 1 },
          },
        },
        qualifier: null,
        typeArguments: null,

        range: [21, 78],
        loc: {
          start: { column: 21, line: 1 },
          end: { column: 78, line: 1 },
        },
      },

      range: [0, 79],
      loc: {
        start: { column: 0, line: 1 },
        end: { column: 79, line: 1 },
      },
    },
  ],
  sourceType: "script",

  range: [0, 80],
  loc: {
    start: { column: 0, line: 1 },
    end: { column: 0, line: 2 },
  },
}