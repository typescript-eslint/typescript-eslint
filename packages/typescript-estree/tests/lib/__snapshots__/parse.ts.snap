// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse() general output tokens, comments, locs, and ranges when called with those options 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 4,
                "line": 1,
              },
            },
            "name": "foo",
            "range": Array [
              4,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 13,
                "line": 1,
              },
              "start": Object {
                "column": 10,
                "line": 1,
              },
            },
            "name": "bar",
            "range": Array [
              10,
              13,
            ],
            "type": "Identifier",
          },
          "loc": Object {
            "end": Object {
              "column": 13,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "range": Array [
            4,
            13,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "let",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        14,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "comments": Array [],
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    14,
  ],
  "sourceType": "script",
  "tokens": Array [
    Object {
      "loc": Object {
        "end": Object {
          "column": 3,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        3,
      ],
      "type": "Keyword",
      "value": "let",
    },
    Object {
      "loc": Object {
        "end": Object {
          "column": 7,
          "line": 1,
        },
        "start": Object {
          "column": 4,
          "line": 1,
        },
      },
      "range": Array [
        4,
        7,
      ],
      "type": "Identifier",
      "value": "foo",
    },
    Object {
      "loc": Object {
        "end": Object {
          "column": 9,
          "line": 1,
        },
        "start": Object {
          "column": 8,
          "line": 1,
        },
      },
      "range": Array [
        8,
        9,
      ],
      "type": "Punctuator",
      "value": "=",
    },
    Object {
      "loc": Object {
        "end": Object {
          "column": 13,
          "line": 1,
        },
        "start": Object {
          "column": 10,
          "line": 1,
        },
      },
      "range": Array [
        10,
        13,
      ],
      "type": "Identifier",
      "value": "bar",
    },
    Object {
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 13,
          "line": 1,
        },
      },
      "range": Array [
        13,
        14,
      ],
      "type": "Punctuator",
      "value": ";",
    },
  ],
  "type": "Program",
}
`;

exports[`parse() non string code should correctly convert code to a string for parse() 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "range": Array [
          0,
          5,
        ],
        "raw": "12345",
        "type": "Literal",
        "value": 12345,
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        5,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "comments": Array [],
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    5,
  ],
  "sourceType": "script",
  "tokens": Array [
    Object {
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        5,
      ],
      "type": "Numeric",
      "value": "12345",
    },
  ],
  "type": "Program",
}
`;

exports[`parse() non string code should correctly convert code to a string for parseAndGenerateServices() 1`] = `
Object {
  "body": Array [
    Object {
      "expression": Object {
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "range": Array [
          0,
          5,
        ],
        "raw": "12345",
        "type": "Literal",
        "value": 12345,
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        5,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "comments": Array [],
  "loc": Object {
    "end": Object {
      "column": 5,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    5,
  ],
  "sourceType": "script",
  "tokens": Array [
    Object {
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        5,
      ],
      "type": "Numeric",
      "value": "12345",
    },
  ],
  "type": "Program",
}
`;
