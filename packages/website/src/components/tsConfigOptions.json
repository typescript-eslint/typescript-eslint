[
  {
    "heading": "Interop Constraints",
    "fields": [
      {
        "key": "isolatedModules",
        "label": "Ensure that each file can be safely transpiled without relying on other imports."
      },
      {
        "key": "allowSyntheticDefaultImports",
        "label": "Allow `import x from y` when a module doesn't have a default export."
      },
      {
        "key": "esModuleInterop",
        "label": "Emit additional JavaScript to ease support for importing CommonJS modules. This enables allowSyntheticDefaultImports for type compatibility."
      }
    ]
  },
  {
    "heading": "Type Checking",
    "fields": [
      {
        "key": "strict",
        "label": "Enable all strict type-checking options."
      },
      {
        "key": "noImplicitAny",
        "label": "Enable error reporting for expressions and declarations with an implied any type.."
      },
      {
        "key": "strictNullChecks",
        "label": "When type checking, take into account null and undefined."
      },
      {
        "key": "strictFunctionTypes",
        "label": "When assigning functions, check to ensure parameters and the return values are subtype-compatible."
      },
      {
        "key": "strictBindCallApply",
        "label": "Check that the arguments for bind, call, and apply methods match the original function."
      },
      {
        "key": "strictPropertyInitialization",
        "label": "Check for class properties that are declared but not set in the constructor."
      },
      {
        "key": "noImplicitThis",
        "label": "Enable error reporting when this is given the type any."
      },
      {
        "key": "alwaysStrict",
        "label": "Ensure `use strict` is always emitted."
      },
      {
        "key": "noUnusedLocals",
        "label": "Enable error reporting when a local variables aren't read."
      },
      {
        "key": "noUnusedParameters",
        "label": "Raise an error when a function parameter isn't read."
      },
      {
        "key": "noImplicitReturns",
        "label": "Enable error reporting for codepaths that do not explicitly return in a function."
      },
      {
        "key": "noFallthroughCasesInSwitch",
        "label": "Enable error reporting for fallthrough cases in switch statements."
      },
      {
        "key": "allowUnusedLabels",
        "label": "Disable error reporting for unused labels."
      },
      {
        "key": "allowUnreachableCode",
        "label": "Disable error reporting for unreachable code."
      }
    ]
  },
  {
    "heading": "Language and Environment",
    "fields": [
      {
        "key": "experimentalDecorators",
        "label": "Enable experimental support for TC39 stage 2 draft decorators."
      },
      {
        "key": "emitDecoratorMetadata",
        "label": "Emit design-type metadata for decorated declarations in source files."
      },
      {
        "key": "noLib",
        "label": "Disable including any library files, including the default lib.d.ts."
      }
    ]
  }
]
