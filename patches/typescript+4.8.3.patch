diff --git a/node_modules/typescript/lib/typescript.d.ts b/node_modules/typescript/lib/typescript.d.ts
index 0fd60ae..02f4fe7 100644
--- a/node_modules/typescript/lib/typescript.d.ts
+++ b/node_modules/typescript/lib/typescript.d.ts
@@ -425,8 +425,8 @@ declare namespace ts {
         JSDocFunctionType = 317,
         JSDocVariadicType = 318,
         JSDocNamepathType = 319,
+        /** @deprecated This was only added in 4.7 */
         JSDoc = 320,
-        /** @deprecated Use SyntaxKind.JSDoc */
         JSDocComment = 320,
         JSDocText = 321,
         JSDocTypeLiteral = 322,
@@ -4374,7 +4374,13 @@ declare namespace ts {
     function symbolName(symbol: Symbol): string;
     function getNameOfJSDocTypedef(declaration: JSDocTypedefTag): Identifier | PrivateIdentifier | undefined;
     function getNameOfDeclaration(declaration: Declaration | Expression | undefined): DeclarationName | undefined;
+    /**
+     * @deprecated don't use this directly as it does not exist pre-4.8; instead use getModifiers from `@typescript-eslint/type-utils`.
+     */
     function getDecorators(node: HasDecorators): readonly Decorator[] | undefined;
+    /**
+     * @deprecated don't use this directly as it does not exist pre-4.8; instead use getDecorators from `@typescript-eslint/type-utils`.
+     */
     function getModifiers(node: HasModifiers): readonly Modifier[] | undefined;
     /**
      * Gets the JSDoc parameter tags for the node if present.
@@ -4834,7 +4840,13 @@ declare namespace ts {
 }
 declare namespace ts {
     function setTextRange<T extends TextRange>(range: T, location: TextRange | undefined): T;
+    /**
+     * @deprecated don't use this directly as it does not exist pre-4.8; instead use getModifiers from `@typescript-eslint/type-utils`.
+     */
     function canHaveModifiers(node: Node): node is HasModifiers;
+    /**
+     * @deprecated don't use this directly as it does not exist pre-4.8; instead use getDecorators from `@typescript-eslint/type-utils`.
+     */
     function canHaveDecorators(node: Node): node is HasDecorators;
 }
 declare namespace ts {
@@ -7924,7 +7936,7 @@ declare namespace ts {
          * const decorators = ts.canHaveDecorators(node) ? ts.getDecorators(node) : undefined;
          * ```
          */
-        readonly decorators?: undefined;
+        readonly decorators?: NodeArray<Decorator> | undefined;
         /**
          * @deprecated `modifiers` has been removed from `Node` and moved to the `Node` subtypes that support them.
          * Use `ts.canHaveModifiers()` to test whether a `Node` can have modifiers.
