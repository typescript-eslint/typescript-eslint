// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it should produce the expected lint ouput 1`] = `
Array [
  Object {
    "errorCount": 1,
    "filePath": "/usr/linked/Hello.vue",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": Array [
      Object {
        "column": 25,
        "endColumn": 28,
        "endLine": 33,
        "line": 33,
        "message": "Unexpected any. Specify a different type.",
        "messageId": "unexpectedAny",
        "nodeType": "TSAnyKeyword",
        "ruleId": "@typescript-eslint/no-explicit-any",
        "severity": 2,
        "suggestions": Array [
          Object {
            "desc": "Use \`unknown\` instead, this will force you to explicitly, and safely assert the type is correct.",
            "fix": Object {
              "range": Array [
                648,
                651,
              ],
              "text": "unknown",
            },
            "messageId": "suggestUnknown",
          },
          Object {
            "desc": "Use \`never\` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",
            "fix": Object {
              "range": Array [
                648,
                651,
              ],
              "text": "never",
            },
            "messageId": "suggestNever",
          },
        ],
      },
    ],
    "source": "<!-- Hello.vue -->
<template>
  <div>
    <div>
      <!-- !!!!! expected error !!!!! -->
      Hello {{ (name as any) }}{{ exclamationMarks }}
    </div>
    <button @click=\\"decrement\\">-</button>
    <button @click=\\"increment\\">+</button>
  </div>
</template>

<script lang=\\"ts\\">
import Vue from 'vue';
export default Vue.extend({
  props: ['name', 'initialEnthusiasm'],
  data() {
    return {
      enthusiasm: this.initialEnthusiasm,
    };
  },
  methods: {
    increment() {
      this.enthusiasm++;
    },
    decrement() {
      if (this.enthusiasm > 1) {
        this.enthusiasm--;
      }
    },
  },
  computed: {
    exclamationMarks(): any {
      // !!!!! expected error !!!!!
      return Array(this.enthusiasm + 1).join('!');
    },
  },
});
</script>
",
    "usedDeprecatedRules": Array [],
    "warningCount": 0,
  },
  Object {
    "errorCount": 0,
    "filePath": "/usr/linked/Utility.vue",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": Array [],
    "output": "<script lang=\\"ts\\">
/* https://github.com/typescript-eslint/typescript-eslint/issues/2591 */
/* eslint-disable class-methods-use-this */
export default class Utility {
  get a() {
    const list: Array<string> = [];
    return list;
  }

  get b() {
    const a = this.a;
    return a;
  }
}
</script>
",
    "usedDeprecatedRules": Array [],
    "warningCount": 0,
  },
  Object {
    "errorCount": 0,
    "filePath": "/usr/linked/World.vue",
    "fixableErrorCount": 0,
    "fixableWarningCount": 0,
    "messages": Array [],
    "usedDeprecatedRules": Array [],
    "warningCount": 0,
  },
]
`;
